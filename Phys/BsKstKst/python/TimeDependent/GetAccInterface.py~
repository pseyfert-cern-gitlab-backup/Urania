from ROOT import *
from math import *
import time
import os
from parameters import *
from NW_emptymatrix import *
gROOT.ProcessLine('.x ../../src/TimeDependent/KpiKpiSpectrumNW.cxx++')
gROOT.ProcessLine('.x ../../src/TimeDependent/accpdf.cxx++')
gROOT.ProcessLine('.x ../../src/TimeDependent/MCGenPHSP.cxx++')
gROOT.ProcessLine('.x ../../src/TimeDependent/lhcbStyle.C')
gROOT.Reset()


# ################################################################
# V A R I A B L E S
# ################################################################

# Names of the variables in the ntuples.
m1_name_MC = "B_s0_DTF_KST1_MM"
m2_name_MC = "B_s0_DTF_KST2_MM"
cos1_name_MC = "B_s0_DTF_KST1_COSTHETA"
cos2_name_MC = "B_s0_DTF_KST2_COSTHETA"
phi_name_MC = "B_s0_DTF_B_s0_PHI"
t_name_MC = "B_s0_DTF_B_s0_TRUETAU"

# Observables.
mKp1_MC = RooRealVar(m1_name_MC,"M(K^{+}#pi^{-}) ", 750., 1700.,"MeV/c^{2}")
mKp2_MC = RooRealVar(m2_name_MC,"M(K^{-}#pi^{+}) ", 750., 1700.,"MeV/c^{2}")
mKp1_narrow_MC = RooRealVar(m1_name_MC,"M(K^{+}#pi^{-}) ",900.-150.,900.+150.,"MeV/c^{2}")
mKp2_narrow_MC = RooRealVar(m2_name_MC,"M(K^{-}#pi^{+}) ",900.-150.,900.+150.,"MeV/c^{2}")
cos1_MC = RooRealVar(cos1_name_MC,"cos(#theta_{1})", -1., 1.,"")
cos2_MC = RooRealVar(cos2_name_MC,"cos(#theta_{2})", -1., 1.,"")
phi_MC = RooRealVar(phi_name_MC,"#varphi",-pi,pi,"rad")
t_MC = RooRealVar(t_name_MC,"t_true",0.,12.,"ps")

# Parameters of the fit.
k1_2011_wide = RooRealVar("k1_2011_wide","k1_2011_wide",-0.363950428984,-1.,0.)
k2_2011_wide = RooRealVar("k2_2011_wide","k2_2011_wide",-0.591233116346,-1.,0.)
k3_2011_wide = RooRealVar("k3_2011_wide","k3_2011_wide",-0.000162287437021,-0.1,0.)
k4_2011_wide = RooRealVar("k4_2011_wide","k4_2011_wide",-0.00617497226242,-0.1,0.)
p1_2011_wide = RooRealVar("p1_2011_wide","p1_2011_wide",-0.000257416963069,-0.1,0.)
a_acc_2011_wide = RooRealVar("a_acc_2011_wide","a_acc_2011_wide",1.393,0.,2.)
b_acc_2011_wide = RooRealVar("b_acc_2011_wide","b_acc_2011_wide",0.0473,0.,0.1)
k1_2012_wide = RooRealVar("k1_2012_wide","k1_2012_wide",-0.359076822721,-1.,0.)
k2_2012_wide = RooRealVar("k2_2012_wide","k2_2012_wide",-0.585882892127,-1.,0.)
k3_2012_wide = RooRealVar("k3_2012_wide","k3_2012_wide",-0.000253018793601,-0.1,0.)
k4_2012_wide = RooRealVar("k4_2012_wide","k4_2012_wide",-0.00614023211683,-0.1,0.)
p1_2012_wide = RooRealVar("p1_2012_wide","p1_2012_wide",-0.000217681826821,-0.1,0.)
a_acc_2012_wide = RooRealVar("a_acc_2012_wide","a_acc_2012_wide",1.393,0.,2.)
b_acc_2012_wide = RooRealVar("b_acc_2012_wide","b_acc_2012_wide",0.0473,0.,0.1)
k1_2011_narrow = RooRealVar("k1_2011_narrow","k1_2011_narrow",-0.631741307569,-1.,0.)
k2_2011_narrow = RooRealVar("k2_2011_narrow","k2_2011_narrow",-0.404112585196,-1.,0.)
k3_2011_narrow = RooRealVar("k3_2011_narrow","k3_2011_narrow",-0.000874674740211,-0.1,0.)
k4_2011_narrow = RooRealVar("k4_2011_narrow","k4_2011_narrow",-0.000119319291944,-0.1,0.)
p1_2011_narrow = RooRealVar("p1_2011_narrow","p1_2011_narrow",-0.000331437635605,-0.1,0.)
a_acc_2011_narrow = RooRealVar("a_acc_2011_narrow","a_acc_2011_narrow",1.393,0.,2.)
b_acc_2011_narrow = RooRealVar("b_acc_2011_narrow","b_acc_2011_narrow",0.0473,0.,0.1)
k1_2012_narrow = RooRealVar("k1_2012_narrow","k1_2012_narrow",-0.617734228841,-1.,0.)
k2_2012_narrow = RooRealVar("k2_2012_narrow","k2_2012_narrow",-0.440024563998,-1.,0.)
k3_2012_narrow = RooRealVar("k3_2012_narrow","k3_2012_narrow",-0.000319014825644,-0.1,0.)
k4_2012_narrow = RooRealVar("k4_2012_narrow","k4_2012_narrow",-8.05845755325e-06,-0.1,0.)
p1_2012_narrow = RooRealVar("p1_2012_narrow","p1_2012_narrow",-0.000118168898876,-0.1,0.)
a_acc_2012_narrow = RooRealVar("a_acc_2012_narrow","a_acc_2012_narrow",1.393,0.,2.)
b_acc_2012_narrow = RooRealVar("b_acc_2012_narrow","b_acc_2012_narrow",0.0473,0.,0.1)

# Accurate time integrals.
IT_cosh_accu_2011_wide = RooRealVar("IT_cosh_accu_2011_wide","IT_cosh_accu_2011_wide",1.)
IT_sinh_accu_2011_wide = RooRealVar("IT_sinh_accu_2011_wide","IT_sinh_accu_2011_wide",1.)
IT_cos_accu_2011_wide = RooRealVar("IT_cos_accu_2011_wide","IT_cos_accu_2011_wide",1.)
IT_sin_accu_2011_wide = RooRealVar("IT_sin_accu_2011_wide","IT_sin_accu_2011_wide",1.)
IT_cosh_accu_2012_wide = RooRealVar("IT_cosh_accu_2012_wide","IT_cosh_accu_2012_wide",1.)
IT_sinh_accu_2012_wide = RooRealVar("IT_sinh_accu_2012_wide","IT_sinh_accu_2012_wide",1.)
IT_cos_accu_2012_wide = RooRealVar("IT_cos_accu_2012_wide","IT_cos_accu_2012_wide",1.)
IT_sin_accu_2012_wide = RooRealVar("IT_sin_accu_2012_wide","IT_sin_accu_2012_wide",1.)
IT_cosh_accu_2011_narrow = RooRealVar("IT_cosh_accu_2011_narrow","IT_cosh_accu_2011_narrow",1.)
IT_sinh_accu_2011_narrow = RooRealVar("IT_sinh_accu_2011_narrow","IT_sinh_accu_2011_narrow",1.)
IT_cos_accu_2011_narrow = RooRealVar("IT_cos_accu_2011_narrow","IT_cos_accu_2011_narrow",1.)
IT_sin_accu_2011_narrow = RooRealVar("IT_sin_accu_2011_narrow","IT_sin_accu_2011_narrow",1.)
IT_cosh_accu_2012_narrow = RooRealVar("IT_cosh_accu_2012_narrow","IT_cosh_accu_2012_narrow",1.)
IT_sinh_accu_2012_narrow = RooRealVar("IT_sinh_accu_2012_narrow","IT_sinh_accu_2012_narrow",1.)
IT_cos_accu_2012_narrow = RooRealVar("IT_cos_accu_2012_narrow","IT_cos_accu_2012_narrow",1.)
IT_sin_accu_2012_narrow = RooRealVar("IT_sin_accu_2012_narrow","IT_sin_accu_2012_narrow",1.)

# More variables.
opt_acc = RooRealVar("opt_acc","opt_acc",1)
wide_window_MC = RooRealVar("wide_window_MC","wide_window_MC",1)
opt_genmodel = RooRealVar("opt_genmodel","opt_genmodel",0)
MCweight0 = RooRealVar("MCweight0","MCweight0",1.)
MCweight1 = RooRealVar("MCweight1","MCweight1",1.)
MCweight2 = RooRealVar("MCweight2","MCweight2",1.)
MCweight3 = RooRealVar("MCweight3","MCweight3",1.)
MCweight4 = RooRealVar("MCweight4","MCweight4",1.)

# Datasets.
data1_2011_wide_ = RooDataSet("data1_2011_wide_","data1_2011_wide_",RooArgSet(mKp1_MC,mKp2_MC,MCweight1))
data1_2012_wide_ = RooDataSet("data1_2012_wide_","data1_2012_wide_",RooArgSet(mKp1_MC,mKp2_MC,MCweight1))
data2_2011_wide_ = RooDataSet("data2_2011_wide_","data2_2011_wide_",RooArgSet(cos1_MC,cos2_MC,MCweight2))
data2_2012_wide_ = RooDataSet("data2_2012_wide_","data2_2012_wide_",RooArgSet(cos1_MC,cos2_MC,MCweight2))
data3_2011_wide_ = RooDataSet("data3_2011_wide_","data3_2011_wide_",RooArgSet(phi_MC,MCweight3))
data3_2012_wide_ = RooDataSet("data3_2012_wide_","data3_2012_wide_",RooArgSet(phi_MC,MCweight3))
data4_2011_wide_ = RooDataSet("data4_2011_wide_","data4_2011_wide_",RooArgSet(t_MC,MCweight4))
data4_2012_wide_ = RooDataSet("data4_2012_wide_","data4_2012_wide_",RooArgSet(t_MC,MCweight4))
data1_2011_narrow_ = RooDataSet("data1_2011_narrow_","data1_2011_narrow_",RooArgSet(mKp1_narrow_MC,mKp2_narrow_MC,MCweight1))
data1_2012_narrow_ = RooDataSet("data1_2012_narrow_","data1_2012_narrow_",RooArgSet(mKp1_narrow_MC,mKp2_narrow_MC,MCweight1))
data2_2011_narrow_ = RooDataSet("data2_2011_narrow_","data2_2011_narrow_",RooArgSet(cos1_MC,cos2_MC,MCweight2))
data2_2012_narrow_ = RooDataSet("data2_2012_narrow_","data2_2012_narrow_",RooArgSet(cos1_MC,cos2_MC,MCweight2))
data3_2011_narrow_ = RooDataSet("data3_2011_narrow_","data3_2011_narrow_",RooArgSet(phi_MC,MCweight3))
data3_2012_narrow_ = RooDataSet("data3_2012_narrow_","data3_2012_narrow_",RooArgSet(phi_MC,MCweight3))
data4_2011_narrow_ = RooDataSet("data4_2011_narrow_","data4_2011_narrow_",RooArgSet(t_MC,MCweight4))
data4_2012_narrow_ = RooDataSet("data4_2012_narrow_","data4_2012_narrow_",RooArgSet(t_MC,MCweight4))

# Frames.
frame_m1_MC_2011_wide = mKp1_MC.frame(RooFit.Title("m1_2011_wide"))
frame_m2_MC_2011_wide = mKp2_MC.frame(RooFit.Title("m2_2011_wide"))
frame_cos1_MC_2011_wide = cos1_MC.frame(RooFit.Title("cos1_2011_wide"))
frame_cos2_MC_2011_wide = cos2_MC.frame(RooFit.Title("cos2_2011_wide"))
frame_phi_MC_2011_wide = phi_MC.frame(RooFit.Title("phi_2011_wide"))
frame_t_MC_2011_wide = t_MC.frame(RooFit.Title("t_2011_wide"))
frame_m1_MC_2012_wide = mKp1_MC.frame(RooFit.Title("m1_2012_wide"))
frame_m2_MC_2012_wide = mKp2_MC.frame(RooFit.Title("m2_2012_wide"))
frame_cos1_MC_2012_wide = cos1_MC.frame(RooFit.Title("cos1_2012_wide"))
frame_cos2_MC_2012_wide = cos2_MC.frame(RooFit.Title("cos2_2012_wide"))
frame_phi_MC_2012_wide = phi_MC.frame(RooFit.Title("phi_2012_wide"))
frame_t_MC_2012_wide = t_MC.frame(RooFit.Title("t_2012_wide"))
frame_m1_MC_2011_narrow = mKp1_narrow_MC.frame(RooFit.Title("m1_2011_narrow"))
frame_m2_MC_2011_narrow = mKp2_narrow_MC.frame(RooFit.Title("m2_2011_narrow"))
frame_cos1_MC_2011_narrow = cos1_MC.frame(RooFit.Title("cos1_2011_narrow"))
frame_cos2_MC_2011_narrow = cos2_MC.frame(RooFit.Title("cos2_2011_narrow"))
frame_phi_MC_2011_narrow = phi_MC.frame(RooFit.Title("phi_2011_narrow"))
frame_t_MC_2011_narrow = t_MC.frame(RooFit.Title("t_2011_narrow"))
frame_m1_MC_2012_narrow = mKp1_narrow_MC.frame(RooFit.Title("m1_2012_narrow"))
frame_m2_MC_2012_narrow = mKp2_narrow_MC.frame(RooFit.Title("m2_2012_narrow"))
frame_cos1_MC_2012_narrow = cos1_MC.frame(RooFit.Title("cos1_2012_narrow"))
frame_cos2_MC_2012_narrow = cos2_MC.frame(RooFit.Title("cos2_2012_narrow"))
frame_phi_MC_2012_narrow = phi_MC.frame(RooFit.Title("phi_2012_narrow"))
frame_t_MC_2012_narrow = t_MC.frame(RooFit.Title("t_2012_narrow"))


# ################################################################
# F U N C T I O N S
# ################################################################

def CreateGenPDF():

	PDF_gen = MCGenPHSP("PDF_gen","PDF_gen",wide_window_MC,mKp1_MC,mKp2_MC,t_MC,opt_genmodel)
	model_gen = RooRealSumPdf("model_gen","model_gen",RooArgList(PDF_gen),RooArgList(one))

	return PDF_gen, model_gen


def CreateAccPDF():

	PDF_acc_2011_wide = accpdf("PDF_acc_2011_wide","PDF_acc_2011_wide",mKp1_MC,mKp2_MC,cos1_MC,cos2_MC,phi_MC,t_MC,k1_2011_wide,k2_2011_wide,k3_2011_wide,k4_2011_wide,p1_2011_wide,a_acc_2011_wide,b_acc_2011_wide,opt_acc)
	model_acc_2011_wide = RooRealSumPdf("model_acc_2011_wide","model_acc_2011_wide",RooArgList(PDF_acc_2011_wide),RooArgList(one))
	PDF_acc_2012_wide = accpdf("PDF_acc_2012_wide","PDF_acc_2012_wide",mKp1_MC,mKp2_MC,cos1_MC,cos2_MC,phi_MC,t_MC,k1_2012_wide,k2_2012_wide,k3_2012_wide,k4_2012_wide,p1_2012_wide,a_acc_2012_wide,b_acc_2012_wide,opt_acc)
	model_acc_2012_wide = RooRealSumPdf("model_acc_2012_wide","model_acc_2012_wide",RooArgList(PDF_acc_2012_wide),RooArgList(one))
	PDF_acc_2011_narrow = accpdf("PDF_acc_2011_narrow","PDF_acc_2011_narrow",mKp1_narrow_MC,mKp2_narrow_MC,cos1_MC,cos2_MC,phi_MC,t_MC,k1_2011_narrow,k2_2011_narrow,k3_2011_narrow,k4_2011_narrow,p1_2011_narrow,a_acc_2011_narrow,b_acc_2011_narrow,opt_acc)
	model_acc_2011_narrow = RooRealSumPdf("model_acc_2011_narrow","model_acc_2011_narrow",RooArgList(PDF_acc_2011_narrow),RooArgList(one))
	PDF_acc_2012_narrow = accpdf("PDF_acc_2012_narrow","PDF_acc_2012_narrow",mKp1_narrow_MC,mKp2_narrow_MC,cos1_MC,cos2_MC,phi_MC,t_MC,k1_2012_narrow,k2_2012_narrow,k3_2012_narrow,k4_2012_narrow,p1_2012_narrow,a_acc_2012_narrow,b_acc_2012_narrow,opt_acc)
	model_acc_2012_narrow = RooRealSumPdf("model_acc_2012_narrow","model_acc_2012_narrow",RooArgList(PDF_acc_2012_narrow),RooArgList(one))

	return PDF_acc_2011_wide, PDF_acc_2012_wide, model_acc_2011_wide, model_acc_2012_wide, PDF_acc_2011_narrow, PDF_acc_2012_narrow, model_acc_2011_narrow, model_acc_2012_narrow


def CreatePhysPDF():

	flatacc.setVal(1)
	for argument in options: options_list_aux.add(argument)
	for argument in observables: observables_list_aux.add(argument)
	for argument in observables_narrowwin: observables_list_narrowwin_aux.add(argument)
	for argument in wave_fractions: wave_fractions_list_aux.add(argument)
	for argument in dirCP_asyms: dirCP_asyms_list_aux.add(argument)
	for argument in strong_phases: strong_phases_list_aux.add(argument)
	for argument in weak_phases: weak_phases_list_aux.add(argument)
	for argument in calib_params_aux: calib_params_list_aux.add(argument)
	for argument in sys_studies_aux: sys_studies_list_aux.add(argument)
	for argument in mass_integrals: mass_integrals_list_aux.add(argument)
	for argument in mass_integrals_narrowwin: mass_integrals_list_narrowwin_aux.add(argument)
	for argument in ang_integrals: ang_integrals_list_aux.add(argument)
	for argument in time_integrals: time_integrals_list_aux.add(argument)

	PDF_phys_wide = KpiKpiSpectrumNW("PDF_phys_wide","PDF_phys_wide",options_list_aux,observables_list_aux,wave_fractions_list_aux,dirCP_asyms_list_aux,\
strong_phases_list_aux,weak_phases_list_aux,calib_params_list_aux,sys_studies_list_aux,mass_integrals_list_aux,ang_integrals_list_aux,time_integrals_list_aux)
	PDF_phys_narrow = KpiKpiSpectrumNW("PDF_phys_narrow","PDF_phys_narrow",options_list_aux,observables_list_narrowwin_aux,wave_fractions_list_aux,dirCP_asyms_list_aux,\
strong_phases_list_aux,weak_phases_list_aux,calib_params_list_aux,sys_studies_list_aux,mass_integrals_list_narrowwin_aux,ang_integrals_list_aux,time_integrals_list_aux)

	option.setVal(100)
	integral100_wide = PDF_phys_wide.createIntegral(RooArgSet(mKp1_MC,mKp2_MC))
	Im00.setVal(integral100_wide.getVal())
	option.setVal(101)
	integral101_wide = PDF_phys_wide.createIntegral(RooArgSet(mKp1_MC,mKp2_MC))
	Im01.setVal(integral101_wide.getVal())
	option.setVal(110)
	integral110_wide = PDF_phys_wide.createIntegral(RooArgSet(mKp1_MC,mKp2_MC))
	Im10.setVal(integral110_wide.getVal())
	option.setVal(102)
	integral102_wide = PDF_phys_wide.createIntegral(RooArgSet(mKp1_MC,mKp2_MC))
	Im02.setVal(integral102_wide.getVal())
	option.setVal(120)
	integral120_wide = PDF_phys_wide.createIntegral(RooArgSet(mKp1_MC,mKp2_MC))
	Im20.setVal(integral120_wide.getVal())
	option.setVal(111)
	integral111_wide = PDF_phys_wide.createIntegral(RooArgSet(mKp1_MC,mKp2_MC))
	Im11.setVal(integral111_wide.getVal())
	option.setVal(112)
	integral112_wide = PDF_phys_wide.createIntegral(RooArgSet(mKp1_MC,mKp2_MC))
	Im12.setVal(integral112_wide.getVal())
	option.setVal(121)
	integral121_wide = PDF_phys_wide.createIntegral(RooArgSet(mKp1_MC,mKp2_MC))
	Im21.setVal(integral121_wide.getVal())
	option.setVal(122)
	integral122_wide = PDF_phys_wide.createIntegral(RooArgSet(mKp1_MC,mKp2_MC))
	Im22.setVal(integral122_wide.getVal())
	option.setVal(100)
	integral100_narrow = PDF_phys_narrow.createIntegral(RooArgSet(mKp1_narrow_MC,mKp2_narrow_MC))
	Im00_narrowwin.setVal(integral100_narrow.getVal())
	option.setVal(101)
	integral101_narrow = PDF_phys_narrow.createIntegral(RooArgSet(mKp1_narrow_MC,mKp2_narrow_MC))
	Im01_narrowwin.setVal(integral101_narrow.getVal())
	option.setVal(110)
	integral110_narrow = PDF_phys_narrow.createIntegral(RooArgSet(mKp1_narrow_MC,mKp2_narrow_MC))
	Im10_narrowwin.setVal(integral110_narrow.getVal())
	option.setVal(102)
	integral102_narrow = PDF_phys_narrow.createIntegral(RooArgSet(mKp1_narrow_MC,mKp2_narrow_MC))
	Im02_narrowwin.setVal(integral102_narrow.getVal())
	option.setVal(120)
	integral120_narrow = PDF_phys_narrow.createIntegral(RooArgSet(mKp1_narrow_MC,mKp2_narrow_MC))
	Im20_narrowwin.setVal(integral120_narrow.getVal())
	option.setVal(111)
	integral111_narrow = PDF_phys_narrow.createIntegral(RooArgSet(mKp1_narrow_MC,mKp2_narrow_MC))
	Im11_narrowwin.setVal(integral111_narrow.getVal())
	option.setVal(112)
	integral112_narrow = PDF_phys_narrow.createIntegral(RooArgSet(mKp1_narrow_MC,mKp2_narrow_MC))
	Im12_narrowwin.setVal(integral112_narrow.getVal())
	option.setVal(121)
	integral121_narrow = PDF_phys_narrow.createIntegral(RooArgSet(mKp1_narrow_MC,mKp2_narrow_MC))
	Im21_narrowwin.setVal(integral121_narrow.getVal())
	option.setVal(122)
	integral122_narrow = PDF_phys_narrow.createIntegral(RooArgSet(mKp1_narrow_MC,mKp2_narrow_MC))
	Im22_narrowwin.setVal(integral122_narrow.getVal())

	return PDF_phys_wide, PDF_phys_narrow


def LoadDataVis(file_name_2011,file_name_2012):

	file_in_2011 = TFile(NTUPLE_PATH+file_name_2011+".root")
	tree_full_2011 = file_in_2011.Get("DecayTree")
	file_in_2012 = TFile(NTUPLE_PATH+file_name_2012+".root")
	tree_full_2012 = file_in_2012.Get("DecayTree")

	file_out = TFile(NTUPLE_PATH + "trash.root","RECREATE")
	tree_2011_wide = tree_full_2011.CopyTree(t_name_MC+">=0. && "+t_name_MC+"<=12.")
	tree_2012_wide = tree_full_2012.CopyTree(t_name_MC+">=0. && "+t_name_MC+"<=12.")
	tree_2011_narrow = tree_full_2011.CopyTree("abs("+m1_name_MC+"-900.)<150. && abs("+m2_name_MC+"-900.)<150. && "+t_name_MC+">=0. && "+t_name_MC+"<=12.")
	tree_2012_narrow = tree_full_2012.CopyTree("abs("+m1_name_MC+"-900.)<150. && abs("+m2_name_MC+"-900.)<150. && "+t_name_MC+">=0. && "+t_name_MC+"<=12.")

	PDF_gen,model_gen = CreateGenPDF()

	invN_2011_wide = 1./tree_2011_wide.GetEntries()
	invN_2012_wide = 1./tree_2012_wide.GetEntries()
	invN_2011_narrow = 1./tree_2011_narrow.GetEntries()
	invN_2012_narrow = 1./tree_2012_narrow.GetEntries()

	wide_window_MC.setVal(1)
	for i in tree_2011_wide:
		mKp1_MC.setVal(eval("i."+m1_name_MC))
		mKp2_MC.setVal(eval("i."+m2_name_MC))
		cos1_MC.setVal(eval("i."+cos1_name_MC))
		cos2_MC.setVal(eval("i."+cos2_name_MC))
		phi_MC.setVal(eval("i."+phi_name_MC))
		t_MC.setVal(eval("i."+t_name_MC))
		MCweight1.setVal(invN_2011_wide/PDF_gen.phasespace(eval("i."+m1_name_MC),eval("i."+m2_name_MC)))
		MCweight2.setVal(invN_2011_wide)
		MCweight3.setVal(invN_2011_wide)
		MCweight4.setVal(invN_2011_wide/PDF_gen.timemodel(eval("i."+t_name_MC)))
		data1_2011_wide_.add(RooArgSet(mKp1_MC,mKp2_MC,MCweight1))
		data2_2011_wide_.add(RooArgSet(cos1_MC,cos2_MC,MCweight2))
		data3_2011_wide_.add(RooArgSet(phi_MC,MCweight3))
		data4_2011_wide_.add(RooArgSet(t_MC,MCweight4))
	for i in tree_2012_wide:
		mKp1_MC.setVal(eval("i."+m1_name_MC))
		mKp2_MC.setVal(eval("i."+m2_name_MC))
		cos1_MC.setVal(eval("i."+cos1_name_MC))
		cos2_MC.setVal(eval("i."+cos2_name_MC))
		phi_MC.setVal(eval("i."+phi_name_MC))
		t_MC.setVal(eval("i."+t_name_MC))
		MCweight1.setVal(invN_2012_wide/PDF_gen.phasespace(eval("i."+m1_name_MC),eval("i."+m2_name_MC)))
		MCweight2.setVal(invN_2012_wide)
		MCweight3.setVal(invN_2012_wide)
		MCweight4.setVal(invN_2012_wide/PDF_gen.timemodel(eval("i."+t_name_MC)))
		data1_2012_wide_.add(RooArgSet(mKp1_MC,mKp2_MC,MCweight1))
		data2_2012_wide_.add(RooArgSet(cos1_MC,cos2_MC,MCweight2))
		data3_2012_wide_.add(RooArgSet(phi_MC,MCweight3))
		data4_2012_wide_.add(RooArgSet(t_MC,MCweight4))

	wide_window_MC.setVal(0)
	for i in tree_2011_narrow:
		mKp1_narrow_MC.setVal(eval("i."+m1_name_MC))
		mKp2_narrow_MC.setVal(eval("i."+m2_name_MC))
		cos1_MC.setVal(eval("i."+cos1_name_MC))
		cos2_MC.setVal(eval("i."+cos2_name_MC))
		phi_MC.setVal(eval("i."+phi_name_MC))
		t_MC.setVal(eval("i."+t_name_MC))
		MCweight1.setVal(invN_2011_narrow/PDF_gen.phasespace(eval("i."+m1_name_MC),eval("i."+m2_name_MC)))
		MCweight2.setVal(invN_2011_narrow)
		MCweight3.setVal(invN_2011_narrow)
		MCweight4.setVal(invN_2011_narrow/PDF_gen.timemodel(eval("i."+t_name_MC)))
		data1_2011_narrow_.add(RooArgSet(mKp1_narrow_MC,mKp2_narrow_MC,MCweight1))
		data2_2011_narrow_.add(RooArgSet(cos1_MC,cos2_MC,MCweight2))
		data3_2011_narrow_.add(RooArgSet(phi_MC,MCweight3))
		data4_2011_narrow_.add(RooArgSet(t_MC,MCweight4))
	for i in tree_2012_narrow:
		mKp1_narrow_MC.setVal(eval("i."+m1_name_MC))
		mKp2_narrow_MC.setVal(eval("i."+m2_name_MC))
		cos1_MC.setVal(eval("i."+cos1_name_MC))
		cos2_MC.setVal(eval("i."+cos2_name_MC))
		phi_MC.setVal(eval("i."+phi_name_MC))
		t_MC.setVal(eval("i."+t_name_MC))
		MCweight1.setVal(invN_2012_narrow/PDF_gen.phasespace(eval("i."+m1_name_MC),eval("i."+m2_name_MC)))
		MCweight2.setVal(invN_2012_narrow)
		MCweight3.setVal(invN_2012_narrow)
		MCweight4.setVal(invN_2012_narrow/PDF_gen.timemodel(eval("i."+t_name_MC)))
		data1_2012_narrow_.add(RooArgSet(mKp1_narrow_MC,mKp2_narrow_MC,MCweight1))
		data2_2012_narrow_.add(RooArgSet(cos1_MC,cos2_MC,MCweight2))
		data3_2012_narrow_.add(RooArgSet(phi_MC,MCweight3))
		data4_2012_narrow_.add(RooArgSet(t_MC,MCweight4))

	data1_2011_wide = RooDataSet("data1_2011_wide","data1_2011_wide",data1_2011_wide_,data1_2011_wide_.get(),"","MCweight1")
	data2_2011_wide = RooDataSet("data2_2011_wide","data2_2011_wide",data2_2011_wide_,data2_2011_wide_.get(),"","MCweight2")
	data3_2011_wide = RooDataSet("data3_2011_wide","data3_2011_wide",data3_2011_wide_,data3_2011_wide_.get(),"","MCweight3")
	data4_2011_wide = RooDataSet("data4_2011_wide","data4_2011_wide",data4_2011_wide_,data4_2011_wide_.get(),"","MCweight4")
	data1_2012_wide = RooDataSet("data1_2012_wide","data1_2012_wide",data1_2012_wide_,data1_2012_wide_.get(),"","MCweight1")
	data2_2012_wide = RooDataSet("data2_2012_wide","data2_2012_wide",data2_2012_wide_,data2_2012_wide_.get(),"","MCweight2")
	data3_2012_wide = RooDataSet("data3_2012_wide","data3_2012_wide",data3_2012_wide_,data3_2012_wide_.get(),"","MCweight3")
	data4_2012_wide = RooDataSet("data4_2012_wide","data4_2012_wide",data4_2012_wide_,data4_2012_wide_.get(),"","MCweight4")
	data1_2011_narrow = RooDataSet("data1_2011_narrow","data1_2011_narrow",data1_2011_narrow_,data1_2011_narrow_.get(),"","MCweight1")
	data2_2011_narrow = RooDataSet("data2_2011_narrow","data2_2011_narrow",data2_2011_narrow_,data2_2011_narrow_.get(),"","MCweight2")
	data3_2011_narrow = RooDataSet("data3_2011_narrow","data3_2011_narrow",data3_2011_narrow_,data3_2011_narrow_.get(),"","MCweight3")
	data4_2011_narrow = RooDataSet("data4_2011_narrow","data4_2011_narrow",data4_2011_narrow_,data4_2011_narrow_.get(),"","MCweight4")
	data1_2012_narrow = RooDataSet("data1_2012_narrow","data1_2012_narrow",data1_2012_narrow_,data1_2012_narrow_.get(),"","MCweight1")
	data2_2012_narrow = RooDataSet("data2_2012_narrow","data2_2012_narrow",data2_2012_narrow_,data2_2012_narrow_.get(),"","MCweight2")
	data3_2012_narrow = RooDataSet("data3_2012_narrow","data3_2012_narrow",data3_2012_narrow_,data3_2012_narrow_.get(),"","MCweight3")
	data4_2012_narrow = RooDataSet("data4_2012_narrow","data4_2012_narrow",data4_2012_narrow_,data4_2012_narrow_.get(),"","MCweight4")

	return data1_2011_wide, data1_2012_wide, data2_2011_wide, data2_2012_wide, data3_2011_wide, data3_2012_wide, data4_2011_wide, data4_2012_wide,\
data1_2011_narrow, data1_2012_narrow, data2_2011_narrow, data2_2012_narrow, data3_2011_narrow, data3_2012_narrow, data4_2011_narrow, data4_2012_narrow


def FitnPlotVisAcc(model_acc_2011_wide,model_acc_2012_wide,model_acc_2011_narrow,model_acc_2012_narrow,\
data1_2011_wide,data1_2012_wide,data2_2011_wide,data2_2012_wide,data3_2011_wide,data3_2012_wide,data4_2011_wide,data4_2012_wide,\
data1_2011_narrow,data1_2012_narrow,data2_2011_narrow,data2_2012_narrow,data3_2011_narrow,data3_2012_narrow,data4_2011_narrow,data4_2012_narrow):

	# Fitting.
	opt_acc.setVal(1)
	model_acc_2011_wide.fitTo(data1_2011_wide,RooFit.NumCPU(8),RooFit.Timer(kTRUE),RooFit.SumW2Error(kTRUE),RooFit.Save(kTRUE))
	model_acc_2012_wide.fitTo(data1_2012_wide,RooFit.NumCPU(8),RooFit.Timer(kTRUE),RooFit.SumW2Error(kTRUE),RooFit.Save(kTRUE))
	model_acc_2011_narrow.fitTo(data1_2011_narrow,RooFit.NumCPU(8),RooFit.Timer(kTRUE),RooFit.SumW2Error(kTRUE),RooFit.Save(kTRUE))
	model_acc_2012_narrow.fitTo(data1_2012_narrow,RooFit.NumCPU(8),RooFit.Timer(kTRUE),RooFit.SumW2Error(kTRUE),RooFit.Save(kTRUE))
	opt_acc.setVal(2)
	model_acc_2011_wide.fitTo(data2_2011_wide,RooFit.NumCPU(8),RooFit.Timer(kTRUE),RooFit.SumW2Error(kTRUE),RooFit.Save(kTRUE))
	model_acc_2012_wide.fitTo(data2_2012_wide,RooFit.NumCPU(8),RooFit.Timer(kTRUE),RooFit.SumW2Error(kTRUE),RooFit.Save(kTRUE))
	model_acc_2011_narrow.fitTo(data2_2011_narrow,RooFit.NumCPU(8),RooFit.Timer(kTRUE),RooFit.SumW2Error(kTRUE),RooFit.Save(kTRUE))
	model_acc_2012_narrow.fitTo(data2_2012_narrow,RooFit.NumCPU(8),RooFit.Timer(kTRUE),RooFit.SumW2Error(kTRUE),RooFit.Save(kTRUE))
	opt_acc.setVal(3)
	model_acc_2011_wide.fitTo(data3_2011_wide,RooFit.NumCPU(8),RooFit.Timer(kTRUE),RooFit.SumW2Error(kTRUE),RooFit.Save(kTRUE))
	model_acc_2012_wide.fitTo(data3_2012_wide,RooFit.NumCPU(8),RooFit.Timer(kTRUE),RooFit.SumW2Error(kTRUE),RooFit.Save(kTRUE))
	model_acc_2011_narrow.fitTo(data3_2011_narrow,RooFit.NumCPU(8),RooFit.Timer(kTRUE),RooFit.SumW2Error(kTRUE),RooFit.Save(kTRUE))
	model_acc_2012_narrow.fitTo(data3_2012_narrow,RooFit.NumCPU(8),RooFit.Timer(kTRUE),RooFit.SumW2Error(kTRUE),RooFit.Save(kTRUE))
	opt_acc.setVal(4)
	model_acc_2011_wide.fitTo(data4_2011_wide,RooFit.NumCPU(8),RooFit.Timer(kTRUE),RooFit.SumW2Error(kTRUE),RooFit.Save(kTRUE))
	model_acc_2012_wide.fitTo(data4_2012_wide,RooFit.NumCPU(8),RooFit.Timer(kTRUE),RooFit.SumW2Error(kTRUE),RooFit.Save(kTRUE))
	model_acc_2011_narrow.fitTo(data4_2011_narrow,RooFit.NumCPU(8),RooFit.Timer(kTRUE),RooFit.SumW2Error(kTRUE),RooFit.Save(kTRUE))
	model_acc_2012_narrow.fitTo(data4_2012_narrow,RooFit.NumCPU(8),RooFit.Timer(kTRUE),RooFit.SumW2Error(kTRUE),RooFit.Save(kTRUE))

	# Plotting.
	data1_2011_wide.plotOn(frame_m1_MC_2011_wide,RooFit.Binning(40))
	data1_2011_wide.plotOn(frame_m2_MC_2011_wide,RooFit.Binning(40))
	data2_2011_wide.plotOn(frame_cos1_MC_2011_wide,RooFit.Binning(40))
	data2_2011_wide.plotOn(frame_cos2_MC_2011_wide,RooFit.Binning(40))
	data3_2011_wide.plotOn(frame_phi_MC_2011_wide,RooFit.Binning(40))
	data4_2011_wide.plotOn(frame_t_MC_2011_wide,RooFit.Binning(40))
	data1_2012_wide.plotOn(frame_m1_MC_2012_wide,RooFit.Binning(40))
	data1_2012_wide.plotOn(frame_m2_MC_2012_wide,RooFit.Binning(40))
	data2_2012_wide.plotOn(frame_cos1_MC_2012_wide,RooFit.Binning(40))
	data2_2012_wide.plotOn(frame_cos2_MC_2012_wide,RooFit.Binning(40))
	data3_2012_wide.plotOn(frame_phi_MC_2012_wide,RooFit.Binning(40))
	data4_2012_wide.plotOn(frame_t_MC_2012_wide,RooFit.Binning(40))
	data1_2011_narrow.plotOn(frame_m1_MC_2011_narrow,RooFit.Binning(40))
	data1_2011_narrow.plotOn(frame_m2_MC_2011_narrow,RooFit.Binning(40))
	data2_2011_narrow.plotOn(frame_cos1_MC_2011_narrow,RooFit.Binning(40))
	data2_2011_narrow.plotOn(frame_cos2_MC_2011_narrow,RooFit.Binning(40))
	data3_2011_narrow.plotOn(frame_phi_MC_2011_narrow,RooFit.Binning(40))
	data4_2011_narrow.plotOn(frame_t_MC_2011_narrow,RooFit.Binning(40))
	data1_2012_narrow.plotOn(frame_m1_MC_2012_narrow,RooFit.Binning(40))
	data1_2012_narrow.plotOn(frame_m2_MC_2012_narrow,RooFit.Binning(40))
	data2_2012_narrow.plotOn(frame_cos1_MC_2012_narrow,RooFit.Binning(40))
	data2_2012_narrow.plotOn(frame_cos2_MC_2012_narrow,RooFit.Binning(40))
	data3_2012_narrow.plotOn(frame_phi_MC_2012_narrow,RooFit.Binning(40))
	data4_2012_narrow.plotOn(frame_t_MC_2012_narrow,RooFit.Binning(40))
	opt_acc.setVal(1)
	model_acc_2011_wide.plotOn(frame_m1_MC_2011_wide,RooFit.DrawOption("c"),RooFit.LineColor(kBlue))
	model_acc_2011_wide.plotOn(frame_m2_MC_2011_wide,RooFit.DrawOption("c"),RooFit.LineColor(kBlue))
	model_acc_2012_wide.plotOn(frame_m1_MC_2012_wide,RooFit.DrawOption("c"),RooFit.LineColor(kBlue))
	model_acc_2012_wide.plotOn(frame_m2_MC_2012_wide,RooFit.DrawOption("c"),RooFit.LineColor(kBlue))
	model_acc_2011_narrow.plotOn(frame_m1_MC_2011_narrow,RooFit.DrawOption("c"),RooFit.LineColor(kBlue))
	model_acc_2011_narrow.plotOn(frame_m2_MC_2011_narrow,RooFit.DrawOption("c"),RooFit.LineColor(kBlue))
	model_acc_2012_narrow.plotOn(frame_m1_MC_2012_narrow,RooFit.DrawOption("c"),RooFit.LineColor(kBlue))
	model_acc_2012_narrow.plotOn(frame_m2_MC_2012_narrow,RooFit.DrawOption("c"),RooFit.LineColor(kBlue))
	opt_acc.setVal(2)
	model_acc_2011_wide.plotOn(frame_cos1_MC_2011_wide,RooFit.DrawOption("c"),RooFit.LineColor(kBlue))
	model_acc_2011_wide.plotOn(frame_cos2_MC_2011_wide,RooFit.DrawOption("c"),RooFit.LineColor(kBlue))
	model_acc_2012_wide.plotOn(frame_cos1_MC_2012_wide,RooFit.DrawOption("c"),RooFit.LineColor(kBlue))
	model_acc_2012_wide.plotOn(frame_cos2_MC_2012_wide,RooFit.DrawOption("c"),RooFit.LineColor(kBlue))
	model_acc_2011_narrow.plotOn(frame_cos1_MC_2011_narrow,RooFit.DrawOption("c"),RooFit.LineColor(kBlue))
	model_acc_2011_narrow.plotOn(frame_cos2_MC_2011_narrow,RooFit.DrawOption("c"),RooFit.LineColor(kBlue))
	model_acc_2012_narrow.plotOn(frame_cos1_MC_2012_narrow,RooFit.DrawOption("c"),RooFit.LineColor(kBlue))
	model_acc_2012_narrow.plotOn(frame_cos2_MC_2012_narrow,RooFit.DrawOption("c"),RooFit.LineColor(kBlue))
	opt_acc.setVal(3)
	model_acc_2011_wide.plotOn(frame_phi_MC_2011_wide,RooFit.DrawOption("c"),RooFit.LineColor(kBlue))
	model_acc_2012_wide.plotOn(frame_phi_MC_2012_wide,RooFit.DrawOption("c"),RooFit.LineColor(kBlue))
	model_acc_2011_narrow.plotOn(frame_phi_MC_2011_narrow,RooFit.DrawOption("c"),RooFit.LineColor(kBlue))
	model_acc_2012_narrow.plotOn(frame_phi_MC_2012_narrow,RooFit.DrawOption("c"),RooFit.LineColor(kBlue))
	opt_acc.setVal(4)
	model_acc_2011_wide.plotOn(frame_t_MC_2011_wide,RooFit.DrawOption("c"),RooFit.LineColor(kBlue))
	model_acc_2012_wide.plotOn(frame_t_MC_2012_wide,RooFit.DrawOption("c"),RooFit.LineColor(kBlue))
	model_acc_2011_narrow.plotOn(frame_t_MC_2011_narrow,RooFit.DrawOption("c"),RooFit.LineColor(kBlue))
	model_acc_2012_narrow.plotOn(frame_t_MC_2012_narrow,RooFit.DrawOption("c"),RooFit.LineColor(kBlue))
	cvis_2011_wide = TCanvas("cvis_2011_wide","cvis_2011_wide",1200,600)
	cvis_2011_wide.Divide(3,2)
	cvis_2011_wide.cd(1)
	frame_cos1_MC_2011_wide.Draw()
	cvis_2011_wide.cd(2)
	frame_cos2_MC_2011_wide.Draw()
	cvis_2011_wide.cd(3)
	frame_phi_MC_2011_wide.Draw()
	cvis_2011_wide.cd(4)
	frame_m1_MC_2011_wide.Draw()
	cvis_2011_wide.cd(5)
	frame_m2_MC_2011_wide.Draw()
	cvis_2011_wide.cd(6)
	frame_t_MC_2011_wide.Draw()
	cvis_2012_wide = TCanvas("cvis_2012_wide","cvis_2012_wide",1200,600)
	cvis_2012_wide.Divide(3,2)
	cvis_2012_wide.cd(1)
	frame_cos1_MC_2012_wide.Draw()
	cvis_2012_wide.cd(2)
	frame_cos2_MC_2012_wide.Draw()
	cvis_2012_wide.cd(3)
	frame_phi_MC_2012_wide.Draw()
	cvis_2012_wide.cd(4)
	frame_m1_MC_2012_wide.Draw()
	cvis_2012_wide.cd(5)
	frame_m2_MC_2012_wide.Draw()
	cvis_2012_wide.cd(6)
	frame_t_MC_2012_wide.Draw()
	cvis_2011_narrow = TCanvas("cvis_2011_narrow","cvis_2011_narrow",1200,600)
	cvis_2011_narrow.Divide(3,2)
	cvis_2011_narrow.cd(1)
	frame_cos1_MC_2011_narrow.Draw()
	cvis_2011_narrow.cd(2)
	frame_cos2_MC_2011_narrow.Draw()
	cvis_2011_narrow.cd(3)
	frame_phi_MC_2011_narrow.Draw()
	cvis_2011_narrow.cd(4)
	frame_m1_MC_2011_narrow.Draw()
	cvis_2011_narrow.cd(5)
	frame_m2_MC_2011_narrow.Draw()
	cvis_2011_narrow.cd(6)
	frame_t_MC_2011_narrow.Draw()
	cvis_2012_narrow = TCanvas("cvis_2012_narrow","cvis_2012_narrow",1200,600)
	cvis_2012_narrow.Divide(3,2)
	cvis_2012_narrow.cd(1)
	frame_cos1_MC_2012_narrow.Draw()
	cvis_2012_narrow.cd(2)
	frame_cos2_MC_2012_narrow.Draw()
	cvis_2012_narrow.cd(3)
	frame_phi_MC_2012_narrow.Draw()
	cvis_2012_narrow.cd(4)
	frame_m1_MC_2012_narrow.Draw()
	cvis_2012_narrow.cd(5)
	frame_m2_MC_2012_narrow.Draw()
	cvis_2012_narrow.cd(6)
	frame_t_MC_2012_narrow.Draw()

	return cvis_2011_wide, cvis_2012_wide, cvis_2011_narrow, cvis_2012_narrow


def PrintVisAccPars():

	accpars = 'class accparclass {\n\n  public:\n\n  Double_t k1(Int_t year_opt, Int_t wide_window) {\n    if ((year_opt == 0) && (wide_window == 1)) {return '+str(k1_2011_wide.getVal())+';}\n    else if ((year_opt == 0) && (wide_window == 0)) {return '+str(k1_2011_narrow.getVal())+';}\n    else if ((year_opt == 1) && (wide_window == 1)) {return '+str(k1_2012_wide.getVal())+';}\n    else if ((year_opt == 1) && (wide_window == 0)) {return '+str(k1_2012_narrow.getVal())+';}\n    return 0.;\n    };\n\n  Double_t k2(Int_t year_opt, Int_t wide_window) {\n    if ((year_opt == 0) && (wide_window == 1)) {return '+str(k2_2011_wide.getVal())+';}\n    else if ((year_opt == 0) && (wide_window == 0)) {return '+str(k2_2011_narrow.getVal())+';}\n    else if ((year_opt == 1) && (wide_window == 1)) {return '+str(k2_2012_wide.getVal())+';}\n    else if ((year_opt == 1) && (wide_window == 0)) {return '+str(k2_2012_narrow.getVal())+';}\n    return 0.;\n    };\n\n  Double_t k3(Int_t year_opt, Int_t wide_window) {\n    if ((year_opt == 0) && (wide_window == 1)) {return '+str(k3_2011_wide.getVal())+';}\n    else if ((year_opt == 0) && (wide_window == 0)) {return '+str(k3_2011_narrow.getVal())+';}\n    else if ((year_opt == 1) && (wide_window == 1)) {return '+str(k3_2012_wide.getVal())+';}\n    else if ((year_opt == 1) && (wide_window == 0)) {return '+str(k3_2012_narrow.getVal())+';}\n    return 0.;\n    };\n\n  Double_t k4(Int_t year_opt, Int_t wide_window) {\n    if ((year_opt == 0) && (wide_window == 1)) {return '+str(k4_2011_wide.getVal())+';}\n    else if ((year_opt == 0) && (wide_window == 0)) {return '+str(k4_2011_narrow.getVal())+';}\n    else if ((year_opt == 1) && (wide_window == 1)) {return '+str(k4_2012_wide.getVal())+';}\n    else if ((year_opt == 1) && (wide_window == 0)) {return '+str(k4_2012_narrow.getVal())+';}\n    return 0.;\n    };\n\n  Double_t p1(Int_t year_opt, Int_t wide_window) {\n    if ((year_opt == 0) && (wide_window == 1)) {return '+str(p1_2011_wide.getVal())+';}\n    else if ((year_opt == 0) && (wide_window == 0)) {return '+str(p1_2011_narrow.getVal())+';}\n    else if ((year_opt == 1) && (wide_window == 1)) {return '+str(p1_2012_wide.getVal())+';}\n    else if ((year_opt == 1) && (wide_window == 0)) {return '+str(p1_2012_narrow.getVal())+';}\n    return 0.;\n    };\n\n  Double_t a_acc(Int_t year_opt, Int_t wide_window) {\n    if ((year_opt == 0) && (wide_window == 1)) {return '+str(a_acc_2011_wide.getVal())+';}\n    else if ((year_opt == 0) && (wide_window == 0)) {return '+str(a_acc_2011_narrow.getVal())+';}\n    else if ((year_opt == 1) && (wide_window == 1)) {return '+str(a_acc_2012_wide.getVal())+';}\n    else if ((year_opt == 1) && (wide_window == 0)) {return '+str(a_acc_2012_narrow.getVal())+';}\n    return 0.;\n    };\n\n  Double_t b_acc(Int_t year_opt, Int_t wide_window) {\n    if ((year_opt == 0) && (wide_window == 1)) {return '+str(b_acc_2011_wide.getVal())+';}\n    else if ((year_opt == 0) && (wide_window == 0)) {return '+str(b_acc_2011_narrow.getVal())+';}\n    else if ((year_opt == 1) && (wide_window == 1)) {return '+str(b_acc_2012_wide.getVal())+';}\n    else if ((year_opt == 1) && (wide_window == 0)) {return '+str(b_acc_2012_narrow.getVal())+';}\n    return 0.;\n    };\n\n};'

	fpar = open('../../src/TimeDependent/accparclass.h','w')
	fpar.write(accpars)
	fpar.close()


def LoadDataNW(file_name_2011,file_name_2012):

	file_in_2011 = TFile(NTUPLE_PATH+file_name_2011+".root")
	tree_full_2011 = file_in_2011.Get("DecayTree")
	file_in_2012 = TFile(NTUPLE_PATH+file_name_2012+".root")
	tree_full_2012 = file_in_2012.Get("DecayTree")

	file_out = TFile(NTUPLE_PATH + "trash.root","RECREATE")
	tree_2011_wide = tree_full_2011.CopyTree(t_name_MC+">=0. && "+t_name_MC+"<=12.")
	tree_2012_wide = tree_full_2012.CopyTree(t_name_MC+">=0. && "+t_name_MC+"<=12.")
	tree_2011_narrow = tree_full_2011.CopyTree("abs("+m1_name_MC+"-900.)<150. && abs("+m2_name_MC+"-900.)<150. && "+t_name_MC+">=0. && "+t_name_MC+"<=12.")
	tree_2012_narrow = tree_full_2012.CopyTree("abs("+m1_name_MC+"-900.)<150. && abs("+m2_name_MC+"-900.)<150. && "+t_name_MC+">=0. && "+t_name_MC+"<=12.")

	PDF_gen,model_gen = CreateGenPDF()

	data0_2011_wide = RooDataSet("data0_2011_wide","data0_2011_wide",RooArgSet(mKp1_MC,mKp2_MC,cos1_MC,cos2_MC,phi_MC,MCweight0))
	data0_2012_wide = RooDataSet("data0_2012_wide","data0_2012_wide",RooArgSet(mKp1_MC,mKp2_MC,cos1_MC,cos2_MC,phi_MC,MCweight0))
	data0_2011_narrow = RooDataSet("data0_2011_narrow","data0_2011_narrow",RooArgSet(mKp1_narrow_MC,mKp2_narrow_MC,cos1_MC,cos2_MC,phi_MC,MCweight0))
	data0_2012_narrow = RooDataSet("data0_2012_narrow","data0_2012_narrow",RooArgSet(mKp1_narrow_MC,mKp2_narrow_MC,cos1_MC,cos2_MC,phi_MC,MCweight0))

	wide_window_MC.setVal(1)
	for i in tree_2011_wide:
		mKp1_MC.setVal(eval("i."+m1_name_MC))
		mKp2_MC.setVal(eval("i."+m2_name_MC))
		cos1_MC.setVal(eval("i."+cos1_name_MC))
		cos2_MC.setVal(eval("i."+cos2_name_MC))
		phi_MC.setVal(eval("i."+phi_name_MC))
		MCweight0.setVal(1./PDF_gen.phasespace(eval("i."+m1_name_MC),eval("i."+m2_name_MC)))
		data0_2011_wide.add(RooArgSet(mKp1_MC,mKp2_MC,cos1_MC,cos2_MC,phi_MC,MCweight0))
	for i in tree_2012_wide:
		mKp1_MC.setVal(eval("i."+m1_name_MC))
		mKp2_MC.setVal(eval("i."+m2_name_MC))
		cos1_MC.setVal(eval("i."+cos1_name_MC))
		cos2_MC.setVal(eval("i."+cos2_name_MC))
		phi_MC.setVal(eval("i."+phi_name_MC))
		MCweight0.setVal(1./PDF_gen.phasespace(eval("i."+m1_name_MC),eval("i."+m2_name_MC)))
		data0_2012_wide.add(RooArgSet(mKp1_MC,mKp2_MC,cos1_MC,cos2_MC,phi_MC,MCweight0))

	wide_window_MC.setVal(0)
	for i in tree_2011_narrow:
		mKp1_narrow_MC.setVal(eval("i."+m1_name_MC))
		mKp2_narrow_MC.setVal(eval("i."+m2_name_MC))
		cos1_MC.setVal(eval("i."+cos1_name_MC))
		cos2_MC.setVal(eval("i."+cos2_name_MC))
		phi_MC.setVal(eval("i."+phi_name_MC))
		MCweight0.setVal(1./PDF_gen.phasespace(eval("i."+m1_name_MC),eval("i."+m2_name_MC)))
		data0_2011_narrow.add(RooArgSet(mKp1_narrow_MC,mKp2_narrow_MC,cos1_MC,cos2_MC,phi_MC,MCweight0))
	for i in tree_2012_narrow:
		mKp1_narrow_MC.setVal(eval("i."+m1_name_MC))
		mKp2_narrow_MC.setVal(eval("i."+m2_name_MC))
		cos1_MC.setVal(eval("i."+cos1_name_MC))
		cos2_MC.setVal(eval("i."+cos2_name_MC))
		phi_MC.setVal(eval("i."+phi_name_MC))
		MCweight0.setVal(1./PDF_gen.phasespace(eval("i."+m1_name_MC),eval("i."+m2_name_MC)))
		data0_2012_narrow.add(RooArgSet(mKp1_narrow_MC,mKp2_narrow_MC,cos1_MC,cos2_MC,phi_MC,MCweight0))

	return data0_2011_wide, data0_2012_wide, data0_2011_narrow, data0_2012_narrow


def boolj1j2h(j1,j2,h):

	if ((j1 == 0) and (j2 == 0) and (h == 0)): return 1
	if ((j1 == 0) and (j2 == 1) and (h == 0)): return 1
	if ((j1 == 0) and (j2 == 2) and (h == 0)): return 1
	if ((j1 == 1) and (j2 == 0) and (h == 0)): return 1
	if ((j1 == 1) and (j2 == 1) and (h == 0)): return 1
	if ((j1 == 1) and (j2 == 1) and (h == 1)): return 1
	if ((j1 == 1) and (j2 == 1) and (h == 2)): return 1
	if ((j1 == 1) and (j2 == 2) and (h == 0)): return 1
	if ((j1 == 1) and (j2 == 2) and (h == 1)): return 1
	if ((j1 == 1) and (j2 == 2) and (h == 2)): return 1
	if ((j1 == 2) and (j2 == 0) and (h == 0)): return 1
	if ((j1 == 2) and (j2 == 1) and (h == 0)): return 1
	if ((j1 == 2) and (j2 == 1) and (h == 1)): return 1
	if ((j1 == 2) and (j2 == 1) and (h == 2)): return 1
	if ((j1 == 2) and (j2 == 2) and (h == 0)): return 1
	if ((j1 == 2) and (j2 == 2) and (h == 1)): return 1
	if ((j1 == 2) and (j2 == 2) and (h == 2)): return 1
	if ((j1 == 2) and (j2 == 2) and (h == 3)): return 1
	if ((j1 == 2) and (j2 == 2) and (h == 4)): return 1
	return 0


def boolj1j2hj1pj2php(j1,j2,h,j1p,j2p,hp): 
	 return boolj1j2h(j1,j2,h)*boolj1j2h(j1p,j2p,hp)


def ComputeNW(PDF_phys_wide,PDF_phys_narrow,data0_2011_wide,data0_2012_wide,data0_2011_narrow,data0_2012_narrow):

	print 'Analizing events ...'
	start = time.time()
	counter = 0

	for i in range(data0_2011_wide.numEntries()):
		m1_var = data0_2011_wide.get(i).getRealValue(m1_name_MC)
		m2_var =  data0_2011_wide.get(i).getRealValue(m2_name_MC)
		cos1_var =  data0_2011_wide.get(i).getRealValue(cos1_name_MC)
		cos2_var =  data0_2011_wide.get(i).getRealValue(cos2_name_MC)
		phi_var =  data0_2011_wide.get(i).getRealValue(phi_name_MC)
		norm =  data0_2011_wide.get(i).getRealValue("MCweight0")
		for j1 in range(3):
			for j2 in range(3):
				for h in range(5):
					if (boolj1j2hj1pj2php(j1,j2,h,j1,j2,h) == 1):
						NW[1][0][j1][j2][h][j1][j2][h][0] += norm*PDF_phys_wide.getReCompVal(m1_var,m2_var,cos1_var,cos2_var,phi_var,j1,j2,h,j1,j2,h)
						NW[1][0][j1][j2][h][j1][j2][h][1] += norm*PDF_phys_wide.getImCompVal(m1_var,m2_var,cos1_var,cos2_var,phi_var,j1,j2,h,j1,j2,h)
					for j1p in range(3):
						for j2p in range(3):
							for hp in range(5):
								if ((boolj1j2hj1pj2php(j1,j2,h,j1p,j2p,hp) == 1) and ((j1p+3*j2p+9*hp) < (j1+3*j2+9*h))):
									NW[1][0][j1][j2][h][j1p][j2p][hp][0] += norm*PDF_phys_wide.getReCompVal(m1_var,m2_var,cos1_var,cos2_var,phi_var,j1,j2,h,j1p,j2p,hp)
									NW[1][0][j1][j2][h][j1p][j2p][hp][1] += norm*PDF_phys_wide.getImCompVal(m1_var,m2_var,cos1_var,cos2_var,phi_var,j1,j2,h,j1p,j2p,hp)
		counter += 1
		if (counter%1000 == 0): print str(counter)+' events analyzed (of '+str(data0_2011_wide.numEntries()+data0_2012_wide.numEntries()+data0_2011_narrow.numEntries()+data0_2012_narrow.numEntries())+').'

	for i in range(data0_2012_wide.numEntries()):
		m1_var = data0_2012_wide.get(i).getRealValue(m1_name_MC)
		m2_var =  data0_2012_wide.get(i).getRealValue(m2_name_MC)
		cos1_var =  data0_2012_wide.get(i).getRealValue(cos1_name_MC)
		cos2_var =  data0_2012_wide.get(i).getRealValue(cos2_name_MC)
		phi_var =  data0_2012_wide.get(i).getRealValue(phi_name_MC)
		norm =  data0_2012_wide.get(i).getRealValue("MCweight0")
		for j1 in range(3):
			for j2 in range(3):
				for h in range(5):
					if (boolj1j2hj1pj2php(j1,j2,h,j1,j2,h) == 1):
						NW[1][1][j1][j2][h][j1][j2][h][0] += norm*PDF_phys_wide.getReCompVal(m1_var,m2_var,cos1_var,cos2_var,phi_var,j1,j2,h,j1,j2,h)
						NW[1][1][j1][j2][h][j1][j2][h][1] += norm*PDF_phys_wide.getImCompVal(m1_var,m2_var,cos1_var,cos2_var,phi_var,j1,j2,h,j1,j2,h)
					for j1p in range(3):
						for j2p in range(3):
							for hp in range(5):
								if ((boolj1j2hj1pj2php(j1,j2,h,j1p,j2p,hp) == 1) and ((j1p+3*j2p+9*hp) < (j1+3*j2+9*h))):
									NW[1][1][j1][j2][h][j1p][j2p][hp][0] += norm*PDF_phys_wide.getReCompVal(m1_var,m2_var,cos1_var,cos2_var,phi_var,j1,j2,h,j1p,j2p,hp)
									NW[1][1][j1][j2][h][j1p][j2p][hp][1] += norm*PDF_phys_wide.getImCompVal(m1_var,m2_var,cos1_var,cos2_var,phi_var,j1,j2,h,j1p,j2p,hp)
		counter += 1
		if (counter%1000 == 0): print str(counter)+' events analyzed (of '+str(data0_2011_wide.numEntries()+data0_2012_wide.numEntries()+data0_2011_narrow.numEntries()+data0_2012_narrow.numEntries())+').'

	for i in range(data0_2011_narrow.numEntries()):
		m1_var = data0_2011_narrow.get(i).getRealValue(m1_name_MC)
		m2_var =  data0_2011_narrow.get(i).getRealValue(m2_name_MC)
		cos1_var =  data0_2011_narrow.get(i).getRealValue(cos1_name_MC)
		cos2_var =  data0_2011_narrow.get(i).getRealValue(cos2_name_MC)
		phi_var =  data0_2011_narrow.get(i).getRealValue(phi_name_MC)
		norm =  data0_2011_narrow.get(i).getRealValue("MCweight0")
		for j1 in range(2):
			for j2 in range(2):
				for h in range(3):
					if (boolj1j2hj1pj2php(j1,j2,h,j1,j2,h) == 1):
						NW[0][0][j1][j2][h][j1][j2][h][0] += norm*PDF_phys_narrow.getReCompVal(m1_var,m2_var,cos1_var,cos2_var,phi_var,j1,j2,h,j1,j2,h)
						NW[0][0][j1][j2][h][j1][j2][h][1] += norm*PDF_phys_narrow.getImCompVal(m1_var,m2_var,cos1_var,cos2_var,phi_var,j1,j2,h,j1,j2,h)
					for j1p in range(2):
						for j2p in range(2):
							for hp in range(3):
								if ((boolj1j2hj1pj2php(j1,j2,h,j1p,j2p,hp) == 1) and ((j1p+3*j2p+9*hp) < (j1+3*j2+9*h))):
									NW[0][0][j1][j2][h][j1p][j2p][hp][0] += norm*PDF_phys_narrow.getReCompVal(m1_var,m2_var,cos1_var,cos2_var,phi_var,j1,j2,h,j1p,j2p,hp)
									NW[0][0][j1][j2][h][j1p][j2p][hp][1] += norm*PDF_phys_narrow.getImCompVal(m1_var,m2_var,cos1_var,cos2_var,phi_var,j1,j2,h,j1p,j2p,hp)
		counter += 1
		if (counter%1000 == 0): print str(counter)+' events analyzed (of '+str(data0_2011_wide.numEntries()+data0_2012_wide.numEntries()+data0_2011_narrow.numEntries()+data0_2012_narrow.numEntries())+').'

	for i in range(data0_2012_narrow.numEntries()):
		m1_var = data0_2012_narrow.get(i).getRealValue(m1_name_MC)
		m2_var =  data0_2012_narrow.get(i).getRealValue(m2_name_MC)
		cos1_var =  data0_2012_narrow.get(i).getRealValue(cos1_name_MC)
		cos2_var =  data0_2012_narrow.get(i).getRealValue(cos2_name_MC)
		phi_var =  data0_2012_narrow.get(i).getRealValue(phi_name_MC)
		norm =  data0_2012_narrow.get(i).getRealValue("MCweight0")
		for j1 in range(2):
			for j2 in range(2):
				for h in range(3):
					if (boolj1j2hj1pj2php(j1,j2,h,j1,j2,h) == 1):
						NW[0][1][j1][j2][h][j1][j2][h][0] += norm*PDF_phys_narrow.getReCompVal(m1_var,m2_var,cos1_var,cos2_var,phi_var,j1,j2,h,j1,j2,h)
						NW[0][1][j1][j2][h][j1][j2][h][1] += norm*PDF_phys_narrow.getImCompVal(m1_var,m2_var,cos1_var,cos2_var,phi_var,j1,j2,h,j1,j2,h)
					for j1p in range(2):
						for j2p in range(2):
							for hp in range(3):
								if ((boolj1j2hj1pj2php(j1,j2,h,j1p,j2p,hp) == 1) and ((j1p+3*j2p+9*hp) < (j1+3*j2+9*h))):
									NW[0][1][j1][j2][h][j1p][j2p][hp][0] += norm*PDF_phys_narrow.getReCompVal(m1_var,m2_var,cos1_var,cos2_var,phi_var,j1,j2,h,j1p,j2p,hp)
									NW[0][1][j1][j2][h][j1p][j2p][hp][1] += norm*PDF_phys_narrow.getImCompVal(m1_var,m2_var,cos1_var,cos2_var,phi_var,j1,j2,h,j1p,j2p,hp)
		counter += 1
		if (counter%1000 == 0): print str(counter)+' events analyzed (of '+str(data0_2011_wide.numEntries()+data0_2012_wide.numEntries()+data0_2011_narrow.numEntries()+data0_2012_narrow.numEntries())+').'

	end = time.time()
	print 'Events analized in',(end - start)/60.,'min.'


def PrintNW():

	NWclass = 'class NWclass {\n\n  public:\n\n  Double_t comp(Int_t year_opt,Int_t wide_window,Int_t j1,Int_t j2,Int_t h,Int_t j1p,Int_t j2p,Int_t hp,Int_t part) {\n\n'
	NWclass += '    if ((year_opt == 0) && (wide_window == 1) && (j1 == 0) && (j2 == 0) && (h == 0) && (j1p == 0) && (j2p == 0) && (hp == 0) && (part == 0)) {return '+str(NW[1][0][0][0][0][0][0][0][0]/NW[1][0][0][0][0][0][0][0][0])+';}\n'
	NWclass += '    else if ((year_opt == 0) && (wide_window == 1) && (j1 == 0) && (j2 == 0) && (h == 0) && (j1p == 0) && (j2p == 0) && (hp == 0) && (part == 1)) {return '+str(NW[1][0][0][0][0][0][0][0][1]/NW[1][0][0][0][0][0][0][0][0])+';}\n'
	NWclass += '    else if ((year_opt == 1) && (wide_window == 1) && (j1 == 0) && (j2 == 0) && (h == 0) && (j1p == 0) && (j2p == 0) && (hp == 0) && (part == 0)) {return '+str(NW[1][1][0][0][0][0][0][0][0]/NW[1][1][0][0][0][0][0][0][0])+';}\n'
	NWclass += '    else if ((year_opt == 1) && (wide_window == 1) && (j1 == 0) && (j2 == 0) && (h == 0) && (j1p == 0) && (j2p == 0) && (hp == 0) && (part == 1)) {return '+str(NW[1][1][0][0][0][0][0][0][1]/NW[1][1][0][0][0][0][0][0][0])+';}\n'
	for j1 in range(3):
		for j2 in range(3):
			for h in range(5):
				if ((boolj1j2hj1pj2php(j1,j2,h,j1,j2,h) == 1) and not((j1 == 0) and (j2 == 0) and (h == 0))):
					NWclass += '    else if ((year_opt == 0) && (wide_window == 1) && (j1 == '+str(j1)+') && (j2 == '+str(j2)+') && (h == '+str(h)+') && (j1p == '+str(j1)+') && (j2p == '+str(j2)+') && (hp == '+str(h)+') && (part == 0)) {return '+str(NW[1][0][j1][j2][h][j1][j2][h][0]/NW[1][0][0][0][0][0][0][0][0])+';}\n'
					NWclass += '    else if ((year_opt == 0) && (wide_window == 1) && (j1 == '+str(j1)+') && (j2 == '+str(j2)+') && (h == '+str(h)+') && (j1p == '+str(j1)+') && (j2p == '+str(j2)+') && (hp == '+str(h)+') && (part == 1)) {return '+str(NW[1][0][j1][j2][h][j1][j2][h][1]/NW[1][0][0][0][0][0][0][0][0])+';}\n'
					NWclass += '    else if ((year_opt == 1) && (wide_window == 1) && (j1 == '+str(j1)+') && (j2 == '+str(j2)+') && (h == '+str(h)+') && (j1p == '+str(j1)+') && (j2p == '+str(j2)+') && (hp == '+str(h)+') && (part == 0)) {return '+str(NW[1][1][j1][j2][h][j1][j2][h][0]/NW[1][1][0][0][0][0][0][0][0])+';}\n'
					NWclass += '    else if ((year_opt == 1) && (wide_window == 1) && (j1 == '+str(j1)+') && (j2 == '+str(j2)+') && (h == '+str(h)+') && (j1p == '+str(j1)+') && (j2p == '+str(j2)+') && (hp == '+str(h)+') && (part == 1)) {return '+str(NW[1][1][j1][j2][h][j1][j2][h][1]/NW[1][1][0][0][0][0][0][0][0])+';}\n'
				for j1p in range(3):
					for j2p in range(3):
						for hp in range(5):
							if ((boolj1j2hj1pj2php(j1,j2,h,j1p,j2p,hp) == 1) and ((j1p+3*j2p+9*hp) < (j1+3*j2+9*h))):
								NWclass += '    else if ((year_opt == 0) && (wide_window == 1) && (j1 == '+str(j1)+') && (j2 == '+str(j2)+') && (h == '+str(h)+') && (j1p == '+str(j1p)+') && (j2p == '+str(j2p)+') && (hp == '+str(hp)+') && (part == 0)) {return '+str(NW[1][0][j1][j2][h][j1p][j2p][hp][0]/NW[1][0][0][0][0][0][0][0][0])+';}\n'
								NWclass += '    else if ((year_opt == 0) && (wide_window == 1) && (j1 == '+str(j1)+') && (j2 == '+str(j2)+') && (h == '+str(h)+') && (j1p == '+str(j1p)+') && (j2p == '+str(j2p)+') && (hp == '+str(hp)+') && (part == 1)) {return '+str(NW[1][0][j1][j2][h][j1p][j2p][hp][1]/NW[1][0][0][0][0][0][0][0][0])+';}\n'
								NWclass += '    else if ((year_opt == 1) && (wide_window == 1) && (j1 == '+str(j1)+') && (j2 == '+str(j2)+') && (h == '+str(h)+') && (j1p == '+str(j1p)+') && (j2p == '+str(j2p)+') && (hp == '+str(hp)+') && (part == 0)) {return '+str(NW[1][1][j1][j2][h][j1p][j2p][hp][0]/NW[1][1][0][0][0][0][0][0][0])+';}\n'
								NWclass += '    else if ((year_opt == 1) && (wide_window == 1) && (j1 == '+str(j1)+') && (j2 == '+str(j2)+') && (h == '+str(h)+') && (j1p == '+str(j1p)+') && (j2p == '+str(j2p)+') && (hp == '+str(hp)+') && (part == 1)) {return '+str(NW[1][1][j1][j2][h][j1p][j2p][hp][1]/NW[1][1][0][0][0][0][0][0][0])+';}\n'

	NWclass += '    else if ((year_opt == 0) && (wide_window == 0) && (j1 == 0) && (j2 == 0) && (h == 0) && (j1p == 0) && (j2p == 0) && (hp == 0) && (part == 0)) {return '+str(NW[0][0][0][0][0][0][0][0][0]/NW[0][0][0][0][0][0][0][0][0])+';}\n'
	NWclass += '    else if ((year_opt == 0) && (wide_window == 0) && (j1 == 0) && (j2 == 0) && (h == 0) && (j1p == 0) && (j2p == 0) && (hp == 0) && (part == 1)) {return '+str(NW[0][0][0][0][0][0][0][0][1]/NW[0][0][0][0][0][0][0][0][0])+';}\n'
	NWclass += '    else if ((year_opt == 1) && (wide_window == 0) && (j1 == 0) && (j2 == 0) && (h == 0) && (j1p == 0) && (j2p == 0) && (hp == 0) && (part == 0)) {return '+str(NW[0][1][0][0][0][0][0][0][0]/NW[0][1][0][0][0][0][0][0][0])+';}\n'
	NWclass += '    else if ((year_opt == 1) && (wide_window == 0) && (j1 == 0) && (j2 == 0) && (h == 0) && (j1p == 0) && (j2p == 0) && (hp == 0) && (part == 1)) {return '+str(NW[0][1][0][0][0][0][0][0][1]/NW[0][1][0][0][0][0][0][0][0])+';}\n'
	for j1 in range(3):
		for j2 in range(3):
			for h in range(5):
				if ((boolj1j2hj1pj2php(j1,j2,h,j1,j2,h) == 1) and not((j1 == 0) and (j2 == 0) and (h == 0))):
					NWclass += '    else if ((year_opt == 0) && (wide_window == 0) && (j1 == '+str(j1)+') && (j2 == '+str(j2)+') && (h == '+str(h)+') && (j1p == '+str(j1)+') && (j2p == '+str(j2)+') && (hp == '+str(h)+') && (part == 0)) {return '+str(NW[0][0][j1][j2][h][j1][j2][h][0]/NW[0][0][0][0][0][0][0][0][0])+';}\n'
					NWclass += '    else if ((year_opt == 0) && (wide_window == 0) && (j1 == '+str(j1)+') && (j2 == '+str(j2)+') && (h == '+str(h)+') && (j1p == '+str(j1)+') && (j2p == '+str(j2)+') && (hp == '+str(h)+') && (part == 1)) {return '+str(NW[0][0][j1][j2][h][j1][j2][h][1]/NW[0][0][0][0][0][0][0][0][0])+';}\n'
					NWclass += '    else if ((year_opt == 1) && (wide_window == 0) && (j1 == '+str(j1)+') && (j2 == '+str(j2)+') && (h == '+str(h)+') && (j1p == '+str(j1)+') && (j2p == '+str(j2)+') && (hp == '+str(h)+') && (part == 0)) {return '+str(NW[0][1][j1][j2][h][j1][j2][h][0]/NW[0][1][0][0][0][0][0][0][0])+';}\n'
					NWclass += '    else if ((year_opt == 1) && (wide_window == 0) && (j1 == '+str(j1)+') && (j2 == '+str(j2)+') && (h == '+str(h)+') && (j1p == '+str(j1)+') && (j2p == '+str(j2)+') && (hp == '+str(h)+') && (part == 1)) {return '+str(NW[0][1][j1][j2][h][j1][j2][h][1]/NW[0][1][0][0][0][0][0][0][0])+';}\n'
				for j1p in range(3):
					for j2p in range(3):
						for hp in range(5):
							if ((boolj1j2hj1pj2php(j1,j2,h,j1p,j2p,hp) == 1) and ((j1p+3*j2p+9*hp) < (j1+3*j2+9*h))):
								NWclass += '    else if ((year_opt == 0) && (wide_window == 0) && (j1 == '+str(j1)+') && (j2 == '+str(j2)+') && (h == '+str(h)+') && (j1p == '+str(j1p)+') && (j2p == '+str(j2p)+') && (hp == '+str(hp)+') && (part == 0)) {return '+str(NW[0][0][j1][j2][h][j1p][j2p][hp][0]/NW[0][0][0][0][0][0][0][0][0])+';}\n'
								NWclass += '    else if ((year_opt == 0) && (wide_window == 0) && (j1 == '+str(j1)+') && (j2 == '+str(j2)+') && (h == '+str(h)+') && (j1p == '+str(j1p)+') && (j2p == '+str(j2p)+') && (hp == '+str(hp)+') && (part == 1)) {return '+str(NW[0][0][j1][j2][h][j1p][j2p][hp][1]/NW[0][0][0][0][0][0][0][0][0])+';}\n'
								NWclass += '    else if ((year_opt == 1) && (wide_window == 0) && (j1 == '+str(j1)+') && (j2 == '+str(j2)+') && (h == '+str(h)+') && (j1p == '+str(j1p)+') && (j2p == '+str(j2p)+') && (hp == '+str(hp)+') && (part == 0)) {return '+str(NW[0][1][j1][j2][h][j1p][j2p][hp][0]/NW[0][1][0][0][0][0][0][0][0])+';}\n'
								NWclass += '    else if ((year_opt == 1) && (wide_window == 0) && (j1 == '+str(j1)+') && (j2 == '+str(j2)+') && (h == '+str(h)+') && (j1p == '+str(j1p)+') && (j2p == '+str(j2p)+') && (hp == '+str(hp)+') && (part == 1)) {return '+str(NW[0][1][j1][j2][h][j1p][j2p][hp][1]/NW[0][1][0][0][0][0][0][0][0])+';}\n'
	NWclass += '\n    return 0.;\n\n    };\n\n};'

	fNWcxx = open('../../src/TimeDependent/NWclass.h','w')
	fNWcxx.write(NWclass)
	fNWcxx.close()


def LoadDataTime(file_name_2011,file_name_2012):

	file_in_2011 = TFile(NTUPLE_PATH+file_name_2011+".root")
	tree_full_2011 = file_in_2011.Get("DecayTree")
	file_in_2012 = TFile(NTUPLE_PATH+file_name_2012+".root")
	tree_full_2012 = file_in_2012.Get("DecayTree")

	file_out = TFile(NTUPLE_PATH + "trash.root","RECREATE")
	tree_2011_wide = tree_full_2011.CopyTree(t_name_MC+">=0. && "+t_name_MC+"<=12.")
	tree_2012_wide = tree_full_2012.CopyTree(t_name_MC+">=0. && "+t_name_MC+"<=12.")
	tree_2011_narrow = tree_full_2011.CopyTree("abs("+m1_name_MC+"-900.)<150. && abs("+m2_name_MC+"-900.)<150. && "+t_name_MC+">=0. && "+t_name_MC+"<=12.")
	tree_2012_narrow = tree_full_2012.CopyTree("abs("+m1_name_MC+"-900.)<150. && abs("+m2_name_MC+"-900.)<150. && "+t_name_MC+">=0. && "+t_name_MC+"<=12.")

	PDF_gen,model_gen = CreateGenPDF()

	wide_window_MC.setVal(1)
	for i in tree_2011_wide:
		t_MC.setVal(eval("i."+t_name_MC))
		MCweight4.setVal(1./PDF_gen.timemodel(eval("i."+t_name_MC)))
		data4_2011_wide_.add(RooArgSet(t_MC,MCweight4))
	for i in tree_2012_wide:
		t_MC.setVal(eval("i."+t_name_MC))
		MCweight4.setVal(1./PDF_gen.timemodel(eval("i."+t_name_MC)))
		data4_2012_wide_.add(RooArgSet(t_MC,MCweight4))

	wide_window_MC.setVal(0)
	for i in tree_2011_narrow:
		t_MC.setVal(eval("i."+t_name_MC))
		MCweight4.setVal(1./PDF_gen.timemodel(eval("i."+t_name_MC)))
		data4_2011_narrow_.add(RooArgSet(t_MC,MCweight4))
	for i in tree_2012_narrow:
		t_MC.setVal(eval("i."+t_name_MC))
		MCweight4.setVal(1./PDF_gen.timemodel(eval("i."+t_name_MC)))
		data4_2012_narrow_.add(RooArgSet(t_MC,MCweight4))

	data4_2011_wide = RooDataSet("data4_2011_wide","data4_2011_wide",data4_2011_wide_,data4_2011_wide_.get())
	data4_2012_wide = RooDataSet("data4_2012_wide","data4_2012_wide",data4_2012_wide_,data4_2012_wide_.get())
	data4_2011_narrow = RooDataSet("data4_2011_narrow","data4_2011_narrow",data4_2011_narrow_,data4_2011_narrow_.get())
	data4_2012_narrow = RooDataSet("data4_2012_narrow","data4_2012_narrow",data4_2012_narrow_,data4_2012_narrow_.get())

	return data4_2011_wide, data4_2012_wide, data4_2011_narrow, data4_2012_narrow


def ComputeTimeIntegrals(PDF_phys_wide,PDF_phys_narrow,data4_2011_wide,data4_2012_wide,data4_2011_narrow,data4_2012_narrow):

	T_cosh_integral_2011_wide = 0.
	T_sinh_integral_2011_wide = 0.
	T_cos_integral_2011_wide = 0.
	T_sin_integral_2011_wide = 0.
	T_cosh_integral_2012_wide = 0.
	T_sinh_integral_2012_wide = 0.
	T_cos_integral_2012_wide = 0.
	T_sin_integral_2012_wide = 0.
	T_cosh_integral_2011_narrow = 0.
	T_sinh_integral_2011_narrow = 0.
	T_cos_integral_2011_narrow = 0.
	T_sin_integral_2011_narrow = 0.
	T_cosh_integral_2012_narrow = 0.
	T_sinh_integral_2012_narrow = 0.
	T_cos_integral_2012_narrow = 0.
	T_sin_integral_2012_narrow = 0.

	for i in range(data4_2011_wide.numEntries()):
		t_var = data4_2011_wide.get(i).getRealValue(t_name_MC)
		norm = data4_2011_wide.get(i).getRealValue("MCweight4")
		T_cosh_integral_2011_wide += norm*PDF_phys_wide.T_cosh_eff(t_var)
		T_sinh_integral_2011_wide += norm*PDF_phys_wide.T_sinh_eff(t_var)
		T_cos_integral_2011_wide += norm*PDF_phys_wide.T_cos_eff(t_var)
		T_sin_integral_2011_wide += norm*PDF_phys_wide.T_sin_eff(t_var)
	for i in range(data4_2012_wide.numEntries()):
		t_var = data4_2012_wide.get(i).getRealValue(t_name_MC)
		norm = data4_2012_wide.get(i).getRealValue("MCweight4")
		T_cosh_integral_2012_wide += norm*PDF_phys_wide.T_cosh_eff(t_var)
		T_sinh_integral_2012_wide += norm*PDF_phys_wide.T_sinh_eff(t_var)
		T_cos_integral_2012_wide += norm*PDF_phys_wide.T_cos_eff(t_var)
		T_sin_integral_2012_wide += norm*PDF_phys_wide.T_sin_eff(t_var)

	for i in range(data4_2011_narrow.numEntries()):
		t_var = data4_2011_narrow.get(i).getRealValue(t_name_MC)
		norm = data4_2011_narrow.get(i).getRealValue("MCweight4")
		T_cosh_integral_2011_narrow += norm*PDF_phys_narrow.T_cosh_eff(t_var)
		T_sinh_integral_2011_narrow += norm*PDF_phys_narrow.T_sinh_eff(t_var)
		T_cos_integral_2011_narrow += norm*PDF_phys_narrow.T_cos_eff(t_var)
		T_sin_integral_2011_narrow += norm*PDF_phys_narrow.T_sin_eff(t_var)
	for i in range(data4_2012_narrow.numEntries()):
		t_var = data4_2012_narrow.get(i).getRealValue(t_name_MC)
		norm = data4_2012_narrow.get(i).getRealValue("MCweight4")
		T_cosh_integral_2012_narrow += norm*PDF_phys_narrow.T_cosh_eff(t_var)
		T_sinh_integral_2012_narrow += norm*PDF_phys_narrow.T_sinh_eff(t_var)
		T_cos_integral_2012_narrow += norm*PDF_phys_narrow.T_cos_eff(t_var)
		T_sin_integral_2012_narrow += norm*PDF_phys_narrow.T_sin_eff(t_var)

	IT_cosh_accu_2011_wide.setVal(T_cosh_integral_2011_wide/T_cosh_integral_2011_wide)
	IT_sinh_accu_2011_wide.setVal(T_sinh_integral_2011_wide/T_cosh_integral_2011_wide)
	IT_cos_accu_2011_wide.setVal(T_cos_integral_2011_wide/T_cosh_integral_2011_wide)
	IT_sin_accu_2011_wide.setVal(T_sin_integral_2011_wide/T_cosh_integral_2011_wide)
	IT_cosh_accu_2012_wide.setVal(T_cosh_integral_2012_wide/T_cosh_integral_2012_wide)
	IT_sinh_accu_2012_wide.setVal(T_sinh_integral_2012_wide/T_cosh_integral_2012_wide)
	IT_cos_accu_2012_wide.setVal(T_cos_integral_2012_wide/T_cosh_integral_2012_wide)
	IT_sin_accu_2012_wide.setVal(T_sin_integral_2012_wide/T_cosh_integral_2012_wide)
	IT_cosh_accu_2011_narrow.setVal(T_cosh_integral_2011_narrow/T_cosh_integral_2011_narrow)
	IT_sinh_accu_2011_narrow.setVal(T_sinh_integral_2011_narrow/T_cosh_integral_2011_narrow)
	IT_cos_accu_2011_narrow.setVal(T_cos_integral_2011_narrow/T_cosh_integral_2011_narrow)
	IT_sin_accu_2011_narrow.setVal(T_sin_integral_2011_narrow/T_cosh_integral_2011_narrow)
	IT_cosh_accu_2012_narrow.setVal(T_cosh_integral_2012_narrow/T_cosh_integral_2012_narrow)
	IT_sinh_accu_2012_narrow.setVal(T_sinh_integral_2012_narrow/T_cosh_integral_2012_narrow)
	IT_cos_accu_2012_narrow.setVal(T_cos_integral_2012_narrow/T_cosh_integral_2012_narrow)
	IT_sin_accu_2012_narrow.setVal(T_sin_integral_2012_narrow/T_cosh_integral_2012_narrow)


def PrintTimeInts():

	ITclass = 'class ITclass {\n\n  public:\n\n  Double_t IT_cosh(Int_t year_opt, Int_t wide_window) {\n    if ((year_opt == 0) && (wide_window == 1)) {return '+str(IT_cosh_accu_2011_wide.getVal())+';}\n    else if ((year_opt == 0) && (wide_window == 0)) {return '+str(IT_cosh_accu_2011_narrow.getVal())+';}\n    else if ((year_opt == 1) && (wide_window == 1)) {return '+str(IT_cosh_accu_2012_wide.getVal())+';}\n    else if ((year_opt == 1) && (wide_window == 0)) {return '+str(IT_cosh_accu_2012_narrow.getVal())+';}\n    return 0.;\n    };\n\n  Double_t IT_sinh(Int_t year_opt, Int_t wide_window) {\n    if ((year_opt == 0) && (wide_window == 1)) {return '+str(IT_sinh_accu_2011_wide.getVal())+';}\n    else if ((year_opt == 0) && (wide_window == 0)) {return '+str(IT_sinh_accu_2011_narrow.getVal())+';}\n    else if ((year_opt == 1) && (wide_window == 1)) {return '+str(IT_sinh_accu_2012_wide.getVal())+';}\n    else if ((year_opt == 1) && (wide_window == 0)) {return '+str(IT_sinh_accu_2012_narrow.getVal())+';}\n    return 0.;\n    };\n\n  Double_t IT_cos(Int_t year_opt, Int_t wide_window) {\n    if ((year_opt == 0) && (wide_window == 1)) {return '+str(IT_cos_accu_2011_wide.getVal())+';}\n    else if ((year_opt == 0) && (wide_window == 0)) {return '+str(IT_cos_accu_2011_narrow.getVal())+';}\n    else if ((year_opt == 1) && (wide_window == 1)) {return '+str(IT_cos_accu_2012_wide.getVal())+';}\n    else if ((year_opt == 1) && (wide_window == 0)) {return '+str(IT_cos_accu_2012_narrow.getVal())+';}\n    return 0.;\n    };\n  Double_t IT_sin(Int_t year_opt, Int_t wide_window) {\n    if ((year_opt == 0) && (wide_window == 1)) {return '+str(IT_sin_accu_2011_wide.getVal())+';}\n    else if ((year_opt == 0) && (wide_window == 0)) {return '+str(IT_sin_accu_2011_narrow.getVal())+';}\n    else if ((year_opt == 1) && (wide_window == 1)) {return '+str(IT_sin_accu_2012_wide.getVal())+';}\n    else if ((year_opt == 1) && (wide_window == 0)) {return '+str(IT_sin_accu_2012_narrow.getVal())+';}\n    return 0.;\n    };\n\n};'

	fTimecxx = open('../../src/TimeDependent/ITclass.h','w')
	fTimecxx.write(ITclass)
	fTimecxx.close()
