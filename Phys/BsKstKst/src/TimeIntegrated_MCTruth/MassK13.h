/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef MASSK13
#define MASSK13

#include "RooAbsReal.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
#include "TComplex.h"
#include "MassAbsFunc.h"
 
class MassK13 : public MassAbsFunc {
public:
  MassK13():MassAbsFunc() {} ; 
  MassK13(const char *name, const char *title,
	      RooAbsReal& _m1,
	      RooAbsReal& _m2,
	      RooAbsReal& _m_kst,
	      RooAbsReal& _m_kst0,
	      RooAbsReal& _g_kst,
	      RooAbsReal& _g_kst0,
	 RooAbsReal& _m_Bs,
	      RooArgList& _acc_coefList,
	      RooAbsReal& _norm):
    MassAbsFunc(name, title, _m1, _m2, _m_kst, _m_kst0, _g_kst, _g_kst0, _m_Bs, _acc_coefList,_norm){}


    MassK13(const MassK13& other, const char* name=0):
      MassAbsFunc(other,name){}

  virtual TObject* clone(const char* newname) const { return new MassK13(*this,newname); }
  inline virtual ~MassK13() { }

protected:

  
  Double_t evaluate() const ;

private:

  ClassDef(MassK13,1) // Your description goes here...
};
 
#endif
