/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "AngKstKst.h" 
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 

ClassImp(AngKstKst) 

 AngKstKst::AngKstKst(const char *name, const char *title, 
                        RooAbsReal& _c1,
                        RooAbsReal& _c2,
                        RooAbsReal& _ph,
                        RooAbsReal& _A0,
                        RooAbsReal& _Apa,
                        RooAbsReal& _Ape,
                        RooAbsReal& _cosdpa,
                        RooAbsReal& _DGs,
                        RooAbsReal& _Gs,
                        RooAbsReal& _th_1,
                        RooAbsReal& _th_2,
                        RooAbsReal& _th_3,
                        RooAbsReal& _th_4,
                        RooAbsReal& _th_5,
                        RooAbsReal& _ph_1,
                        RooAbsReal& _ph_2,
                        RooAbsReal& _ph_3,
                        RooAbsReal& _ph_4,
                        RooAbsReal& _ph_5,
                        RooAbsReal& _ph_6) :
   RooAbsPdf(name,title), 
   c1("c1","c1",this,_c1),
   c2("c2","c2",this,_c2),
   ph("ph","ph",this,_ph),
   A0("A0","A0",this,_A0),
   Apa("Apa","Apa",this,_Apa),
   Ape("Ape","Ape",this,_Ape),
   cosdpa("cosdpa","cosdpa",this,_cosdpa),
   DGs("DGs","DGs",this,_DGs),
   Gs("Gs","Gs",this,_Gs),
   th_1("th_1","th_1",this,_th_1),
   th_2("th_2","th_2",this,_th_2),
   th_3("th_3","th_3",this,_th_3),
   th_4("th_4","th_4",this,_th_4),
   th_5("th_5","th_5",this,_th_5),
   ph_1("ph_1","ph_1",this,_ph_1),
   ph_2("ph_2","ph_2",this,_ph_2),
   ph_3("ph_3","ph_3",this,_ph_3),
   ph_4("ph_4","ph_4",this,_ph_4),
   ph_5("ph_5","ph_5",this,_ph_5),
   ph_6("ph_6","ph_6",this,_ph_6)
 { 
 } 


 AngKstKst::AngKstKst(const AngKstKst& other, const char* name) :  
   RooAbsPdf(other,name), 
   c1("c1",this,other.c1),
   c2("c2",this,other.c2),
   ph("ph",this,other.ph),
   A0("A0",this,other.A0),
   Apa("Apa",this,other.Apa),
   Ape("Ape",this,other.Ape),
   cosdpa("cosdpa",this,other.cosdpa),
   DGs("DGs",this,other.DGs),
   Gs("Gs",this,other.Gs),
   th_1("th_1",this,other.th_1),
   th_2("th_2",this,other.th_2),
   th_3("th_3",this,other.th_3),
   th_4("th_4",this,other.th_4),
   th_5("th_5",this,other.th_5),
   ph_1("ph_1",this,other.ph_1),
   ph_2("ph_2",this,other.ph_2),
   ph_3("ph_3",this,other.ph_3),
   ph_4("ph_4",this,other.ph_4),
   ph_5("ph_5",this,other.ph_5),
   ph_6("ph_6",this,other.ph_6)
 { 
 } 



 Double_t AngKstKst::evaluate() const 
 { 
   // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE 
   Double_t GH = Gs - 0.5*DGs;
   Double_t GL = Gs + 0.5*DGs;

   Double_t c1_2 = c1*c1;
   Double_t c2_2 = c2*c2;
   Double_t s1_2 = 1.-c1_2;
   Double_t s2_2 = 1.-c2_2;
   Double_t s12s22 = s1_2*s2_2;
   Double_t s1s2 = sqrt(s12s22);
   Double_t c1c2 = c1*c2;
   Double_t c2ph = cos(2.*ph);

   Double_t f1 = 4.*c1_2*c2_2;
   Double_t f2 = s12s22 * (1.+c2ph) ;
   Double_t f3 = s12s22 * (1.-c2ph) ;
   Double_t f5 = 4.*sq2 * s1s2* c1c2*cos(ph) ;  
   
   Double_t K1 = A0*A0/GL ;

   Double_t K2 = Apa*Apa/GL ;

   Double_t K3 = Ape*Ape/GH ;

   Double_t K5 = A0*Apa*cosdpa/GL ;

   Double_t phys = K1*f1 + K2*f2 + K3*f3 + K5*f5 ;


   Double_t acc_th1 = 1. + th_1*c1 + th_2*c1_2 + th_3*c1_2*c1 + th_4*c1_2*c1_2 + th_5*c1_2*c1_2*c1;
   Double_t acc_th2 = 1. + th_1*c2 + th_2*c2_2 + th_3*c2_2*c2 + th_4*c2_2*c2_2 + th_5*c2_2*c2_2*c2;
   Double_t acc_phi = 1. + ph_1*cos( ph_2*ph + ph_3)+ph_4*cos(ph_5*ph + ph_6);


   Double_t Acc = acc_th1*acc_th2*acc_phi;


   Double_t PDF = Acc*phys;
   if(PDF<0.){
     PDF = 0.;
   }
   return PDF; 


 } 



