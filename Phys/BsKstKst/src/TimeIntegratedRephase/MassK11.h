/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef MASSK11
#define MASSK11

#include "RooAbsReal.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
#include "TComplex.h"
#include "MassAbsFunc.h"

 
class MassK11 : public MassAbsFunc {
public:
  MassK11(): MassAbsFunc() {} ; 
  MassK11(const char *name, const char *title,
	      RooAbsReal& _m1,
	      RooAbsReal& _m2,
	      RooAbsReal& _Af,
	      RooAbsReal& _df,
	      RooAbsReal& _Ag,
	      RooAbsReal& _dg,
	      RooAbsReal& _Ass,
	      RooAbsReal& _dss,
	      RooAbsReal& _m_kst,
	      RooAbsReal& _m_kst0,
	      RooAbsReal& _g_kst,
	      RooAbsReal& _g_kst0,
	 RooAbsReal& _m_Bs,
	  RooArgList& _acc_coefList,
	  RooAbsReal& _norm):
    MassAbsFunc(name, title, _m1, _m2, _m_kst, _m_kst0, _g_kst, _g_kst0, _m_Bs, _acc_coefList,_norm),
    Af("Af","Af",this,_Af),
    df("df","df",this,_df),
    Ag("Ag","Ag",this,_Ag),
    dg("dg","dg",this,_dg),
    Ass("Ass","Ass",this,_Ass),
    dss("dss","dss",this,_dss){}

    MassK11(const MassK11& other, const char* name=0) :
      MassAbsFunc(other,name),
      Af("Af",this,other.Af),
      df("df",this,other.df),
      Ag("Ag",this,other.Ag),
      dg("dg",this,other.dg),
      Ass("Ass",this,other.Ass),
      dss("dss",this,other.dss){}

    virtual TObject* clone(const char* newname) const { return new MassK11(*this,newname); }

  inline virtual ~MassK11() { }

protected:

  RooRealProxy Af ;
  RooRealProxy df ;
  RooRealProxy Ag ;
  RooRealProxy dg ;
  RooRealProxy Ass ;
  RooRealProxy dss ;
  Double_t evaluate() const ;

private:

  ClassDef(MassK11,1) // Your description goes here...
};
 
#endif
