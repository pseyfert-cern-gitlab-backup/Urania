/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "FourB_Mass.h" 
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 
#include "TComplex.h"

ClassImp(FourB_Mass) 



 Double_t FourB_Mass::evaluate() const 
 { 
   // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE 

   //********* S-wave mass
   //cout << "antes del calculo" << endl;
   

//    // DOUBLE S-WAVE


//    TComplex SW_m1 = SWaveMass(1);
//    TComplex SW_m2 = SWaveMass(2);


//    Double_t acc = getAcc();


//    return norm*acc*SW_m1.Rho2()*SW_m2.Rho2();





   // PHASE SPACE

   Double_t PS_m1 = sqrt((m1*m1 - pow(m_kaon+m_pion,2))*(m1*m1 - pow(m_kaon-m_pion,2)))/(2*m1);
   Double_t PS_m2 = sqrt((m2*m2 - pow(m_kaon+m_pion,2))*(m2*m2 - pow(m_kaon-m_pion,2)))/(2*m2);

   Double_t PS_MBs = sqrt((MBs*MBs - pow(m1+m2,2))*(MBs*MBs - pow(m1-m2,2)))/(2*MBs);



   //cout << "despues del calculo" << endl;
   

   Double_t acc = getAcc();

   //cout << "despues de acc" << endl;
   

   return acc*PS_m1*PS_m2*PS_MBs/1000000000/18877.611806244*norm; 






// EXPONENTIAL


//    Double_t c_nonres = 0.00391044;


//    Double_t SW_m1 = exp(c_nonres*m1)*(1./(8.*TMath::Pi())*sqrt(1.-2.*(m_kaon*m_kaon + m_pion*m_pion)/(m1*m1) + pow(m_kaon*m_kaon - m_pion*m_pion,2)/pow(m1,4.)));
//    Double_t SW_m2 = exp(c_nonres*m2)*(1./(8.*TMath::Pi())*sqrt(1.-2.*(m_kaon*m_kaon + m_pion*m_pion)/(m2*m2) + pow(m_kaon*m_kaon - m_pion*m_pion,2)/pow(m2,4.)));

//    //cout << "despues del calculo" << endl;
   

//    Double_t acc = getAcc();

//    //cout << "despues de acc" << endl;
   

//    return acc*SW_m1*SW_m2/85272.092641594107/0.90538850965628404 ; 



 } 



