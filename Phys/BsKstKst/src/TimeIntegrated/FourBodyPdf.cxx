/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "FourBodyPdf.h" 
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 

ClassImp(FourBodyPdf) 

 FourBodyPdf::FourBodyPdf(const char *name, const char *title, 
                        RooAbsReal& _m1,
                        RooAbsReal& _m2,
                        RooAbsReal& _m_kst,
                        RooAbsReal& _k_kst0,
                        RooAbsReal& _g_kst,
                        RooAbsReal& _g_kst0,
                        RooAbsReal& _MBs) :
   RooAbsPdf(name,title), 
   m1("m1","m1",this,_m1),
   m2("m2","m2",this,_m2),
   m_kst("m_kst","m_kst",this,_m_kst),
   k_kst0("k_kst0","k_kst0",this,_k_kst0),
   g_kst("g_kst","g_kst",this,_g_kst),
   g_kst0("g_kst0","g_kst0",this,_g_kst0),
   MBs("MBs","MBs",this,_MBs)
 { 
 } 


 FourBodyPdf::FourBodyPdf(const FourBodyPdf& other, const char* name) :  
   RooAbsPdf(other,name), 
   m1("m1",this,other.m1),
   m2("m2",this,other.m2),
   m_kst("m_kst",this,other.m_kst),
   k_kst0("k_kst0",this,other.k_kst0),
   g_kst("g_kst",this,other.g_kst),
   g_kst0("g_kst0",this,other.g_kst0),
   MBs("MBs",this,other.MBs)
 { 
 } 



 Double_t FourBodyPdf::evaluate() const 
 { 
   // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE 

   // PHASE SPACE
   Double_t m_kaon = 493.677;
   Double_t m_pion = 139.57;

   Double_t PS_m1 = sqrt((m1*m1 - pow(m_kaon+m_pion,2))*(m1*m1 - pow(m_kaon-m_pion,2)))/(2*m1);
   Double_t PS_m2 = sqrt((m2*m2 - pow(m_kaon+m_pion,2))*(m2*m2 - pow(m_kaon-m_pion,2)))/(2*m2);

   Double_t PS_MBs = sqrt((MBs*MBs - pow(m1+m2,2))*(MBs*MBs - pow(m1-m2,2)))/(2*MBs);


   return PS_m1*PS_m2*PS_MBs*10e-10/4798.61271531; 

 } 



