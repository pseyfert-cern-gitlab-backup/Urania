/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef MASSK15
#define MASSK15

#include "RooAbsReal.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
#include "TComplex.h"
#include "MassAbsFunc.h"

class MassK15 : public MassAbsFunc {
public:
  MassK15(): MassAbsFunc() {} ; 
  MassK15(const char *name, const char *title,
	      RooAbsReal& _m1,
	      RooAbsReal& _m2,
	      RooAbsReal& _Ass,
	      RooAbsReal& _dss,
	      RooAbsReal& _Apa,
	      RooAbsReal& _dpa,
	      RooAbsReal& _m_kst,
	      RooAbsReal& _m_kst0,
	      RooAbsReal& _g_kst,
	      RooAbsReal& _g_kst0,
	 RooAbsReal& _m_Bs,
	      RooArgList& _acc_coefList,
	  RooAbsReal& _norm):
    MassAbsFunc(name, title, _m1, _m2, _m_kst, _m_kst0, _g_kst, _g_kst0, _m_Bs, _acc_coefList,_norm),
    Ass("Ass","Ass",this,_Ass),
    dss("dss","dss",this,_dss),
    Apa("Apa","Apa",this,_Apa),
    dpa("dpa","dpa",this,_dpa){}
  
    MassK15(const MassK15& other, const char* name=0):
      MassAbsFunc(other,name),
      Ass("Ass",this,other.Ass),
      dss("dss",this,other.dss),
      Apa("Apa",this,other.Apa),
      dpa("dpa",this,other.dpa){}

  virtual TObject* clone(const char* newname) const { return new MassK15(*this,newname); }
  inline virtual ~MassK15() { }

protected:
  RooRealProxy Ass ;
  RooRealProxy dss ;
  RooRealProxy Apa ;
  RooRealProxy dpa ;

  
  Double_t evaluate() const ;

private:

  ClassDef(MassK15,1) // Your description goes here...
};
 
#endif
