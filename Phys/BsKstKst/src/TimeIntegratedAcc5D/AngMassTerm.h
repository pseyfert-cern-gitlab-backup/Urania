/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef ANGMASSTERM
#define ANGMASSTERM

#include "RooAbsReal.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
#include "TTree.h"

#define MYDIM 5
#define MYA 5
#define MYB 5
#define MYC 6
#define MYD 6
#define MYF 3
 
class AngMassTerm : public RooAbsReal {
public:
  AngMassTerm() {} ; 
  AngMassTerm(const char *name, const char *title,
	      Int_t _indx,
	      RooAbsReal& _c1,
	      RooAbsReal& _c2,
	      RooAbsReal& _ph,
	      RooAbsReal& _m1,
	      RooAbsReal& _m2,
	      RooAbsReal& _fL,
	      RooAbsReal& _fpa,
	      RooAbsReal& _Asp2,
	      RooAbsReal& _Asm2,
	      RooAbsReal& _Ass2,
	      RooAbsReal& _dpa,
	      RooAbsReal& _dpe,
	      RooAbsReal& _dsp,
	      RooAbsReal& _dsm,
	      RooAbsReal& _dss,
	      RooAbsReal& _m_kst,
	      RooAbsReal& _m_kst0,
	      RooAbsReal& _g_kst,
	      RooAbsReal& _g_kst0,
	      RooAbsReal& _m_Bs,
	      RooAbsReal& _Gs,
	      RooAbsReal& _DGs,
	      RooAbsReal& _norm,
	      RooAbsReal& _normP,
	      RooAbsReal& _normS,
	      RooAbsReal& _normSS,
              // char  *_treename, 
                     TTree *tin,
              char  *_branchname);

  AngMassTerm(const AngMassTerm& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new AngMassTerm(*this,newname); }
  inline virtual ~AngMassTerm() { }

  double get_Acceptance() const;

  Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName=0) const ;
  Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const ;

protected:

  Int_t indx;
  RooRealProxy c1 ;
  RooRealProxy c2 ;
  RooRealProxy ph ;
  RooRealProxy m1 ;
  RooRealProxy m2 ;
  RooRealProxy fL;
  RooRealProxy fpa;
  RooRealProxy Asp2;
  RooRealProxy Asm2;
  RooRealProxy Ass2;
  RooRealProxy dpa;
  RooRealProxy dpe;
  RooRealProxy dsp;
  RooRealProxy dsm;
  RooRealProxy dss;		    
  RooRealProxy m_kst ;
  RooRealProxy m_kst0 ;
  RooRealProxy g_kst ;
  RooRealProxy g_kst0 ;
  RooRealProxy m_Bs;
  RooRealProxy Gs;
  RooRealProxy DGs;
  RooRealProxy norm;
  RooRealProxy normP;
  RooRealProxy normS;
  RooRealProxy normSS;
  double acc_coeffs[MYA*MYB*MYC*MYD*MYF];//[MYA][MYB][MYC][MYD][MYF];
  
  Double_t evaluate() const ;

private:

  ClassDef(AngMassTerm,1) // Your description goes here...
};
 
#endif
