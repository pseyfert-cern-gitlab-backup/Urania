/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef MASSINTEGRATOR
#define MASSINTEGRATOR

#include "RooAbsReal.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
 
class MassIntegrator : public RooAbsReal {
public:

  MassIntegrator() {} ; 
  MassIntegrator(const char *name, const char *title,
	      RooAbsReal& _indx,
	      RooAbsReal& _m1,
	      RooAbsReal& _m2,
              RooAbsReal& _fL,
              RooAbsReal& _fpa,
              RooAbsReal& _Asp2,
              RooAbsReal& _Asm2,
              RooAbsReal& _Ass2,
              RooAbsReal& _dpa,
              RooAbsReal& _dpe,
              RooAbsReal& _dsp,
              RooAbsReal& _dsm,
              RooAbsReal& _dss,
              RooAbsReal& _m_kst,
              RooAbsReal& _m_kst0,
              RooAbsReal& _g_kst,
              RooAbsReal& _g_kst0,
              RooAbsReal& _m_Bs,
              RooAbsReal& _Gs,
              RooAbsReal& _DGs,
              RooAbsReal& _norm,
              RooAbsReal& _normP,
              RooAbsReal& _normS,
              RooAbsReal& _normSS,
		 RooAbsReal& _leg_n_m1,
		 RooAbsReal& _leg_n_m2);
  MassIntegrator(const MassIntegrator& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new MassIntegrator(*this,newname); }
  inline virtual ~MassIntegrator() { }

/*   Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName=0) const ; */
/*   Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const ; */

protected:

  RooRealProxy indx ;
  RooRealProxy m1 ;
  RooRealProxy m2 ;
  RooRealProxy fL;
  RooRealProxy fpa;
  RooRealProxy Asp2;
  RooRealProxy Asm2;
  RooRealProxy Ass2;
  RooRealProxy dpa;
  RooRealProxy dpe;
  RooRealProxy dsp;
  RooRealProxy dsm;
  RooRealProxy dss;
  RooRealProxy m_kst ;
  RooRealProxy m_kst0 ;
  RooRealProxy g_kst ;
  RooRealProxy g_kst0 ;
  RooRealProxy m_Bs;
  RooRealProxy Gs;
  RooRealProxy DGs;
  RooRealProxy norm;
  RooRealProxy normP;
  RooRealProxy normS;
  RooRealProxy normSS;
  RooRealProxy leg_n_m1;
  RooRealProxy leg_n_m2;
  
  Double_t evaluate() const ;

private:

  ClassDef(MassIntegrator,1) // Your description goes here...
};
 
#endif
