root.exe
//==================================================================================
// Look for masses in K stream
//==================================================================================
gStyle->SetPalette(0)
.L ../analysis/FourPlots.C 
TFile* fnpi = TFile::Open("LambdabMC-Lbpi-Sim08a-1122-1123-1124-1125-NN.root")
TFile* fnk = TFile::Open("LambdabMC-LbK-Sim08a-1127-1128-1129-1137-NN.root")
TFile* fnkpi = TFile::Open("LambdabMC-B2JpsiKpi-Sim08a-1138-1139-NN.root")
TNNppi = (TTree*)fnpi->Get("NetTree")
TNNpK = (TTree*)fnk->Get("NetTree")
TNNKpi = (TTree*)fnkpi->Get("NetTree")
TChain* TNNKK = new TChain("NetTree")
TNNKK->Add("LambdabMC-B2JpsiKK-Sim08a-1134-1135-NN.root")
TChain* TNN = new TChain("NetTree")
TNN->Add("Lambdab-S20r1-1062-NN.root")
TNN->Add("Lambdab-S20-1063-NN.root")
TChain* TT = new TChain("TrainTree")
TT->Add("Lambdab-S20r1-1062-All-SW.root")
TT->Add("Lambdab-S20-1063-All-SW.root")
TNN->AddFriend(TT)
//TCut Reflection("BKGCAT==30")
TCut LooseNNAll("netOutput>-0.5")
TCut LooseNN("netOutput>-0.5 && ErrorCode==0")
TCut OptimalNNAll("netOutput>0.552")
TCut OptimalNN("netOutput>0.552")
TCut OK("ErrorCode==0")
TCut OKNoPhi("ErrorCode==0 || ErrorCode==-6")
TCut Blind("(PsippiMass<5580 || PsippiMass>5650) || Category!=1")
TCut kstream(OK && "Category==-1")
TCut pistreamUB(OK &&"Category==1")
TCut pistream(OK && pistreamUB && Blind)
TCut pistreamAll("Category==1")
TCut kstreamAll("Category==1")
Double_t mLb = 5620 ;
Double_t mBd = 5279.5 ;
Double_t mBu = 5279.17 ;
Double_t mBs = 5366.3 ;
Double_t win = 20 ;
Double_t lwin = 100 ;
TCut NoKK("abs(PsiKKMass-5366.3)>20")
TCut NoKpi("abs(PsiKpiMass-5279.5)>20")
TCut NopiK("abs(PsipiKMass-5279.5)>20")
TCut NopK("abs(PsipKMass-5620)>20")
TCut NoKp("abs(PsiKpMass-5620)>20")
TCut TruepiK("BKGCAT==31")
TCut TrueKpi("BKGCAT==32")
TCut TrueKK("BKGCAT==33")
TCut TrueKp("BKGCAT==34")
TCut TruepK("BKGCAT==1")
TCut Trueppi("BKGCAT==0")

RooPlot* r = 0 ;

//==================================================================================
// Lbpi mass of LbK stream
//==================================================================================

TCut KSig("sweightLb*(sweightLb>-4)*(Category==-1)*(netOutput>0.552)") ;
TCut KSigB("sweightLb*(sweightLb>-4)*(Category==-1)*(netOutput>0.552)*(Baryon==1)") ;
TCut KSigAB("sweightLb*(sweightLb>-4)*(Category==-1)*(netOutput>0.552)*(Baryon==-1)") ;
TCut Ktrue("(Category==-1)*(BKGCAT==1)*(ErrorCode==0)*(netOutput>0.552)*DalitzWeight*PTWeight2"); // ppi cat
TCut KtruePi("(Category==1)*(BKGCAT==1)*(ErrorCode==0)*(netOutput>0.552)*DalitzWeight*PTWeight2"); // ppi cat
 
RooPlot* r = SevenPlots(TNN,TNNpK,TNNpK,0,0,0,0,KSig,Ktrue,KtruePi,"","","","","PsippiMass","N","remove",5000,5600)
r->GetXaxis()->SetTitle("m_{J/#psip#pi} [MeV/c^{2}]")
png("LbK mass under Lbpi")
 
RooPlot* r = SevenPlots(TNN,TNN,TNN,0,0,0,0,KSig,KSigB,KSigAB,"","","","","PsippiMass","N","remove",5000,5600)
r->GetXaxis()->SetTitle("m_{J/#psip#pi} [MeV/c^{2}]")
png("LbK mass under Lbpi, B and AB")

// sWeight LbK also in pi stream -> Huge change in weighting.exe!

// Cross-check for J/psiKK
// SandB(TNNKK,TNNphi,"PsipKMass","1","1",Reflection && LooseNN,"N")
//================================================================================
// 2D plots
//================================================================================
//------------------- pion stream
TH2D* hk = Make2DPlot("hk","J/#psip#pi mass",110,4900,6000,"J/#psi#piK mass",110,4800,5900)
TNN->Draw("PsipiKMass:PsippiMass >> hk",LooseNN && pistreamUB)
hk->SetTitleOffset(1.5,"y");
hk->Draw("COL")
png("pion stream piK vs ppi")

TH2D* hk2 = Make2DPlot("hk2","J/#psip#pi mass",110,4900,6000,"J/#psiK#pi mass",110,4800,5900)
TNN->Draw("PsiKpiMass:PsippiMass >> hk2",LooseNN && pistreamUB)
hk2->SetTitleOffset(1.5,"y");
hk2->Draw("COL")
png("pion stream Kpi vs ppi")

TH2D* hLk = Make2DPlot("hLk","J/#psip#pi mass",110,4900,6000,"J/#psiKp mass",90,5200,6100)
TNN->Draw("PsiKpMass:PsippiMass >> hLk",LooseNN && pistreamUB)
hLk->SetTitleOffset(1.5,"y");
hLk->Draw("COL")
png("pion stream Kp vs ppi")

TH2D* hLk2 = Make2DPlot("hLk2","J/#psip#pi mass",110,4900,6000,"J/#psipK mass",90,5200,6100)
TNN->Draw("PsipKMass:PsippiMass >> hLk2",LooseNN && pistreamUB)
hLk2->SetTitleOffset(1.5,"y");
hLk2->Draw("COL")
png("pion stream pK vs ppi")

TH2D* hkK = Make2DPlot("hkK","J/#psip#pi mass",110,4900,6000,"J/#psiKK mass",110,4800,5900)
TNN->Draw("PsiKKMass:PsippiMass >> hkK",LooseNN && pistreamUB)
hkK->SetTitleOffset(1.5,"y");
hkK->Draw("COL")
png("pion stream KK vs ppi")

//------------------- kaon stream
gStyle->SetPalette(0)
TH2D* hk = Make2DPlot("hk","J/#psipK mass",110,5000,6100,"J/#psi#piK mass",110,4800,5900)
TNN->Draw("PsipiKMass:PsipKMass >> hk",LooseNN && kstream)
hk->SetTitleOffset(1.5,"y");
hk->Draw("COL")
png("kaon stream piK vs pK")

TH2D* hk2 = Make2DPlot("hk2","J/#psipK mass",110,5000,6100,"J/#psiK#pi mass",110,4800,5900)
TNN->Draw("PsiKpiMass:PsipKMass >> hk2",LooseNN && kstream)
hk2->SetTitleOffset(1.5,"y");
hk2->Draw("COL")
png("kaon stream Kpi vs pK")

TH2D* hLk = Make2DPlot("hLk","J/#psipK mass",90,5200,6100,"J/#psiKp mass",90,5200,6100)
TNN->Draw("PsiKpMass:PsipKMass >> hLk",LooseNN && kstream)
hLk->SetTitleOffset(1.5,"y");
hLk->Draw("COL")
png("kaon stream Kp vs pK")

TH2D* hkK = Make2DPlot("hkK","J/#psipK mass",110,5000,6100,"J/#psiKK mass",110,4800,5900)
TNN->Draw("PsiKKMass:PsipKMass >> hkK",LooseNN && kstream)
hkk->SetTitleOffset(1.5,"y");
hkK->Draw("COL")
png("kaon stream KK vs pK")

// -------------------------------------------- KK
TH2D* hk = Make2DPlot("hk","J/#psi#piK mass",80,5100,5500,"J/#psiKK mass",80,5200,5600)
TNN->Draw("PsiKKMass:PsipiKMass >> hk",LooseNN && kstream)
hk->SetTitleOffset(1.5,"y");
hk->Draw("COL")
png("kaon stream KK vs piK")

// 
TH2D* hk = Make2DPlot("hk","J/#psiK#pi mass",80,5100,5500,"J/#psiKK mass",80,5200,5600)
TNN->Draw("PsiKKMass:PsiKpiMass >> hk",LooseNN && pistreamUB)
hk->SetTitleOffset(1.5,"y");
hk->Draw("COL")
png("pion stream KK vs Kpi")

TH2D* hk = Make2DPlot("hk","J/#psi#piK mass",80,5100,5500,"J/#psiKK mass",80,5200,5600)
TNN->Draw("PsiKKMass:PsipiKMass >> hk",LooseNN && pistreamUB)
hk->SetTitleOffset(1.5,"y");
hk->Draw("COL")
png("pion stream KK vs piK")

// 
TH2D* hk = Make2DPlot("hk","J/#psiK#pi mass",80,5100,5500,"J/#psiKK mass",80,5200,5600)
TNN->Draw("PsiKKMass:PsiKpiMass >> hk",LooseNN && kstream)
hk->SetTitleOffset(1.5,"y");
hk->Draw("COL")
png("kaon stream KK vs Kpi")

TH2D* hk = Make2DPlot("hk","J/#psi#piK mass",80,5100,5500,"J/#psiKpi mass",80,5100,5500)
TNN->Draw("PsiKpiMass:PsipiKMass >> hk",LooseNN && pistreamUB)
hk->SetTitleOffset(1.5,"y");
hk->Draw("COL")
png("pion stream Kpi vs piK")

TH2D* hk = Make2DPlot("hk","J/#psi#piK mass",80,5100,5500,"J/#psiKpi mass",80,5100,5500)
TNN->Draw("PsiKpiMass:PsipiKMass >> hk",LooseNN && kstream)
hk->SetTitleOffset(1.5,"y");
hk->Draw("COL")
png("kaon stream Kpi vs piK")

// could it be that Bs->KK is the sume of Bd->Kpi and Bd->piK ?
//TNNKK->Draw("PsiKpiMass",pistream)
// TNNKpi->Draw("PsiKpiMass",pistream)


RooPlot* r = SandB(TNNKpi,0,"(BKGCAT==32)*PsipiKMass+(BKGCAT==31)*PsiKpiMass",TrueKpi,TruepiK,OptimalNN,"N","",5000,5500,50)
r->GetXaxis()->SetTitle("m_{J/#psi#piK} and m_{J/#psiK#pi}")
r->GetYaxis()->SetTitle("pdf")
r->Draw()
overlay_line(mBd+win,r,2) ; overlay_line(mBd-win,r,2)
png("Bd reflections")
 
TNNKpi->Draw("abs(PsipiKMass-5279.5)>20",TrueKpi && OptimalNN )  // 85% \pm 1
TNNKpi->Draw("abs(PsiKpiMass-5279.5)>20",TruepiK && OptimalNN )  // 83% \pm 1

//=======================================================================================
// Peaks no NN
//======================================================================================
RooPlot* r = 0
r = SandB(TNN,0,"PsiKpiMass",pistreamUB,kstream,OKNoPhi,"N","remove",4500,5500)
r->SetXTitle("m_{J/#psiK#pi} [MeV/c^{2}]");
r->SetMinimum(0.)
r->Draw()
overlay_line(mBd-win,r,2);
overlay_line(mBd+win,r,2);
png("PsiKpiMass after presel")

r = SandB(TNN,0,"PsipiKMass",pistreamUB,kstream,OKNoPhi,"N","remove",4500,6000)
r->SetXTitle("m_{J/#psi#piK} [MeV/c^{2}]");
r->SetMinimum(0.)
r->Draw()
overlay_line(mBd-win,r,2);
overlay_line(mBd+win,r,2);
png("PsipiKMass after presel")

r = SandB(TNN,0,"PsiKKMass",pistreamUB,kstream,OKNoPhi,"N","remove",4700,6000)
r->SetXTitle("m_{J/#psiKK} [MeV/c^{2}]");
r->SetMinimum(0.)
r->Draw()
overlay_line(mBs-win,r,2);
overlay_line(mBs+win,r,2);
png("PsiKKMass after presel")

gPad->SetLogy()
r = SandB(TNN,0,"PsipKMass",pistreamUB,kstream,OKNoPhi,"N","remove",5000,6100)
r->SetXTitle("m_{J/#psipK} [MeV/c^{2}]");
r->SetMinimum(0.0001)
r->Draw()
overlay_line(mLb-win,r,2);
overlay_line(mLb+win,r,2);
png("PsipKMass after presel")

gPad->SetLogy(0)
r = SandB(TNN,0,"PsiKpMass",pistreamUB,kstream,OKNoPhi,"N","remove",5000,6500)
r->SetXTitle("m_{J/#psiKp} [MeV/c^{2}]");
r->SetMinimum(0.)
r->Draw()
overlay_line(mLb-win,r,2);
overlay_line(mLb+win,r,2);
png("PsiKpMass after presel")

//=======================================================================================
// Peaks
//======================================================================================
RooPlot* r = 0
r = SandB(TNN,0,"PsiKpiMass",pistreamUB,kstream,OptimalNN,"N","remove",4500,5500)
r->SetXTitle("m_{J/#psiK#pi} [MeV/c^{2}]");
r->SetMinimum(0.)
r->Draw()
overlay_line(mBd-win,r,2);
overlay_line(mBd+win,r,2);
png("PsiKpiMass after NN")

r = SandB(TNN,0,"PsipiKMass",pistreamUB,kstream,OptimalNN,"N","remove",4500,6000)
r->SetXTitle("m_{J/#psi#piK} [MeV/c^{2}]");
r->SetMinimum(0.)
r->Draw()
overlay_line(mBd-win,r,2);
overlay_line(mBd+win,r,2);
png("PsipiKMass after NN")

r = SandB(TNN,0,"PsiKKMass",pistreamUB,kstream,OptimalNN,"N","remove",4700,6000)
r->SetXTitle("m_{J/#psiKK} [MeV/c^{2}]");
r->SetMinimum(0.)
r->Draw()
overlay_line(mBs-win,r,2);
overlay_line(mBs+win,r,2);
png("PsiKKMass after NN")

gPad->SetLogy()
r = SandB(TNN,0,"PsipKMass",pistreamUB,kstream,OptimalNN,"N","remove",5000,6100)
r->SetXTitle("m_{J/#psipK} [MeV/c^{2}]");
r->SetMinimum(0.0001)
r->Draw()
overlay_line(mLb-win,r,2);
overlay_line(mLb+win,r,2);
png("PsipKMass after NN")

gPad->SetLogy(0)
r = SandB(TNN,0,"PsiKpMass",pistreamUB,kstream,OptimalNN,"N","remove",5000,6500)
r->SetXTitle("m_{J/#psiKp} [MeV/c^{2}]");
r->SetMinimum(0.)
r->Draw()
overlay_line(mLb-win,r,2);
overlay_line(mLb+win,r,2);
png("PsiKpMass after NN")

gPad->SetLogy(0)
r = SandB(TNN,0,"PsippiMass",pistreamUB,kstream,OptimalNN,"N","HIDE",5300,6000)

//------------------------------------------------------------------------------ 
// zoom wrt 43925 entries in pistream and 50035 in kstream
//------------------------------------------------------------------------------

r = SandB(TNN,0,"PsiKpiMass",pistreamUB,kstream,OptimalNN,"NBdgpp","remove",mBd-lwin,mBd+lwin)
r->SetXTitle("m_{J/#psiK#pi} [MeV/c^{2}]");
r->SetMinimum(0.)
r->Draw()
overlay_line(mBd-win,r,2);
overlay_line(mBd+win,r,2);
png("PsiKpiMass after NN zoom")
// Events in gaussian: 8811.31 +/- 12197.4 (0.72239sigma)

r = SandB(TNN,0,"PsipiKMass",pistreamUB,kstream,OptimalNN && NoKpi,"N2Bdgpp","remove",mBd-lwin,mBd+lwin,50)
r->SetXTitle("m_{J/#psi#piK} [MeV/c^{2}]");
r->SetMinimum(0.)
r->Draw()
overlay_line(mBd-win,r,2);
overlay_line(mBd+win,r,2);
png("PsipiKMass after NN zoom")
// Events in gaussian: 653.402 +/- 5690.73 (0.114819sigma)
// Events in gaussian: 2451 +/- 14844.3 (0.165113sigma)

// removing piK has a very bad effect
r = SandB(TNN,0,"PsiKKMass",pistreamUB,kstream,OptimalNN && NoKpi,"N","remove",mBs-lwin,mBs+lwin,50)
r->SetXTitle("m_{J/#psiKK} [MeV/c^{2}]");
r->SetMinimum(0.)
r->Draw()
overlay_line(mBs-win,r,2);
overlay_line(mBs+win,r,2);
png("PsiKKMass after NN zoom")

gPad->SetLogy(0)
r = SandB(TNN,0,"PsipKMass",pistreamUB,kstream,OptimalNN,"N2Baggp","remove",mLb-lwin,mLb+lwin,50)
r->SetXTitle("m_{J/#psipK} [MeV/c^{2}]");
r->Draw()
overlay_line(mLb-win,r,2);
overlay_line(mLb+win,r,2);
png("PsipKMass after NN zoom")
// Fitted Signal Yield (1-p): 3958.66 +/- 8043.92
// Fitted Signal Yield (1-p): 26056.2 +/- 23263.5

gPad->SetLogy(0)
r = SandB(TNN,0,"PsiKpMass",pistreamUB,kstream,OptimalNN && NopiK && NoKK && NoKpi,"NBagp","remove",mLb-3*lwin,mLb+2*lwin,50)
r->SetXTitle("m_{J/#psiKp} [MeV/c^{2}]");
r->SetMinimum(0.)
r->Draw()
overlay_line(mLb-win,r,2);overlay_line(mLb+win,r,2);
png("PsiKpMass after NN zoom")
// Events in gaussian: 573.387 +/- 2168.82 (0.264377sigma)

//=======================================================================================
// Peaks under other hypotheses
//======================================================================================
if (gPad) gPad->SetLogy(0);
RooPlot* r = FourReflections(TNNKpi,TNNKK,TNNpK,"PsippiMass",LooseNN,"N","remove",5100,6100,50)
r->SetXTitle("m_{J/#psip#pi} [MeV/c^{2}]");
r->Draw();
overlay_line(mLb-win,r,2);overlay_line(mLb+win,r,2);
png("PsippiMass reflections from MC")

r = FourReflections(TNNKpi,TNNKK,TNNpK,"PsippiMass",LooseNN,"N","remove",5500,5800,15)
r->SetXTitle("m_{J/#psip#pi} [MeV/c^{2}]");
r->Draw();
overlay_line(mLb-win,r,2);overlay_line(mLb+win,r,2);
png("PsippiMass reflections from MC zoom")

RooPlot* r = FourReflections(TNNKpi,TNNKK,TNNpK,"PsipKMass",LooseNN,"N","remove",5400,6100,35)
r->SetXTitle("m_{J/#psipK} [MeV/c^{2}]");
r->Draw();
overlay_line(mLb-win,r,2);overlay_line(mLb+win,r,2);
png("PsipKMass reflections from MC")

r = FourReflections(TNNKpi,TNNKK,TNNpK,"PsipKMass",LooseNN,"N","remove",5500,5800,15)
r->SetXTitle("m_{J/#psipK} [MeV/c^{2}]");
r->Draw();
png("PsipKMass reflections from MC zoom")

// need to separate out Kp and piK

RooPlot* r = FourReflections(TNNKpi,TNNKK,TNNpK,"PsiKpiMass",LooseNN,"NM","remove",4900,5500,60)
gPad->SetLogy(1)
r->SetMinimum(0.0001);
r->SetXTitle("m_{J/#psiK#pi} [MeV/c^{2}]");
r->Draw();
overlay_line(mBd-win,r,2);overlay_line(mBd+win,r,2);
png("PsiKpiMass reflections from MC")

RooPlot* r = FourReflections(TNNKpi,TNNKK,TNNpK,"PsiKKMass",LooseNN,"NM","remove",5300,5550,50)
gPad->SetLogy(1)
r->SetXTitle("m_{J/#psiKK} [MeV/c^{2}]");
r->SetMinimum(0.0001);
r->Draw();
overlay_line(mBs-win,r,2);overlay_line(mBs+win,r,2);
png("PsiKKMass reflections from MC")

RooPlot* r = FourReflections(TNNKpi,TNNKK,TNNpK,"PsipiKMass",LooseNN,"NM","remove",5000,5400,40)
gPad->SetLogy(1)
r->SetXTitle("m_{J/#psi#piK} [MeV/c^{2}]");
r->SetMinimum(0.0001);
r->Draw();
overlay_line(mBd-win,r,2);overlay_line(mBd+win,r,2);
png("PsipiKMass reflections from MC")

RooPlot* r = FourReflections(TNNKpi,TNNKK,TNNpK,"PsiKpMass",LooseNN,"NM","remove",5400,6400,40)
gPad->SetLogy(1)
r->SetXTitle("m_{J/#psiKp} [MeV/c^{2}]");
r->SetMinimum(0.0001);
r->Draw();
overlay_line(mLb-win,r,2);overlay_line(mLb+win,r,2);
png("PsiKpMass reflections from MC")

//=======================================================================================
// Test of phi mass
//======================================================================================
RooPlot* r = FourReflections(TNNKpi,TNNKK,TNNpK,"KKMass",LooseNNAll,"NM","remove",1000,2300,39)
gPad->SetLogy(0)
r->SetXTitle("m_{KK} [MeV/c^{2}]");
r->SetMinimum(0.0001);
r->Draw();
overlay_line(mLb-win,r,2);overlay_line(mLb+win,r,2);
png("KKMass reflections from MC")

RooPlot* r = FourReflections(TNNKpi,TNNKK,TNNpK,"KKMass",LooseNNAll,"NM","remove",980,1100,24)
gPad->SetLogy(0)
r->SetXTitle("m_{KK} [MeV/c^{2}]");
r->SetMinimum(0.001);
r->Draw();
overlay_line(mLb-win,r,2);overlay_line(mLb+win,r,2);
png("KKMass reflections from MC zoom")

RooPlot* r = FourReflections(TNNKpi,TNNKK,TNNpK,"PsipKMass",LooseNNAll && "KKMass<1035","NM","remove",5400,6100,35)
gPad->SetLogy(0)
r->SetXTitle("m_{J/#psipK} [MeV/c^{2}]");
r->SetMinimum(0);
r->Draw();
overlay_line(mLb-win,r,2);overlay_line(mLb+win,r,2);
png("PsipKMass reflections from MC at phi")

r0 = SandB(TNN,0,"KKMass","KKMass>1035","",OptimalNNAll && "ErrorCode>-7 && Category==1","","remove",950,1250)  // Means (stats): 2013.03 (68619), 1511.99 (707) -> 1.03% +/- 0.03%
r0->SetXTitle("m_{KK} [MeV/c^{2}]");
r0->Draw();
overlay_line(1035,r0,3)
png("KKMass with phi cut")

r1 = SandB(TNNpK,0,"sqrt(pMMass2)","KKMass>1035","","DalitzWeight*(netOutput>0.552)*("BKGCAT==1)*(ErrorCode>-7)*(Category==-1)","","remove",1400,2600)  // Means (stats): 2013.03 (68619), 1511.99 (707) -> 1.03% +/- 0.03%
r1->SetXTitle("m_{pK} [MeV/c^{2}]");
r1->Draw();
png("pKMass with phi cut")

gPad->SetLogy(0)
r2 = SandB(TNNppi,0,"sqrt(pMMass2)","KKMass>1035","KKMass<1035",OptimalNNAll && "BKGCAT==0 && ErrorCode>-7 && Category==1","","remove")  // 1896.92 (77520), 1347.37 (623)  -> 0.8% 
r2->SetXTitle("m_{p#pi} [MeV/c^{2}]");
r2->Draw();
png("ppiMass with phi cut")

// 0.9 versus 1.1%. 

r3 = SandB(TNN,0,"PsiKKMass","KKMass>1035","",OptimalNNAll && TCut("ErrorCode>-7 && Category==-1"),"M","remove",mBs-lwin,mBs+lwin,50)
r3->SetXTitle("m_{J/#psiKK} [MeV/c^{2}]");
r3->SetMinimum(0.)
r3->Draw()
overlay_line(mBs-win,r3,2);
overlay_line(mBs+win,r3,2);
png("PsiKKMass after veto")

// understand
TH2D* hkk = Make2DPlot("hkk","m_{p#pi} [MeV/c^{2}]",152,1000,2520,"m_{KK} [MeV/c^{2}]",205,950,3000)
TNNppi->Draw("KKMass:sqrt(pMMass2) >> hkk","BKGCAT==0 && ErrorCode>-8 && Category==1")
hkk->SetTitleOffset(1.5,"y");
hkk->Draw()
horizontal_line(1035,hkk,2)
png("KK vs ppi mass in Lbpi")

// understand
TH2D* hkk2 = Make2DPlot("hkk2","m_{pK} [MeV/c^{2}]",112,1400,2520,"m_{KK} [MeV/c^{2}]",155,950,2500)
TNNpK->Draw("KKMass:sqrt(pMMass2) >> hkk2","DalitzWeight*(BKGCAT==1)*(ErrorCode>-8)*(Category==-1)")
hkk2->SetTitleOffset(1.5,"y");
hkk2->Draw()
horizontal_line(1035,hkk2,2)
png("KK vs pK mass in LbK")

//=======================================================================================
// RooKeysPdf
//======================================================================================
if (gPad) gPad->SetLogy(0)
double hmin = 5300
double hmax = 6100
RooRealVar mppi("PsippiMass","mass under ppi hypothesis",hmin,hmax)
RooRealVar BKG("BKGCAT","BKGCAT",0,200)
RooRealVar net("netOutput","Net Output",-10.,1.)
RooRealVar ErrorCode("ErrorCode","ErrorCode",-100,0)

RooDataSet dKpi_ppi("dKpi_ppi","Kpi under ppi", TNNKpi, RooArgList( mppi, BKG, net ,ErrorCode), "(32==BKGCAT)*(netOutput>0.552)*(ErrorCode==0)")
RooDataSet dKpi_ppi1("dKpi_ppi1","Kpi under ppi", TNNKpi, RooArgList( mppi, BKG, net ,ErrorCode), "(32==BKGCAT)*(netOutput>-1)*(ErrorCode==0)")
RooDataSet dKpi_ppi2("dKpi_ppi2","Kpi under ppi", TNNKpi, RooArgList( mppi, BKG, net ,ErrorCode), "(32==BKGCAT)*(netOutput>0.0)*(ErrorCode==0)")
dKpi_ppi->sumEntries()
RooPlot* plotM = mppi.frame(Bins(50));
plotM->SetTitle("")
plotM->SetXTitle("m_{J/#psip#pi} [MeV/c^{2}]");
dKpi_ppi.plotOn(plotM)
dKpi_ppi1.plotOn(plotM,LineColor(kRed),MarkerColor(kRed))
dKpi_ppi2.plotOn(plotM,LineColor(kMagenta),MarkerColor(kMagenta))
plotM->Draw()

RooKeysPdf rk_Kpi_ppi("rk_Kpi_ppi","rk_Kpi_ppi",mppi,dKpi_ppi,RooKeysPdf::NoMirror,1)
RooKeysPdf rk_Kpi_ppiA("rk_Kpi_ppiA","rk_Kpi_ppiA",mppi,dKpi_ppi,RooKeysPdf::NoMirror,2)
RooKeysPdf rk_Kpi_ppiC("rk_Kpi_ppiA","rk_Kpi_ppiA",mppi,dKpi_ppi,RooKeysPdf::NoMirror,1.5)
RooKeysPdf rk_Kpi_ppiB("rk_Kpi_ppiB","rk_Kpi_ppiB",mppi,dKpi_ppi,RooKeysPdf::MirrorBoth,1)

RooPlot* plotM = mppi.frame(Bins(50));
plotM->SetXTitle("m_{J/#psip#pi} [MeV/c^{2}]");
plotM->SetTitle("")
dKpi_ppi.plotOn(plotM)
rk_Kpi_ppi.plotOn(plotM)
rk_Kpi_ppiA.plotOn(plotM,LineColor(kCyan),LineStyle(kDashed))
rk_Kpi_ppiB.plotOn(plotM,LineColor(kMagenta),LineStyle(kDashed))
rk_Kpi_ppiC.plotOn(plotM,LineColor(kRed),LineStyle(kDashed))
plotM->Draw()
png("RKPDF PsippiMass of Kpi - tuning")

RooKeysPdf rk_Kpi_ppi1("rk_Kpi_ppi1","rk_Kpi_ppi1",mppi,dKpi_ppi1,RooKeysPdf::NoMirror,1.5)
RooKeysPdf rk_Kpi_ppi2("rk_Kpi_ppi2","rk_Kpi_ppi2",mppi,dKpi_ppi2,RooKeysPdf::NoMirror,1.5)

RooPlot* plotM = mppi.frame(Bins(50));
plotM->SetXTitle("m_{J/#psip#pi} [MeV/c^{2}]");
plotM->SetTitle("")
dKpi_ppi2.plotOn(plotM,LineColor(kMagenta),MarkerColor(kMagenta))
dKpi_ppi1.plotOn(plotM,LineColor(kRed),MarkerColor(kRed))
dKpi_ppi.plotOn(plotM)
rk_Kpi_ppi2.plotOn(plotM,LineColor(kMagenta),Normalization(dKpi_ppi2->sumEntries(),RooAbsReal::NumEvent))
rk_Kpi_ppi1.plotOn(plotM,LineColor(kRed),Normalization(dKpi_ppi1->sumEntries(),RooAbsReal::NumEvent))
rk_Kpi_ppi.plotOn(plotM)
//rk_Kpi_ppiA.plotOn(plotM,LineColor(kCyan))
//rk_Kpi_ppiB.plotOn(plotM,LineColor(kYellow))
plotM->Draw()
png("RKPDF PsippiMass of Kpi")

RooPlot* plotM = mppi.frame(Bins(50));
rk_Kpi_ppi2.plotOn(plotM,LineColor(kMagenta))
rk_Kpi_ppi1.plotOn(plotM,LineColor(kRed))
rk_Kpi_ppi.plotOn(plotM)
plotM->Draw()
png("RKPDF PsippiMass of Kpi - 2")

//-----------------------------------------------------------------------------------------------
// range test
mppi->setRange("Low", 5300,5500);
mppi->setRange("High", 5650,6100);
n = dKpi_ppi.sumEntries("1","Low,High")

RooPlot* plotM = mppi.frame();
dKpi_ppi.plotOn(plotM,CutRange("Low,High"))
rk_Kpi_ppi.plotOn(plotM,LineColor(kMagenta))                // plots the whole pdf with the fit
rk_Kpi_ppi.plotOn(plotM,LineColor(kRed),Range("Low,High"))  // plots the part pdf but with wrong norm
rk_Kpi_ppi.plotOn(plotM,LineColor(kBlue),Range("Low,High"),Normalization(n,RooAbsReal::NumEvent)) // ok
plotM->Draw()


//================================================================================================
// RooKeysPdf extracted from MC NN.root
//================================================================================================
root.exe LambdabMC-LbK-Sim08a-1127-1128-1129-1137-0.552-SW.root LambdabMC-B2JpsiKK-Sim08a-1134-1135-0.552-SW.root LambdabMC-B2JpsiKpi-Sim08a-1138-1139-0.552-SW.root LambdabMC-Lbpi-Sim08a-1122-1123-1124-1125-0.552-SW.root 
_file0->ls()
RooKeysPdf* r1 = _file0->Get("RK_PsippiFit_pdf_1")
RooKeysPdf* r34 = _file0->Get("RK_PsippiFit_pdf_34")
RooKeysPdf* r33 = _file1->Get("RK_PsippiFit_pdf_33")
RooKeysPdf* r31 = _file2->Get("RK_PsippiFit_pdf_31")
RooKeysPdf* r32 = _file2->Get("RK_PsippiFit_pdf_32")
RooRealVar n1("n1","n1",1829)
RooRealVar n34("n34","n34",170)
RooRealVar n33("n33","n33",950)
RooRealVar n31("n31","n31",200)
RooRealVar n32("n32","n32",5300)
RooAddPdf pdf("pdf","pdf",RooArgList(*r1,*r31,*r32,*r33,*r34),RooArgList(n1,n31,n32,n33,n34))

//static const int c_psipK_BKGCAT = 1 ;
//static const int c_piK_BKGCAT = 31 ;
//static const int c_Kpi_BKGCAT = 32 ;
//static const int c_KK_BKGCAT = 33 ;
//static const int c_Kp_BKGCAT = 34 ;
//static const int c_ppi_BKGCAT = 0 ;

double hmin = 5500
double hmax = 5900
RooRealVar mppi("PsippiMass","mass under ppi hypothesis",hmin,hmax)
RooPlot* plotM = mppi.frame();
plotM->SetXTitle("m_{J/#psip#pi} [MeV/c^{2}]");
pdf->plotOn(plotM)
pdf->plotOn(plotM,Components(*r1),LineColor(2),LineStyle(kDashed))        // pK red dashed
pdf->plotOn(plotM,Components(*r31),LineColor(3),LineStyle(kDashed))       // piK light green dashed
pdf->plotOn(plotM,Components(*r32),LineColor(7),LineStyle(kDashDotted))   // Kpi cyan dashed dotted
pdf->plotOn(plotM,Components(*r33),LineColor(28),LineStyle(kDotted))      // KK brown dotted
pdf->plotOn(plotM,Components(*r34),LineColor(6),LineStyle(kDashDotteded)) // invisible
plotM->Draw()
png("ppi rookeyspdfs")

RooKeysPdf* k34 = _file0->Get("RK_PsipKFit_pdf_34")
RooKeysPdf* k33 = _file1->Get("RK_PsipKFit_pdf_33")
RooKeysPdf* k31 = _file2->Get("RK_PsipKFit_pdf_31")
RooKeysPdf* k32 = _file2->Get("RK_PsipKFit_pdf_32")
RooRealVar nk34("nk34","n34",278)
RooRealVar nk33("nk33","n33",1600)
RooRealVar nk31("nk31","n31",2400)
RooRealVar nk32("nk32","n32",0)
RooAddPdf pdfk("pdf","pdfk",RooArgList(*k31,*k32,*k33,*k34),RooArgList(nk31,nk32,nk33,nk34))

double hmin = 5500
double hmax = 5800
RooRealVar mppi("PsipKMass","mass under pK hypothesis",hmin,hmax)
RooPlot* plotM = mppi.frame();
plotM->SetXTitle("m_{J/#psipK} [MeV/c^{2}]");
pdfk->plotOn(plotM)
pdfk->plotOn(plotM,Components(*k31),LineColor(3),LineStyle(kDashed))     // piK light green dashed
pdfk->plotOn(plotM,Components(*k32),LineColor(7),LineStyle(kDashDotted)) // invisible
pdfk->plotOn(plotM,Components(*k33),LineColor(28),LineStyle(kDotted))    // KK brown dotted
pdfk->plotOn(plotM,Components(*k34),LineColor(6),LineStyle(kDashDotted)) // Kp magenta dashdotted
plotM->Draw()
png("pK rookeyspdfs")

//=======================================================================================
// Test
//======================================================================================
TNNKpi->Draw("PsippiMass","BKGCAT==31" && pistreamUB && "netOutput>-1")
TNNKK->Draw("PsippiMass","BKGCAT==33" && pistreamUB && "netOutput>-1")

TNNppi->Draw("mprime:psipMass2","BKGCAT==0 && Category==1")
TNNppi->Draw("thetaprime:psipMass2","BKGCAT==0 && Category==1")

TH2D* tm = Make2DPlot("tm","m'",20,0.,1.,"#theta'",20,0.,1.)
TNNppi->Draw("thetaprime:mprime >> tm","BKGCAT==0 && Category==1")
tm->Draw("LEGO")
gStyle->SetPalette(0)
tm->Draw("COL")
png("Lbpi theta' m'")
