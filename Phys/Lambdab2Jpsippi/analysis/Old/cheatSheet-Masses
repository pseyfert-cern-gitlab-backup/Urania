root.exe
//===================================================================
TChain* T = new TChain("BetaSLambdab2JpsippiDetachedLine_Tuple/DecayTree")
T->Add("/castor/cern.ch/user/p/pkoppenb/Lambdab/Lambdab-S20r1-950.root")
T->Add("/castor/cern.ch/user/p/pkoppenb/Lambdab/Lambdab-S20-951.root")
TChain* NN = new TChain("NetTree")
SW->Add("Lambdab-S20r1-950-NN.root")
SW->Add("Lambdab-S20-951-NN.root")
T->AddFriend(NN)
T->Draw("B_SubpK_M:tMass","(runNumber==115332 ||runNumber==115332) && Category==-1 && netOutput>-5")  // 

TTree* TD = _file0->Get("BetaSLambdab2JpsippiDetachedLine_Tuple/DecayTree")
TTree* TJ = _file1->Get("Lambdab2Jpsippi_TupleMC/DecayTree")
TTree* ND = _file2->Get("NetTree")
TTree* SD = _file3->Get("WeightTree")
TTree* NJ = _file4->Get("NetTree")
TD->AddFriend(SD)
TD->AddFriend(ND)
TD->Draw("B_FullFit_M:PsippiMass","Category==1")
TJ->AddFriend(NJ)
TD->Draw("sweightLb","Category==1 && wnetOutput>0.9")

TCut OK("ErrorCode==0")
TCut OptimalNN("netOutput>0.846" && OK)

TCut L0TIS("BL0HadronDecision_TIS==1")
TCut L0Mu("BL0DiMuonDecision_TOS==1 || BL0MuonDecision_TOS==1")
TCut L0(L0Mu || "BL0MuonDecision_TIS==1 || BL0DiMuonDecision_TIS==1")
TCut Hlt1TIS(L0 && "BHlt1TrackAllL0Decision_TIS==1")
TCut Hlt1(L0 && "BHlt1TrackMuonDecision_TOS==1 || PsiHlt1DiMuonHighMassDecision_TOS==1 || PsiHlt1TrackAllL0Decision_TOS==1")
TCut Hlt2TIS(Hlt1 && "BHlt2Global_TIS==1")
TCut Hlt2(Hlt1 && "PsiHlt2DiMuonDetachedJPsiDecision_TOS==1 || PsiHlt2DiMuonJPsiDecision_TOS==1 || PsiHlt2DiMuonJPsiHighPTDecision_TOS==1")
TCut FitRange("PsippiMass>5560 && PsippiMass<5810")

TCut BdVeto("(B_SubKpi_M < 5259.5) || (B_SubKpi_M> 5299.5)")
TString piKMass = "sqrt((Psi_PE+sqrt(pplus_PE**2-938.272**2+139.57**2)+sqrt(piminus_PE**2-139.57**2+493.677**2))**2-(Psi_PX+pplus_PX+piminus_PX)**2-(Psi_PY+pplus_PY+piminus_PY)**2-(Psi_PZ+pplus_PZ+piminus_PZ)**2)"
TString KMass = "sqrt((Psi_PE+sqrt(piminus_PE**2-139.57**2+493.677**2))**2-(Psi_PX+piminus_PX)**2-(Psi_PY+piminus_PY)**2-(Psi_PZ+piminus_PZ)**2)"
TCut Bd2Veto("abs("+piKMass+"-5279.5)>20")
TString KpMass = "sqrt((Psi_PE+sqrt(pplus_PE**2-938.272**2+493.677**2)+sqrt(piminus_PE**2-139.57**2+938.272**2))**2-(Psi_PX+pplus_PX+piminus_PX)**2-(Psi_PY+pplus_PY+piminus_PY)**2-(Psi_PZ+pplus_PZ+piminus_PZ)**2)"
TString KMass = "sqrt((Psi_PE+sqrt(piminus_PE**2-139.57**2+493.677**2))**2-(Psi_PX+piminus_PX)**2-(Psi_PY+piminus_PY)**2-(Psi_PZ+piminus_PZ)**2)"
TString K2Mass = "sqrt((Psi_PE+sqrt(pplus_PE**2-938.272**2+493.677**2))**2-(Psi_PX+pplus_PX)**2-(Psi_PY+pplus_PY)**2-(Psi_PZ+pplus_PZ)**2)"
TString pipiMass = "sqrt((Psi_PE+sqrt(pplus_PE**2-938.272**2+139.57**2)+piminus_PE)**2-(Psi_PX+pplus_PX+piminus_PX)**2-(Psi_PY+pplus_PY+piminus_PY)**2-(Psi_PZ+pplus_PZ+piminus_PZ)**2)"
TString ppMass = "sqrt((Psi_PE+pplus_PE+sqrt(piminus_PE**2-139.57**2+938.272**2))**2-(Psi_PX+pplus_PX+piminus_PX)**2-(Psi_PY+pplus_PY+piminus_PY)**2-(Psi_PZ+pplus_PZ+piminus_PZ)**2)"
TString KKMass = "sqrt((Psi_PE+sqrt(pplus_PE**2-938.272**2+493.677**2)+sqrt(piminus_PE**2-139.57**2+493.677**2))**2-(Psi_PX+pplus_PX+piminus_PX)**2-(Psi_PY+pplus_PY+piminus_PY)**2-(Psi_PZ+pplus_PZ+piminus_PZ)**2)"
TString pipMass = "sqrt((Psi_PE+sqrt(pplus_PE**2-938.272**2+139.57**2)+sqrt(piminus_PE**2-139.57**2+938.272**2))**2-(Psi_PX+pplus_PX+piminus_PX)**2-(Psi_PY+pplus_PY+piminus_PY)**2-(Psi_PZ+pplus_PZ+piminus_PZ)**2)"

TCut splitter("(piminus_ProbNNpi>piminus_ProbNNk)")
TCut pistream(splitter && OK)
TCut kstream(!splitter && OK)
TCut GoodPi(Hlt2 && "BKGCAT==0 && abs(PsippiMass-5620)<100" && OK)
TCut GoodK(Hlt2 && "BKGCAT==1 && abs(PsipKMass-5620)<100" && OK)
TCut Reflection(Hlt2 && "B_BKGCAT==30" && OK)
Double_t mLb = 5620 ;
Double_t mBd = 5279.5 ;
Double_t mBu = 5279.17 ;
Double_t mBs = 5366.3 ;
Double_t win = 20 ;
RooPlot* r = 0 ; // r is defined here

//================================================================================
// Understand reflections
//================================================================================
//r = SandB(TD,0,"pplus_ProbNNp","Category>-1.5","Category==-2",pistream && Hlt2 && OptimalNN,"N","remove") // cut at 0.3-4?
//r = SandB(TD,0,"pplus_ProbNNk","Category>-1.5","Category==-2",pistream && Hlt2 && OptimalNN,"N","remove") // not clear
//r = SandB(TD,0,"pplus_ProbNNpi","Category>-1.5","Category==-2",pistream && Hlt2 && OptimalNN,"N","remove")
r = SandB(TD,0,"pplus_ProbNNp-pplus_ProbNNk","Category>-1.5","Category==-2",pistream && Hlt2 && OptimalNN,"N","remove")
//r = SandB(TD,0,"pplus_PIDp-pplus_PIDK","Category>-1.5","Category==-2",pistream && Hlt2 && OptimalNN,"N","remove")
//r = SandB(TD,0,"pplus_ProbNNp-pplus_ProbNNk>0","Category>-1.5","Category==-2",pistream && Hlt2 && OptimalNN,"NI","remove") // 92% vs 81%
//r = SandB(TD,0,"pplus_PIDp-pplus_PIDK>0","Category>-1.5","Category==-2",pistream && Hlt2 && OptimalNN,"NI","remove") //  92.3% vs 81.5% (same)

TCut Biz("abs(PsippiMass-5750)<30")

//================================================================================
gPad->SetLogy(1)
r = SandB(TD,0,"(Category==1)*PsippiMass+(Category==-1)*PsipKMass","Category==1","Category==-1",Hlt2 && OptimalNN,"","Streams after NN",5000,6100,55)
gPad->SetLogy(0)
r->SetMaximum(200)
r->Draw()
png("B Streams after NN zoom")
//================================================================================
// Check the vetoing has done the right thing
gPad->SetLogy(0)
r = SandB(TD,0,"PsipKMass","sweightLb>-5","1","Category==1" &&  Hlt2 && OptimalNN,"","Remaining PsipK in Psippi",5410,5810,80)
r = SandB(TD,0,"PsiKpiMass","sweightLb>-5","1","Category==1" &&  Hlt2 && OptimalNN,"","Remaining PsiKpi in Psippi",4800,5700)
r = SandB(TD,0, piKMass ,"sweightLb>-5","1","Category==1" &&  Hlt2 && OptimalNN,"","Remaining PsipiK in Psippi",5100,5400)
r = SandB(TD,0, KKMass ,"sweightLb>-5","1","Category==1" &&  Hlt2 && OptimalNN,"","Remaining PsiKK in Psippi",5100,5800)
//================================================================================
// Check the vetoing has done the right thing
r = SandB(TD,0,"PsipKMass","sweightLb>-5","1","Category==-1" &&  Hlt2 && OptimalNN,"","Remaining PsipK in PsipK",5410,5810,80)
r = SandB(TD,0,"PsiKpiMass","sweightLb>-5","1","Category==-1" &&  Hlt2 && OptimalNN,"","Remaining PsiKpi in PsipK",4800,5700)
r = SandB(TD,0, piKMass ,"sweightLb>-5","1","Category==-1" &&  Hlt2 && OptimalNN,"","Remaining PsipiK in PsipK",5100,5400)
r = SandB(TD,0, KKMass ,"sweightLb>-5","1","Category==-1" &&  Hlt2 && OptimalNN,"","Remaining PsiKK in PsipK",5100,5800)
//================================================================================
gPad->SetLogy(0)
//---------------------------------------------------------------------------------
r = SandB(TD,0,"PsippiMass","Category==1","1",pistream && OK && Hlt2,"","Psippi vetoes effect",5410,5810,80)
r = SandB(TD,0,"PsippiMass","Category==1","1",pistream && OptimalNN && Hlt2,"","Psippi vetoes effect after NN",5410,5810,80)
r = SandB(TD,0,"PsipKMass","Category==-1","1",kstream && OK && Hlt2,"","PsipK vetoes effect",5410,5810,80)
gPad->SetLogy()
r = SandB(TD,0,"PsipKMass","Category==-1","1",kstream && OptimalNN && Hlt2,"","PsipK vetoes effect after NN",5410,5810,80)
r = SandB(TD,0,"PsipKMass","Category==-1","1",kstream && OptimalNN && Hlt2,"Baggpp","remove",5410,5810,80)

//---------------------------------------------------------------------------------
r = SandB(TD,TJ,"PsippiMass","1","1","Category==1" && Hlt2 && OptimalNN,"","Remaining PsipK in Psippi - data and MC",5410,5810,80)
// too little

//---------------------------------------------------------------------------------
// Test various reflections
//---------------------------------------------------------------------------------
r = SandB(TD,0,"pplus_ProbNNp-pplus_ProbNNk",pistream,kstream,OptimalNN && Hlt2,"","Post NN p prob p-K",-0.1,1,55)
r->SetXTitle("P(p)-p(K)");
overlay_line(0,r);
png("Post NN prob p minus K")

gPad->SetLogy(0)
r = SandB(TD,0,"Psi_MM",pistream,kstream,OptimalNN && Hlt2,"","Post NN psi mass",3017,3177,150)
r->SetXTitle("m_{#mu#mu} [MeV/c^{2}]");
png("Post NN mumu mass")

// SandB(TD,0,"(piminus_ProbNNpi>piminus_ProbNNk)*PsippiMass+(piminus_ProbNNpi<=piminus_ProbNNk)*PsipKMass",pistream,kstream,OptimalNN && Hlt2,"","Post NN pi and k stream mass",5500,5700)

// Lambdas
r = SandB(TD,0,"PsippiMass",pistream,kstream,OptimalNN && Hlt2,"","remove",5400,5800)
r->SetXTitle("m_{J/#psip#pi} [MeV/c^{2}]");
overlay_line(mLb-win,r);
overlay_line(mLb+win,r);
png("Post NN ppi mass")

r = SandB(TD,0,"PsipKMass",pistream,kstream,OptimalNN && Hlt2,"","remove",5400,5800)
r->SetXTitle("m_{J/#psipK} [MeV/c^{2}]");
overlay_line(mLb-win,r);
overlay_line(mLb+win,r);
png("Post NN pK mass")

r = SandB(TD,0,KpMass,pistream,kstream,OptimalNN && Hlt2,"","remove",5400,5800) 
r->SetXTitle("m_{J/#psiKp} [MeV/c^{2}]");
overlay_line(mLb-win,r);
overlay_line(mLb+win,r);
png("Post NN Kp mass")

r = SandB(TD,0,pipMass,pistream,kstream,OptimalNN && Hlt2,"","remove",5400,5800) 
r->SetXTitle("m_{J/#psi#pip} [MeV/c^{2}]");
overlay_line(mLb-win,r);
overlay_line(mLb+win,r);
png("Post NN pip mass")

// Bd
r = SandB(TD,0,"PsiKpiMass",pistream,kstream,OptimalNN && Hlt2,"","remove",5000,5500)
r->SetXTitle("m_{J/#psiK#pi} [MeV/c^{2}]");
overlay_line(mBd-win,r);
overlay_line(mBd+win,r);
png("Post NN Kpi mass")

r = SandB(TD,0,piKMass,pistream,kstream,OptimalNN && Hlt2,"","remove",5000,5500)
r->SetXTitle("m_{J/#psi#piK} [MeV/c^{2}]");
overlay_line(mBd-win,r);
overlay_line(mBd+win,r);
png("Post NN piK mass")

r = SandB(TD,0,ppMass,pistream,kstream,OptimalNN && Hlt2,"","remove",5100,5750,65)      // Nothing
r->SetXTitle("m_{J/#psipp} [MeV/c^{2}]");
overlay_line(mBd-win,r);
overlay_line(mBd+win,r);
png("Post NN pp mass")

// B+
r = SandB(TD,0,KMass,pistream,kstream,OptimalNN && Hlt2,"","remove",5000,5500) // not a problem
r->SetXTitle("m_{J/#psiK} [MeV/c^{2}]");
overlay_line(mBu-win,r);
overlay_line(mBu+win,r);
png("Post NN K mass")

r = SandB(TD,0,K2Mass,pistream,kstream,OptimalNN && Hlt2,"","remove",5000,5500) // not a problem
r->SetXTitle("m_{J/#psiK} [MeV/c^{2}]");
overlay_line(mBu-win,r);
overlay_line(mBu+win,r);
png("Post NN K2 mass")

// Bs
r = SandB(TD,0,pipiMass,pistream,kstream,OptimalNN && Hlt2,"","remove",5200,5700)  // It's there!
r->SetXTitle("m_{J/#psi#pi#pi} [MeV/c^{2}]");
overlay_line(mBd-win,r);
overlay_line(mBd+win,r);
overlay_line(mBs-win,r);
overlay_line(mBs+win,r);
png("Post NN pipi mass")

r = SandB(TD,0,KKMass,pistream,kstream,OptimalNN && Hlt2,"","remove",5100,5600)  
r->SetXTitle("m_{J/#psiKK} [MeV/c^{2}]");
overlay_line(mBs-win,r);
overlay_line(mBs+win,r);
png("Post NN KK mass")

//================================================================================


//================================================================================
gPad->SetLogy(0)
// 2d Plots
TH2D* hp = Make2DPlot("hp","J/#psip#pi mass",110,5000,6100,"J/#psiK#pi mass",110,4800,5900)
TD->Draw("PsiKpiMass:PsippiMass >> hp",OptimalNN && Hlt2 && pistream)
hp->Draw("COL")
png("pion stream 2D mass")

TH2D* hk = Make2DPlot("hk","J/#psipK mass",110,5000,6100,"J/#psi#piK mass",110,4800,5900)
TD->Draw(piKMass+":PsipKMass >> hk",OptimalNN && Hlt2 && kstream)
hk->Draw("COL")
png("kaon stream 2D mass")

TH2D* hp2 = Make2DPlot("hp2","J/#psip#pi mass",120,4900,6100,"J/#psipK mass",120,5000,6200)
TD->Draw("PsipKMass:PsippiMass >> hp2",OptimalNN && Hlt2 && pistream)
hp2->Draw("COL")
png("pion stream 2D mass Lb")

TH2D* hk2 = Make2DPlot("hk2","J/#psipK mass",100,5100,6100,"J/#psip#pi mass",100,5000,6000)
TD->Draw("PsippiMass:PsipKMass >> hk2",OptimalNN && Hlt2 && kstream)
hk2->Draw("COL")
png("kaon stream 2D mass Lb")

TH2D* hLk = Make2DPlot("hLk","J/#psipK mass",90,5200,6100,"J/#psiKp mass",90,5200,6100)
TD->Draw(KpMass+":PsipKMass >> hLk",OptimalNN && Hlt2 && kstream)
hLk->Draw("COL")
png("kaon stream 2D mass Lb crossfeed")

TH2D* hLp = Make2DPlot("hLp","J/#psip#pi mass",90,5200,6100,"J/#psiKp mass",90,5200,6100)
TD->Draw(KpMass+":PsippiMass >> hLp",OptimalNN && Hlt2 && pistream)
hLp->Draw("COL")
png("pion stream 2D mass Lb crossfeed")

TH2D* hkK = Make2DPlot("hkK","J/#psipK mass",110,5000,6100,"J/#psiKK mass",110,4800,5900)
TD->Draw(KKMass+":PsipKMass >> hkK",OptimalNN && Hlt2 && kstream) // Bd2Velo removes the diagonal
hkK->Draw("COL")
png("kaon stream 2D mass KK")

/================================================================================
// how much do the vetoes loose me?

TFile *_fs = TFile::Open("~/work/Baryons/Lambdab/LambdabMC-MC11-Lb2Jpsippi-716.root")
TTree* Tp = (TTree*)_fs->Get("BetaSLambdab2JpsippiDetachedLine_TupleMC/DecayTree")  // in DST
//TTree* Tp2 = (TTree*)_fs->Get("Lambdab2Jpsippi_TupleMC/DecayTree")                   // rerun
_fs->ls()
TFile *_fn = TFile::Open("LambdabMC-MC11-Lb2Jpsippi-716-NN.root")
TTree* Np = (TTree*)_fn->Get("NetTree")
Tp->AddFriend(Np)
Tp->Draw("B_FullFit_M:PsippiMass","netOutput>0")
cout << Tp->GetEntries() << " != " << Np->GetEntries() << " ? " << endl ;

TFile *_fk = TFile::Open("~/work/Baryons/Lambdab/LambdabMC-MC11-Lb2JpsipK-718.root")
TTree* Tk = (TTree*)_fk->Get("Lambdab2Jpsippi_TupleMC/DecayTree")  // rerun
_fk->ls()
TFile *_fnk = TFile::Open("LambdabMC-MC11-Lb2JpsipK-718-NN.root")
TTree* Nk = (TTree*)_fnk->Get("NetTree")
Tk->AddFriend(Nk)
Tk->Draw("B_FullFit_M:PsippiMass","netOutput>0")
cout << Tk->GetEntries() << " != " << Nk->GetEntries() << " ? " << endl ;




// Overall

r = SandB(Tp,0,"PsipKMass",OptimalNN,"1",pistream && GoodPi,"","remove",5500,6300) 
r->SetXTitle("m_{J/#psipK} [MeV/c^{2}]");
overlay_line(mLb-win,r);
overlay_line(mLb+win,r);
png("PsipKMass on signal")

r = SandB(Tp,0,KpMass,OptimalNN,"1",pistream && GoodPi,"","remove",5000,8000) 
r->SetXTitle("m_{J/#psiKp} [MeV/c^{2}]");
overlay_line(mLb-win,r);
overlay_line(mLb+win,r);
png("PsiKpMass on signal")

r = SandB(Tp,0,"PsiKpiMass",OptimalNN,"1",pistream && GoodPi,"","remove",4500,5600) 
r->SetXTitle("m_{J/#psiK#pi} [MeV/c^{2}]");
overlay_line(mBd-win,r);
overlay_line(mBd+win,r);
png("PsiKpiMass on signal")

// need to study Dalitz here -> Make a DalitzEff.C

r = SandB(Tp,0,piKMass,OptimalNN,"1",pistream && GoodPi,"","remove",4500,6000) 
r->SetXTitle("m_{J/#psi#piK} [MeV/c^{2}]");
overlay_line(mBd-win,r);
overlay_line(mBd+win,r);
png("PsipiKMass on signal")

r = SandB(Tp,0,KKMass,OptimalNN,"1",pistream && GoodPi,"","remove",4800,6200) 
r->SetXTitle("m_{J/#psiKp} [MeV/c^{2}]");
overlay_line(mBs-win,r);
overlay_line(mBs+win,r);
png("PsiKKMass on signal")

//---------------------------------------------------------------------------------
// kstream
r = SandB(Tk,0,"PsippiMass",OptimalNN,"1",kstream && GoodK,"","remove",5100,5800) 
r->SetXTitle("m_{J/#psip#pi} [MeV/c^{2}]");
overlay_line(mLb-win,r);
overlay_line(mLb+win,r);
png("PsippiMass on PsipK")

r = SandB(Tk,0,KpMass,OptimalNN,"1",kstream && GoodK,"","remove",4500,7000) 
r->SetXTitle("m_{J/#psiKp} [MeV/c^{2}]");
overlay_line(mLb-win,r);
overlay_line(mLb+win,r);
png("PsiKpMass on PsipK")

r = SandB(Tk,0,"PsiKpiMass",OptimalNN,"1",kstream && GoodK,"","remove",4500,5600) 
r->SetXTitle("m_{J/#psiK#pi} [MeV/c^{2}]");
overlay_line(mBd-win,r);
overlay_line(mBd+win,r);
png("PsiKpiMass on PsipK")

r = SandB(Tk,0,piKMass,OptimalNN,"1",kstream && GoodK,"","remove",4000,5600) 
r->SetXTitle("m_{J/#psi#piK} [MeV/c^{2}]");
overlay_line(mBd-win,r);
overlay_line(mBd+win,r);
png("PsipiKMass on PsipK")

r = SandB(Tk,0,KKMass,OptimalNN,"1",kstream && GoodK,"","remove",4550,5550) 
r->SetXTitle("m_{J/#psiKp} [MeV/c^{2}]");
overlay_line(mBs-win,r);
overlay_line(mBs+win,r);
png("PsiKKMass on PsipK")

//---------------------------------------------------------------------------------
// Overall efficiencies
//---------------------------------------------------------------------------------
TCut TightPi(pistream && GoodPi && OptimalNN)
TCut TightK(kstream && GoodK && OptimalNN)
gPad->SetLogy()
SandB(Tp,0,"abs(PsipKMass-5620)>20","1","MCWeight",TightPi,"NI","remove",0,1)     // Means (stats): 0.999845 (45205), 0.999972 (47802.4)
SandB(Tp,0,"abs(PsipKMass-5620)>20","1","MCWeight",TightPi,"NI","remove",0,1)     // Means (stats): 0.999845 (45205), 0.999972 (47802.4)
SandB(Tp,0,"abs("+KpMass+"-5620)>20","1","MCWeight",TightPi,"NI","remove",0,1)    // Means (stats): 0.963654 (45205), 0.958131 (47802.4)
SandB(Tp,0,"abs(PsiKpiMass-5279.5)>20","1","MCWeight",TightPi,"NI","remove",0,1)  // Means (stats): 0.939188 (45205), 0.929149 (47802.4)
SandB(Tp,0,"abs("+piKMass+"-5279.5)>20","1","MCWeight",TightPi,"NI","remove",0,1) // Means (stats): 0.959783 (45205), 0.953823 (47802.4)
SandB(Tp,0,"abs("+KKMass+"-5366.3)>20","1","MCWeight",TightPi,"NI","remove",0,1)  // Means (stats): 0.958434 (45205), 0.954754 (47802.4)
SandB(Tp,0,"Category==1","1","MCWeight",TightPi,"NI","remove",0,1)                // Means (stats): 0.937839 (45205), 0.927793 (47802.4)

SandB(Tk,0,"abs(PsippiMass-5620)>20","1","MCWeight",TightK,"NI","remove",0,1)     // Means (stats): 0.99996  (75466), 0.999973 (81211.4)
SandB(Tk,0,"abs("+KpMass+"-5620)>20","1","MCWeight",TightK,"NI","remove",0,1)     // Means (stats): 0.927623 (75466), 0.908434 (81211.4)
SandB(Tk,0,"abs(PsiKpiMass-5279.5)>20","1","MCWeight",TightK,"NI","remove",0,1)   // Means (stats): 0.835038 (75466), 0.845191 (81211.4)
SandB(Tk,0,"abs("+piKMass+"-5279.5)>20","1","MCWeight",TightK,"NI","remove",0,1)  // Means (stats): 0.892587 (75466), 0.876695 (81211.4)
SandB(Tk,0,"abs("+KKMass+"-5366.3)>20","1","MCWeight",TightK,"NI","remove",0,1)   // Means (stats): 0.855962 (75466), 0.8324   (81211.4)
SandB(Tk,0,"Category==-1","1","MCWeight",TightK,"NI","remove",0,1)                // Means (stats): 0.853523 (75466), 0.827662 (81211.4)

cout << "% Phase space: " << 100*0.853523/0.937839 << "/% and Weighted: " << 100*0.827662/0.927793 << "/%" << endl ;
% Phase space: 91.0095/% and Weighted: 89.2076/%

//---------------------------------------------------------------------------------
// Shapes

TFile *_fB = TFile::Open("~/work/Baryons/Lambdab/LambdabMC-MC11-B2JpsiKpi-720.root")
TTree* TB = (TTree*)_fB->Get("Lambdab2Jpsippi_TupleMC/DecayTree")  // rerun
_fB->ls()
TFile *_fnB = TFile::Open("LambdabMC-MC11-B2JpsiKpi-720-NN.root")
TTree* NB = (TTree*)_fnB->Get("NetTree")
TB->AddFriend(NB)
TB->Draw("B_FullFit_M:PsippiMass","netOutput>0")
cout << TB->GetEntries() << " != " << NB->GetEntries() << " ? " << endl ;

TFile *_fBs = TFile::Open("~/work/Baryons/Lambdab/LambdabMC-MC11-Bs2JpsiKK-735.root")
_fBs->ls()
TTree* TBs = (TTree*)_fBs->Get("Lambdab2Jpsippi_TupleMC/DecayTree") 
TFile *_fnBs = TFile::Open("LambdabMC-MC11-Bs2JpsiKK-735-NN.root")
TTree* NBs = (TTree*)_fnBs->Get("NetTree")
TBs->AddFriend(NBs)
TBs->Draw("B_FullFit_M:PsippiMass","netOutput>0")
cout << TBs->GetEntries() << " != " << NBs->GetEntries() << " ? " << endl ;

// ppi =========================================

// Reflection of ppi on itself
r = SandB(Tp,0,"PsippiMass",OptimalNN,"1",pistream && Reflection,"N","remove",5100,6100,50) 
r->SetXTitle("m_{J/#psip#pi} [MeV/c^{2}]");
overlay_line(mLb-win,r);
overlay_line(mLb+win,r);
png("PsippiMass of Psippi")

// Reflection of pK on ppi
r = SandB(Tk,0,"PsippiMass",OptimalNN,"1",pistream && Reflection && "abs(pplus_TRUEID)==2212","N","remove",5100,6100,50) 
r->SetXTitle("m_{J/#psip#pi} [MeV/c^{2}]");
overlay_line(mLb-win,r);
overlay_line(mLb+win,r);
png("PsippiMass1 of PsipK")

// Reflection 2 of pK on ppi
r = SandB(Tk,0,"PsippiMass",OptimalNN,"1",pistream && Reflection && "abs(pplus_TRUEID)==321","N","remove",5100,6100,50) 
r->SetXTitle("m_{J/#psip#pi} [MeV/c^{2}]");
overlay_line(mLb-win,r);
overlay_line(mLb+win,r);
png("PsippiMass2 of PsipK")

// Reflection of Kpi on ppi
r = SandB(TB,0,"PsippiMass",OptimalNN,"1",pistream && Reflection,"N","remove",5100,6100) 
r->SetXTitle("m_{J/#psip#pi} [MeV/c^{2}]");
overlay_line(mLb-win,r);
overlay_line(mLb+win,r);
png("PsippiMass of PsiKpi")

// Reflection of Bs on ppi
r = SandB(TBs,0,"PsippiMass",OptimalNN,"1",pistream && Reflection,"N","remove",5100,6100,50) 
r->SetXTitle("m_{J/#psip#pi} [MeV/c^{2}]");
overlay_line(mLb-win,r);
overlay_line(mLb+win,r);
png("PsippiMass of Bs2JpsiKK")

// pK =========================================

// Reflection of Kp on itself
r = SandB(Tk,0,"PsipKMass",OptimalNN,"1",kstream && Reflection && "abs(pplus_TRUEID)==321 && abs(piminus_TRUEID)==2212","N","remove",5100,6100,50) 
r->SetXTitle("m_{J/#psipK} [MeV/c^{2}]");
overlay_line(mLb-win,r);
overlay_line(mLb+win,r);
png("PsipKMass of PsipK")

// Reflection of ppi on Kpi
r = SandB(Tp,0,"PsipKMass",OptimalNN,"1",kstream && Reflection,"N","remove",5100,6100,50) 
r->SetXTitle("m_{J/#psipK} [MeV/c^{2}]");
overlay_line(mLb-win,r);
overlay_line(mLb+win,r);
png("PsipKMass of Psippi")

// Reflection of Kpi on pK
r = SandB(TB,0,"PsipKMass",OptimalNN,"1",kstream && Reflection,"N","remove",5100,6100) 
r->SetXTitle("m_{J/#psipK} [MeV/c^{2}]");
overlay_line(mLb-win,r);
overlay_line(mLb+win,r);
png("PsipKMass of PsiKpi")

// Reflection of Bs on pK
r = SandB(TBs,0,"PsipKMass",OptimalNN,"1",kstream && Reflection,"N","remove",5100,6100) 
r->SetXTitle("m_{J/#psipK} [MeV/c^{2}]");
overlay_line(mLb-win,r);
overlay_line(mLb+win,r);
png("PsipKMass of Bs2JpsiKK")

//
r = SandB(TD,TJ,"PsippiMass","1","BKGCAT!=1","Category==1" && Hlt2,"N","Remaining PsipK in Psippi - data and MC",4900,6100,120)
