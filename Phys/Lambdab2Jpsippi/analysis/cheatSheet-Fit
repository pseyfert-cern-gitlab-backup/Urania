root.exe 
TString optNN = "0.552"
.L ../analysis/FourPlots.C
gStyle->SetPalette(0)
TString NN = "opt"

TFile* _fileOptFit = TFile::Open("Lambdab-S20X-1062-blind-"+optNN+"-SW.root")
_fileOptFit->ls()
TFile *_fileMCK = TFile::Open("LambdabMC-LbK-Sim08a-1127-1128-1129-1137-NN.root")

TFile* fK = TFile::Open("LambdabMC-LbK-Sim08a-1127-1128-1129-1137-"+optNN+"-SW.root")
fK->ls()
TFile* fpi = TFile::Open("LambdabMC-Lbpi-Sim08a-1122-1123-1124-1125-"+optNN+"-SW.root")
fpi->ls()
TFile* fKpi = TFile::Open("LambdabMC-B2JpsiKpi-Sim08a-1138-1139-"+optNN+"-SW.root")
TFile* fKK = TFile::Open("LambdabMC-B2JpsiKK-Sim08a-1134-1135-"+optNN+"-SW.root")

const double m_psi = 3096.916 ;
const double m_p   =  938.272 ;
const double m_pi  =  139.570 ;
const double m_Lb  =  5620.0 ;
const double m_K  =  493.677 ;
const Double_t mLb = 5620 ;
const Double_t mBd = 5279.5 ;
const Double_t mBs = 5370 ;
const Double_t win = 20 ;

//======================================================================
// The fit on data
//======================================================================
//----------------------------------------------------------------------
// The peaks
//----------------------------------------------------------------------
_fileOptFit->Get("TC_PsipKFitC")->Draw()
png("TC_PsipKFit-opt")

_fileOptFit->Get("TC_PsippiFit_blindC")->Draw()
png("TC_PsippiFit-blind-opt")

_fileOptFit->Get("TC_PsipKFitBC")->Draw()
png("TC_PsipKFitAB-opt")
_fileOptFit->Get("TC_PsipKFitBp1C")->Draw()
png("TC_PsipKFitABp1-opt")
_fileOptFit->Get("TC_PsipKFitBm1C")->Draw()
png("TC_PsipKFitABm1-opt")

_fileOptFit->Get("TC_PsipKFitABC")->Draw()
png("TC_PsipKFitB-opt")
_fileOptFit->Get("TC_PsipKFitABp1C")->Draw()
png("TC_PsipKFitBp1-opt")
_fileOptFit->Get("TC_PsipKFitABm1C")->Draw()
png("TC_PsipKFitBm1-opt")


_fileOptFit->Get("TC_PsippiFitAB_blindC")->Draw()
png("TC_PsippiFit-blindAB-opt")
_fileOptFit->Get("TC_PsippiFitABp1_blindC")->Draw()
png("TC_PsippiFit-blindABp1-opt")
_fileOptFit->Get("TC_PsippiFitABm1_blindC")->Draw()
png("TC_PsippiFit-blindABm1-opt")
_fileOptFit->Get("TC_PsippiFitB_blindC")->Draw()
png("TC_PsippiFit-blindB-opt")
_fileOptFit->Get("TC_PsippiFitBp1_blindC")->Draw()
png("TC_PsippiFit-blindBp1-opt")
_fileOptFit->Get("TC_PsippiFitBm1_blindC")->Draw()
png("TC_PsippiFit-blindBm1-opt")

RooPlot* rpiAB = _fileOptFit->Get("PsippiFitAB_blind")
RooPlot* rpiB = _fileOptFit->Get("PsippiFitB_blind")
RooPlot* rpi = _fileOptFit->Get("PsippiFit_blind")
rpiAB->SetMaximum(300.)
rpiB->SetMaximum(300.)
rpi->SetMaximum(600.)

rpiAB->Draw()
rpiB->Draw()
png("PsippiFit-blindB-opt")
rpi->Draw()
png("PsippiFit-blind-opt")

//======================================================================
// The fit on data with free expo
//======================================================================
TFile* _filenofreeze = TFile::Open("Lambdab-S20X-1062-nofreeze-"+optNN+"-SW.root")
_filenofreeze->Get("TC_PsipKFitC")->Draw()
png("nofreeze-TC_PsipKFit-opt")

_filenofreeze->Get("TC_PsippiFit_blindC")->Draw()
png("nofreeze-TC_PsippiFit-blind-opt")

_filenofreeze->Get("TC_PsipKFitBC")->Draw()
png("nofreeze-TC_PsipKFitAB-opt")
_filenofreeze->Get("TC_PsipKFitABC")->Draw()
png("nofreeze-TC_PsipKFitB-opt")

_filenofreeze->Get("TC_PsippiFitAB_blindC")->Draw()
png("nofreeze-TC_PsippiFit-blindAB-opt")
_filenofreeze->Get("TC_PsippiFitB_blindC")->Draw()
png("nofreeze-TC_PsippiFit-blindB-opt")

RooPlot* rpiAB = _filenofreeze->Get("PsippiFitAB_blind")
RooPlot* rpiB = _filenofreeze->Get("PsippiFitB_blind")
RooPlot* rpi = _filenofreeze->Get("PsippiFit_blind")
rpiAB->SetMaximum(300.)
rpiB->SetMaximum(300.)
rpi->SetMaximum(600.)

rpiAB->Draw()
png("nofreeze-PsippiFit-blindAB-opt")
rpiB->Draw()
png("nofreeze-PsippiFit-blindB-opt")
rpi->Draw()
png("nofreeze-PsippiFit-blind-opt")


//----------------------------------------------------------------------
// The backgrounds
//----------------------------------------------------------------------
TString All = "";
//----------------------------------------------------------------------
RooPlot* r = (RooPlot*)_fileOptFit->Get("Fit_PsipKFit"+All+"_PsipiKMass")
r->Draw(); overlay_line(mBd-win,r,2);overlay_line(mBd+win,r,2);
png("BKG pK PsipiKMass"+All)
RooPlot* r = (RooPlot*)_fileOptFit->Get("Fit_PsippiFit"+All+"_blind_PsipiKMass")
r->Draw(); overlay_line(mBd-win,r,2);overlay_line(mBd+win,r,2);
png("BKG ppi PsipiKMass"+All)

RooPlot* r = (RooPlot*)_fileOptFit->Get("Fit_PsipKFit"+All+"_PsiKpiMass")
r->Draw(); overlay_line(mBd-win,r,2);overlay_line(mBd+win,r,2);
png("BKG pK PsiKpiMass"+All)
RooPlot* r = (RooPlot*)_fileOptFit->Get("Fit_PsippiFit"+All+"_blind_PsiKpiMass")
r->Draw(); overlay_line(mBd-win,r,2);overlay_line(mBd+win,r,2);
png("BKG ppi PsiKpiMass"+All)

RooPlot* r = (RooPlot*)_fileOptFit->Get("Fit_PsipKFit"+All+"_PsiKKMass")
r->Draw(); overlay_line(mBs-win,r,2);overlay_line(mBs+win,r,2);
png("BKG pK PsiKKMass"+All)
RooPlot* r = (RooPlot*)_fileOptFit->Get("Fit_PsippiFit"+All+"_blind_PsiKKMass")
r->Draw(); overlay_line(mBs-win,r,2);overlay_line(mBs+win,r,2);
png("BKG ppi PsiKKMass"+All)

RooPlot* r = (RooPlot*)_fileOptFit->Get("Fit_PsipKFit"+All+"_PsiKpMass")
r->Draw(); overlay_line(mLb-win,r,2);overlay_line(mLb+win,r,2);
png("BKG pK PsiKpMass"+All)
RooPlot* r = (RooPlot*)_fileOptFit->Get("Fit_PsippiFit"+All+"_blind_PsiKpMass")
r->Draw(); overlay_line(mLb-win,r,2);overlay_line(mLb+win,r,2);
png("BKG ppi PsiKpMass"+All)

RooPlot* r = (RooPlot*)_fileOptFit->Get("Fit_PsippiFit"+All+"_blind_PsipKMass")
r->Draw(); overlay_line(mLb-win,r,2);overlay_line(mLb+win,r,2);
png("BKG ppi PsipKMass"+All)

RooPlot* r = (RooPlot*)_fileOptFit->Get("Fit_PsipKFit"+All+"_PsippiMass")
r->Draw(); overlay_line(mLb-win,r,2);overlay_line(mLb+win,r,2);
png("BKG pK PsippiMass"+All)

_fileOptFit->Get("RK_PsipKFit"+All+"_PsipKMass")->Draw()
png("RK_PsipKMass"+All)
_fileOptFit->Get("RK_PsippiFit"+All+"_blind_PsippiMass")->Draw()
png("RK_PsippiMass"+All)


_fileOptFit->ls()


/// NOW REDO WITH 
All = "AB"
All = "B"

//----------------------------------------------------------------------
// The fit on signal MC 
//----------------------------------------------------------------------
fK->Get("TC_PsipKFitC")->Draw()
png("MC-Lb2JpsipK")

fpi->Get("TC_PsippiFitC")->Draw()
png("MC-Lb2Jpsippi")

//----------------------------------------------------------------------
// The RooKeysPdfs on MC
//----------------------------------------------------------------------
RooPlot* r = (RooPlot*)fKpi->Get("RK_PsipKFit_plot_31")
r->Draw()
overlay_line(mLb-win,r,2);overlay_line(mLb+win,r,2);
png("RK pK Bd2JpsipiK")
r = (RooPlot*)fKpi->Get("RK_PsippiFit_plot_31")
r->Draw()
overlay_line(mLb-win,r,2);overlay_line(mLb+win,r,2);
png("RK ppi Bd2JpsipiK")

r = (RooPlot*)fKpi->Get("RK_PsipKFit_plot_32")
r->Draw()
overlay_line(mLb-win,r,2);overlay_line(mLb+win,r,2);
png("RK pK Bd2JpsiKpi")
r = (RooPlot*)fKpi->Get("RK_PsippiFit_plot_32")
r->Draw()
overlay_line(mLb-win,r,2);overlay_line(mLb+win,r,2);
png("RK ppi Bd2JpsiKpi")

r = (RooPlot*)fKK->Get("RK_PsipKFit_plot_33")
r->Draw()
overlay_line(mLb-win,r,2);overlay_line(mLb+win,r,2);
png("RK pK Bs2JpsiKK")
r = (RooPlot*)fKK->Get("RK_PsippiFit_plot_33")
r->Draw()
overlay_line(mLb-win,r,2);overlay_line(mLb+win,r,2);
png("RK ppi Bs2JpsiKK")

r = (RooPlot*)fK->Get("RK_PsippiFit_plot_1")
r->Draw()
overlay_line(mLb-win,r,2);overlay_line(mLb+win,r,2);
png("RK ppi Lb2JpsipK")
r = (RooPlot*)fK->Get("RK_PsipKFit_plot_34")
r->Draw()
overlay_line(mLb-win,r,2);overlay_line(mLb+win,r,2);
png("RK pK Lb2JpsiKp")
r = (RooPlot*)fK->Get("RK_PsippiFit_plot_34")
r->Draw()
overlay_line(mLb-win,r,2);overlay_line(mLb+win,r,2);
png("RK ppi Lb2JpsiKp")

r = (RooPlot*)fpi->Get("RK_PsipKFit_plot_0")
r->Draw()
overlay_line(mLb-win,r,2);overlay_line(mLb+win,r,2);
png("RK pK Lb2Jpsippi")

//----------------------------------------------------------------------
// The weight Trees
//----------------------------------------------------------------------

gPad->SetLogy()
RooPlot* r = SandB(W,0,"wMass",net,"wnetOutput>-1.5",LbK,"","remove",5000,6100,110)

RooPlot* r = SandB(W,0,"wMass",net,"wnetOutput>-1.5",Lbpi,"","remove",4950,6050,110)
r->SetMinimum(40)
r->Draw()
overlay_line(5580,r,2); overlay_line(5650,r,2)

RooPlot* r = SandB(W,0,"wMass","(sweightLb==-10)","(sweightLb==-11)","wCategory==1 && wErrorCode==0","","HIDE",5500,5800)

//----------------------------------------------------------------------
// Baryon asymmetry
//----------------------------------------------------------------------

if (gPad) gPad->SetLogy(0)
RooPlot* r = SandB(W,0,"wMass",WLB,WLA,"","","wBaryon",5500,5770,54)    //  5613.58 (447.589), 5612.06 (414.497)
SetTitle("m_{J/#psip#pi} [MeV/c^{2}]",r)
// png("B wBaryon")
RooPlot* r = SandB(W,0,"wMass",WLBK,WLAK,"","","wBaryonK",5500,5770,54) 
SetTitle("m_{J/#psipK} [MeV/c^{2}]",r)
png("B wBaryon - K")

//----------------------------------------------------------------------------
// Non optimal cuts - needs unblinding
//----------------------------------------------------------------------------
TString fN = "S20X-1062-notree"
TString blind = "_blindC"
//TFile::Open("Lambdab-"+fN+"-0.9-SW.root")->Get("TC_PsippiFit"+blind)->Draw()
//png("TC_PsippiFitC_0.9")
TFile::Open("Lambdab-"+fN+"-0.8-SW.root")->Get("TC_PsippiFit"+blind)->Draw()
png("TC_PsippiFitC_0.8")
TFile::Open("Lambdab-"+fN+"-0.75-SW.root")->Get("TC_PsippiFit"+blind)->Draw()
png("TC_PsippiFitC_0.75")
TFile::Open("Lambdab-"+fN+"-0.7-SW.root")->Get("TC_PsippiFit"+blind)->Draw()
png("TC_PsippiFitC_0.7")
TFile::Open("Lambdab-"+fN+"-0.65-SW.root")->Get("TC_PsippiFit"+blind)->Draw()
png("TC_PsippiFitC_0.65")
TFile::Open("Lambdab-"+fN+"-0.6-SW.root")->Get("TC_PsippiFit"+blind)->Draw()
png("TC_PsippiFitC_0.6")
TFile::Open("Lambdab-"+fN+"-0.55-SW.root")->Get("TC_PsippiFit"+blind)->Draw()
png("TC_PsippiFitC_0.55")
TFile::Open("Lambdab-"+fN+"-0.5-SW.root")->Get("TC_PsippiFit"+blind)->Draw()
png("TC_PsippiFitC_0.5")
TFile::Open("Lambdab-"+fN+"-0.45-SW.root")->Get("TC_PsippiFit"+blind)->Draw()
png("TC_PsippiFitC_0.45")
TFile::Open("Lambdab-"+fN+"-0.4-SW.root")->Get("TC_PsippiFit"+blind)->Draw()
png("TC_PsippiFitC_0.4")
TFile::Open("Lambdab-"+fN+"-0.35-SW.root")->Get("TC_PsippiFit"+blind)->Draw()
png("TC_PsippiFitC_0.35")
TFile::Open("Lambdab-"+fN+"-0.3-SW.root")->Get("TC_PsippiFit"+blind)->Draw()
png("TC_PsippiFitC_0.3")
TFile::Open("Lambdab-"+fN+"-0.25-SW.root")->Get("TC_PsippiFit"+blind)->Draw()
png("TC_PsippiFitC_0.25")
TFile::Open("Lambdab-"+fN+"-0.2-SW.root")->Get("TC_PsippiFit"+blind)->Draw()
png("TC_PsippiFitC_0.2")
TFile::Open("Lambdab-"+fN+"-0.1-SW.root")->Get("TC_PsippiFit"+blind)->Draw()
png("TC_PsippiFitC_0.1")
TFile::Open("Lambdab-"+fN+"-0.0-SW.root")->Get("TC_PsippiFit"+blind)->Draw()
png("TC_PsippiFitC_0.0")
TFile::Open("Lambdab-"+fN+"--0.9-SW.root")->Get("TC_PsippiFit"+blind)->Draw()
png("TC_PsippiFitC_-0.9")
TFile::Open("Lambdab-"+fN+"--0.8-SW.root")->Get("TC_PsippiFit"+blind)->Draw()
png("TC_PsippiFitC_-0.8")
TFile::Open("Lambdab-"+fN+"--0.7-SW.root")->Get("TC_PsippiFit"+blind)->Draw()
png("TC_PsippiFitC_-0.7")
TFile::Open("Lambdab-"+fN+"--0.6-SW.root")->Get("TC_PsippiFit"+blind)->Draw()
png("TC_PsippiFitC_-0.6")
TFile::Open("Lambdab-"+fN+"--0.5-SW.root")->Get("TC_PsippiFit"+blind)->Draw()
png("TC_PsippiFitC_-0.5")
TFile::Open("Lambdab-"+fN+"--0.4-SW.root")->Get("TC_PsippiFit"+blind)->Draw()
png("TC_PsippiFitC_-0.4")
TFile::Open("Lambdab-"+fN+"--0.3-SW.root")->Get("TC_PsippiFit"+blind)->Draw()
png("TC_PsippiFitC_-0.3")
TFile::Open("Lambdab-"+fN+"--0.2-SW.root")->Get("TC_PsippiFit"+blind)->Draw()
png("TC_PsippiFitC_-0.2")
TFile::Open("Lambdab-"+fN+"--0.1-SW.root")->Get("TC_PsippiFit"+blind)->Draw()
png("TC_PsippiFitC_-0.1")
TFile::Open("Lambdab-"+fN+"--1.0-SW.root")->Get("TC_PsippiFit"+blind)->Draw()
png("TC_PsippiFitC_-1.0")

TString blind = "C"
TFile::Open("Lambdab-"+fN+"-0.9-SW.root")->Get("TC_PsipKFit"+blind)->Draw()
png("TC_PsipKFitC_0.9")
TFile::Open("Lambdab-"+fN+"-0.8-SW.root")->Get("TC_PsipKFit"+blind)->Draw()
png("TC_PsipKFitC_0.8")
TFile::Open("Lambdab-"+fN+"-0.75-SW.root")->Get("TC_PsipKFit"+blind)->Draw()
png("TC_PsipKFitC_0.75")
TFile::Open("Lambdab-"+fN+"-0.7-SW.root")->Get("TC_PsipKFit"+blind)->Draw()
png("TC_PsipKFitC_0.7")
TFile::Open("Lambdab-"+fN+"-0.65-SW.root")->Get("TC_PsipKFit"+blind)->Draw()
png("TC_PsipKFitC_0.65")
TFile::Open("Lambdab-"+fN+"-0.6-SW.root")->Get("TC_PsipKFit"+blind)->Draw()
png("TC_PsipKFitC_0.6")
TFile::Open("Lambdab-"+fN+"-0.55-SW.root")->Get("TC_PsipKFit"+blind)->Draw()
png("TC_PsipKFitC_0.55")
TFile::Open("Lambdab-"+fN+"-0.5-SW.root")->Get("TC_PsipKFit"+blind)->Draw()
png("TC_PsipKFitC_0.5")
TFile::Open("Lambdab-"+fN+"-0.45-SW.root")->Get("TC_PsipKFit"+blind)->Draw()
png("TC_PsipKFitC_0.45")
TFile::Open("Lambdab-"+fN+"-0.4-SW.root")->Get("TC_PsipKFit"+blind)->Draw()
png("TC_PsipKFitC_0.4")
TFile::Open("Lambdab-"+fN+"-0.35-SW.root")->Get("TC_PsipKFit"+blind)->Draw()
png("TC_PsipKFitC_0.35")
TFile::Open("Lambdab-"+fN+"-0.3-SW.root")->Get("TC_PsipKFit"+blind)->Draw()
png("TC_PsipKFitC_0.3")
TFile::Open("Lambdab-"+fN+"-0.25-SW.root")->Get("TC_PsipKFit"+blind)->Draw()
png("TC_PsipKFitC_0.25")
TFile::Open("Lambdab-"+fN+"-0.2-SW.root")->Get("TC_PsipKFit"+blind)->Draw()
png("TC_PsipKFitC_0.2")
TFile::Open("Lambdab-"+fN+"-0.1-SW.root")->Get("TC_PsipKFit"+blind)->Draw()
png("TC_PsipKFitC_0.1")
TFile::Open("Lambdab-"+fN+"-0.0-SW.root")->Get("TC_PsipKFit"+blind)->Draw()
png("TC_PsipKFitC_0.0")
TFile::Open("Lambdab-"+fN+"--0.9-SW.root")->Get("TC_PsipKFit"+blind)->Draw()
png("TC_PsipKFitC_-0.9")
TFile::Open("Lambdab-"+fN+"--0.8-SW.root")->Get("TC_PsipKFit"+blind)->Draw()
png("TC_PsipKFitC_-0.8")
TFile::Open("Lambdab-"+fN+"--0.7-SW.root")->Get("TC_PsipKFit"+blind)->Draw()
png("TC_PsipKFitC_-0.7")
TFile::Open("Lambdab-"+fN+"--0.6-SW.root")->Get("TC_PsipKFit"+blind)->Draw()
png("TC_PsipKFitC_-0.6")
TFile::Open("Lambdab-"+fN+"--0.5-SW.root")->Get("TC_PsipKFit"+blind)->Draw()
png("TC_PsipKFitC_-0.5")
TFile::Open("Lambdab-"+fN+"--0.4-SW.root")->Get("TC_PsipKFit"+blind)->Draw()
png("TC_PsipKFitC_-0.4")
TFile::Open("Lambdab-"+fN+"--0.3-SW.root")->Get("TC_PsipKFit"+blind)->Draw()
png("TC_PsipKFitC_-0.3")
TFile::Open("Lambdab-"+fN+"--0.2-SW.root")->Get("TC_PsipKFit"+blind)->Draw()
png("TC_PsipKFitC_-0.2")
TFile::Open("Lambdab-"+fN+"--0.1-SW.root")->Get("TC_PsipKFit"+blind)->Draw()
png("TC_PsipKFitC_-0.1")
TFile::Open("Lambdab-"+fN+"--1.0-SW.root")->Get("TC_PsipKFit"+blind)->Draw()
png("TC_PsipKFitC_-1.0")


//=========================================================================
// with Xib
TString blind = "C"
TFile* _fileXibFit = TFile::Open("Lambdab-S20X-1062-withXib-"+optNN+"-SW.root")
_fileXibFit->ls()
_fileXibFit->Get("TC_PsipKFit"+blind)->Draw()
png("TC_PsipKFit-Xib")
_fileXibFit->Get("TC_PsippiFit_blindC")->Draw()
png("TC_PsippiFit-blind-Xib")


//####################################################################################################################
// Species, not used
//----------------------------------------------------------------------------
.L ../analysis/FourPlots.C
RooPlot* r3 = ThreeSpecies(W, "wMass", "(wCategory==-1)","", "",5500,5800,60)
r3->SetXTitle("m_{J/#psipK} [MeV/c^{2}]");
r3->SetMinimum(-1000)
r3->Draw()
png("PsipKMass 3 species (K)")
RooPlot* r7 = SevenSpecies(W, "wMass", "(wCategory==-1)","", "",5500,5800,60)
r7->SetXTitle("m_{J/#psipK} [MeV/c^{2}]");
r7->SetMinimum(-100)
r7->Draw()
png("PsipKMass 7 species (K)")

RooPlot* r = ThreeSpecies(TNN,"sqrt(pMMass2)","(wCategory==-1)","","remove",m_p+m_K,m_Lb-m_psi,28)
r->SetXTitle("m_{pK} [MeV/c^{2}]");
png("pKMass S and B (K)")

r = SandB(TNN,MCK,"sqrt(pMMass2)",WLK,NoNN && KSignal,"","N","remove",m_p+m_K,m_Lb-m_psi,55)
overlay_line(1440,r,1)  // N(1440)  200-450 MeV 
overlay_line(1520,r,1)  // N(1520)  100-125 MeV
overlay_line(1600,r,1)  // 
overlay_line(1670,r,1)
overlay_line(1690,r,1)
overlay_line(1800,r,1)
overlay_line(1810,r,1)
overlay_line(1820,r,1)
overlay_line(1830,r,1)
overlay_line(1890,r,1)
overlay_line(2325,r,1)
r->SetXTitle("m_{pK} [MeV/c^{2}]");
png("pKMass S and MC (K)")

r = ThreeSpecies(TNN,"sqrt(psiMMass2)","(wCategory==-1)","", "remove",m_psi+m_K,m_Lb-m_p,28)
r->SetXTitle("m_{J/#psiK} [MeV/c^{2}]");
png("psiKMass 3 species (K)")
r = SandB(TNN,MCK,"sqrt(psiMMass2)",WLK,NoNN && KSignal,"","N","remove",m_psi+m_K,m_Lb-m_p,55)
r->SetXTitle("m_{J/#psiK} [MeV/c^{2}]");
png("psiKMass S and MC (K)")

r = ThreeSpecies(TNN,"sqrt(psipMass2)","(wCategory==-1)","", "remove",m_psi+m_p,m_Lb-m_K,28)
r->SetXTitle("m_{J/#psip} [MeV/c^{2}]");
png("psipMass 3 species (K)")
r = SandB(TNN,MCK,"sqrt(psipMass2)",WLK,NoNN && KSignal,"","N","remove",m_psi+m_p,m_Lb-m_K,55)
r->SetXTitle("m_{J/#psip} [MeV/c^{2}]");
png("psipMass S and MC (K)")

TCut AboveL1520("pMMass2/1e6>2.5")
r = SandB(TNN,TNN,"sqrt(psipMass2)",AboveL1520,"1",NoNN && "abs(PsipKMass-5620)<13" && "wCategory==-1","N","remove",m_psi+m_p,m_Lb-m_K,55)
r->SetXTitle("m_{J/#psip} [MeV/c^{2}]");
png("psipMass above 2.5 and all (K)")

gPad->SetLogy()
TCut Bin0(NoNN && "abs(PsipKMass-5620)<13 && Category==-1")
TCut Bin1(NoNN && "abs(PsipKMass-5620)<13 && Category==-1 && pMMass2/1e6>2.5")
TCut Bin2(NoNN && "abs(PsipKMass-5620)<13 && Category==-1 && pMMass2/1e6>3")
TCut Bin3(NoNN && "abs(PsipKMass-5620)<13 && Category==-1 && pMMass2/1e6>3.5")
TCut Bin4(NoNN && "abs(PsipKMass-5620)<13 && Category==-1 && pMMass2/1e6>4")
TCut Bin5(NoNN && "abs(PsipKMass-5620)<13 && Category==-1 && pMMass2/1e6>5")
RooPlot* r = SevenPlots(TNN,TNN,TNN,TNN,TNN,TNN,0,Bin0,Bin5,Bin4,Bin3,Bin2,Bin1,"","sqrt(psipMass2)","","remove",m_psi+m_p,m_Lb-m_K,30)
r->SetXTitle("m_{J/#psip} [MeV/c^{2}]");
r->SetMinimum(30.)
r->Draw()
overlay_line(4430,r,2)
overlay_line(4480,r,2)
png("Psip mass in bins of pK mass")

gPad->SetLogy()
RooPlot* r1 = SevenPlots(TNN,TNN,TNN,TNN,TNN,TNN,0,Bin5,Bin4&&!Bin5,Bin3&&!Bin4,Bin2&&!Bin3,Bin1&&!Bin2,Bin0&&!Bin1,"","sqrt(psipMass2)","","remove",m_psi+m_p,m_Lb-m_K,55)
r1->SetXTitle("m_{J/#psip} [MeV/c^{2}]");
r1->SetMinimum(20.)
r1->Draw()
//overlay_line(4430,r,2)
//overlay_line(4480,r,2)
png("Psip mass in bins of pK mass - not staggered")


TH2D* h2 = Make2DPlot("h2","m_{pK}^{2} [GeV^{2}/c^{4}]",23,1.9,6.5,"m_{J/#psiK}^{2} [GeV^{2}/c^{4}]",23,12,22.5)
TH2D* h2l = Make2DPlot("h2l","m_{pK}^{2} [GeV^{2}/c^{4}]",900,2,6.5,"m_{J/#psiK}^{2} [GeV^{2}/c^{4}]",1100,12,22)
TH2D* h2mc = Make2DPlot("h2mc","m_{pK}^{2} [GeV^{2}/c^{4}]",900,2,6.5,"m_{J/#psiK}^{2} [GeV^{2}/c^{4}]",1100,12,22)
TH2D* h2b = Make2DPlot("h2b","m_{pK}^{2} [GeV^{2}/c^{4}]",23,1.9,6.5,"m_{J/#psip}^{2} [GeV^{2}/c^{4}]",22,16,27)
TH2D* h2c = Make2DPlot("h2c","m_{J/#psiK}^{2} [GeV^{2}/c^{4}]",23,12,22.5,"m_{J/#psip}^{2} [GeV^{2}/c^{4}]",22,16,27)

TNN->Draw("psiMMass2/1e6:pMMass2/1e6 >> h2",NoNN && "abs(PsipKMass-5620)<13" && "Category==-1")
gPad->SetLogz(1)
h2->Draw("COLZ")
png("Colourful Dalitz (K)")

gPad->SetLogy(0)
TNN->Draw("psiMMass2/1e6:pMMass2/1e6 >> h2",NoNN && "abs(PsipKMass-5620)<13" && "Category==-1")
gPad->SetLogz(1)
h2->Draw("COLZ")
png("Colourful Dalitz (K)")

TNN->Draw("psipMass2/1e6:pMMass2/1e6 >> h2b",NoNN && "abs(PsipKMass-5620)<13" && "Category==-1")
gPad->SetLogz(1)
h2b->SetStats(0)
h2b->Draw("COLZ")
png("Reversed Colourful Dalitz (K)")

TNN->Draw("psipMass2/1e6:psiMMass2/1e6 >> h2c",NoNN && "abs(PsipKMass-5620)<13" && "Category==-1")
gPad->SetLogz(1)
h2c->SetStats(0)
h2c->Draw("COLZ")
png("Reversed 2 Colourful Dalitz (K)") // useless

gPad->SetLogz(0)
TNN->Draw("psiMMass2/1e6:pMMass2/1e6 >> h2l",NoNN && "abs(PsipKMass-5620)<13" && "Category==-1")
h2l->Draw()
png("Dotted Dalitz (K)")

gPad->SetLogz(0)
TNN->Draw("psipMass2/1e6:pMMass2/1e6 >> h2lb",NoNN && "abs(PsipKMass-5620)<13" && "Category==-1")
h2lb->Draw()
png("Reversed Dotted Dalitz (K)")

gPad->SetLogz(0)
MCK->Draw("psiMMass2/1e6:pMMass2/1e6 >> h2mc",NoNN && KSignal)
h2mc->Draw()
png("Dotted MC Dalitz (K)")

gPad->SetLogz(0)
c1.SetTheta(30);  //theta angle=66 degrees
c1.SetPhi(-40);
h2->Draw("lego2")
png("Dalitz 3D (K)")

//################################################################################################
gPad->SetLogy(1)
RooPlot* rM = SandB(TNN,0,"PsipKMass","(netOutput>0.552)*(sweightLb>-4)","(netOutput>0.0)","(ErrorCode==0)*(Category==-1)","","remove",5500,5800,100)
rM->SetXTitle("m_{J/#psipK} [MeV/c^{2}]");
rM->Draw()
png("PsipK mass optimal and >0")

gPad->SetLogy(1)
RooPlot* rK = SandB(TNN,0,"sqrt(psipMass2)","(netOutput>0.552)*(sweightLb>-4)","(netOutput>0.0)","(ErrorCode==0)*(Category==-1)","","remove",4000,5200,48)
rK->SetXTitle("m_{J/#psip} [MeV/c^{2}]");
gPad->SetLogy()
rK->Draw()
png("PsipMass in K mass optimal and >0") // now use non weighted

RooPlot* r25 = SandB(TNN,0,"sqrt(psipMass2)","pMMass2/1e6<2.5","","abs(PsipKMass-5620)<13 && (ErrorCode==0)  && (Category==-1) && (netOutput>0.0)","","remove",4000,5200,48)
r25->SetXTitle("m_{J/#psip} [MeV/c^{2}]");
r25->SetMinimum(30.) ; r25->SetMaximum(2000) ; 
r25->Draw()
png("PsipMass in K below and above 2.5") // now use non weighted

RooPlot* r28 = SandB(TNN,0,"sqrt(psipMass2)","pMMass2/1e6<2.8","","abs(PsipKMass-5620)<13 && (ErrorCode==0)  && (Category==-1) && (netOutput>0.0)","","remove",4000,5200,48)
r28->SetXTitle("m_{J/#psip} [MeV/c^{2}]");
r28->SetMinimum(30.) ; r28->SetMaximum(2000) ; 
r28->Draw()
png("PsipMass in K below and above 2.8") // now use non weighted

RooPlot* r30 = SandB(TNN,0,"sqrt(psipMass2)","pMMass2/1e6<3","","abs(PsipKMass-5620)<13 && (ErrorCode==0)  && (Category==-1) && (netOutput>0.0)","","remove",4000,5200,48)
r30->SetXTitle("m_{J/#psip} [MeV/c^{2}]");
r30->SetMinimum(30.) ; r30->SetMaximum(2000) ; 
r30->Draw()
png("PsipMass in K below and above 3") // now use non weighted

RooPlot* r32 = SandB(TNN,0,"sqrt(psipMass2)","pMMass2/1e6<3.2","","abs(PsipKMass-5620)<13 && (ErrorCode==0)  && (Category==-1) && (netOutput>0.0)","","remove",4000,5200,48)
r32->SetXTitle("m_{J/#psip} [MeV/c^{2}]");
r32->SetMinimum(30.) ; r32->SetMaximum(2000) ; 
r32->Draw()
png("PsipMass in K below and above 3.2") // now use non weighted

RooPlot* r35 = SandB(TNN,0,"sqrt(psipMass2)","pMMass2/1e6<3.5","","abs(PsipKMass-5620)<13 && (ErrorCode==0)  && (Category==-1) && (netOutput>0.0)","","remove",4000,5200,48)
r35->SetMinimum(30) ; r35->SetMaximum(2000) ; 
r35->SetXTitle("m_{J/#psip} [MeV/c^{2}]");
r35->Draw()
png("PsipMass in K below and above 3.5") // now use non weighted

RooPlot* r38 = SandB(TNN,0,"sqrt(psipMass2)","pMMass2/1e6<3.8","","abs(PsipKMass-5620)<13 && (ErrorCode==0)  && (Category==-1) && (netOutput>0.0)","","remove",4000,5200,48)
r38->SetMinimum(30) ; r38->SetMaximum(2000) ; 
r38->SetXTitle("m_{J/#psip} [MeV/c^{2}]");
r38->Draw()
png("PsipMass in K below and above 3.8") // now use non weighted

RooPlot* r45 = SandB(TNN,0,"sqrt(psipMass2)","pMMass2/1e6<4.5","","abs(PsipKMass-5620)<13 && (ErrorCode==0)  && (Category==-1) && (netOutput>0.0)","","remove",4000,5200,48)
r45->SetXTitle("m_{J/#psip} [MeV/c^{2}]");
r45->SetMinimum(30.) ; r45->SetMaximum(2000) ; 
r45->Draw()
png("PsipMass in K below and above 4.5") // now use non weighted

RooPlot* r60 = SandB(TNN,0,"sqrt(psipMass2)","pMMass2/1e6>6","pMMass2/1e6>4.5 && pMMass2/1e6<6","abs(PsipKMass-5620)<13 && (ErrorCode==0)  && (Category==-1) && (netOutput>0.0)","","remove",4000,5200,48)
r60->SetXTitle("m_{J/#psip} [MeV/c^{2}]");
r60->SetMinimum(0.) ; r60->SetMaximum(200) ; 
r60->Draw()
png("PsipMass between 4.5 and 6.0") // now use non weighted


TH2D* h2lb = Make2DPlot("h2lb","m_{J/#psip}^{2} [GeV^{2}/c^{4}]",1100,16,27,"m_{pK}^{2} [GeV^{2}/c^{4}]",900,2,6.5)

TNN->Draw("pMMass2/1e6:psipMass2/1e6 >> h2lb","(netOutput>0.0) && abs(PsipKMass-5620)<13 && Category==-1 && (ErrorCode==0)")
gPad->SetLogz(0)
gPad->SetLogy(0)
h2lb->Draw()
horizontal_line(4.5,h2lb,2)
horizontal_line(3.8,h2lb,2)
horizontal_line(3.5,h2lb,2)
horizontal_line(3.2,h2lb,2)
horizontal_line(3.0,h2lb,2)
horizontal_line(2.8,h2lb,2)
horizontal_line(2.5,h2lb,2)
horizontal_line(6.0,h2lb,2)
h2lb->Draw("same")
png("Reversed Dotted Dalitz (K) - cut at 0")





