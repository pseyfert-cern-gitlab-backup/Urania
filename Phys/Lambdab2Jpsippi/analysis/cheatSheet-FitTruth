root.exe LambdabMC-Lb*-NN.root
.L MassPdf.cpp
_file0->ls()
TNNK = (TTree*)_file0->Get("NetTree")
TNNpi = (TTree*)_file1->Get("NetTree")
TNNK->Show(0)
TNNK->Draw("PsipKMass","BKGCAT==1 && Category==-1 && netOutput>0.552")
gPad->SetLogy()
TNNpi->Draw("PsippiMass","BKGCAT==0 && Category==1 && netOutput>0.552")
RooPlot* r = SandB(TNNpi,TNNK,"(Category==-1)*(ErrorCode==0)*PsipKMass+(Category==1)*PsippiMass","(BKGCAT==0)*(Category==1)*(ErrorCode==0)*DalitzWeight","(BKGCAT==1)*(Category==-1)*DalitzWeight","1","NM","remove",5000,6000)
SetTitle("m_{J/#psipM} [MeV/c^{2}]",r)
overlay_line(5500,r)
overlay_line(5800,r)
png("True Lbpi and LbK mass")

//-----------------------------------------------------------------------
// what's that tail? -> See cheatSeet-Truth 

//-----------------------------------------------------------------------

RooRealVar* massK = new RooRealVar("PsipKMass","PsipKMass",5400,5800);
RooRealVar* masspi = new RooRealVar("PsippiMass","PsippiMass",5400,5800);
RooRealVar* category = new RooRealVar("Category","Category",-10.,2.);
RooRealVar* netOutput = new RooRealVar("netOutput","netOutput",-10.,2.);
RooRealVar* BKGCAT = new RooRealVar("BKGCAT","BKGCAT",-10,100.);
RooRealVar* DalitzWeight = new RooRealVar("DalitzWeight","DalitzWeight",0.,20.);
RooRealVar* ErrorCode = new RooRealVar("ErrorCode","ErrorCode",-10.,2.);

RooArgList variablesK(*massK,*netOutput,*category,*BKGCAT,*DalitzWeight,*ErrorCode);
RooArgList variablespi(*masspi,*netOutput,*category,*BKGCAT,*ErrorCode);
RooDataSet* pK = new RooDataSet("pK","pK",TNNK,variablesK,"BKGCAT==1 && Category==-1 && netOutput>0.552 && ErrorCode==0","DalitzWeight"); 
RooDataSet* ppi = new RooDataSet("ppi","pK",TNNpi,variablespi,"BKGCAT==0 && Category==1 && netOutput>0.552 && ErrorCode==0"); 

RooPlot* plotpi = masspi.frame(Bins(100));
ppi->plotOn(plotpi)
plotpi->SetMinimum(0.5)
plotpi->Draw()

RooPlot* plotK = massK.frame(Bins(100));
pK->plotOn(plotK)
plotK->SetMinimum(0.5)
plotK->Draw()

MassPdf* pdfK = new MassPdf("pdfK",massK,pK->sumEntries(),"free","","DoubleCB","None",false)
RooFitResult* f = pdfK->fit(pK,false)
MassPdf* pdfK_GCB = new MassPdf("pdfK",massK,pK->sumEntries(),"free","","GaussCB","None",false)
RooFitResult* fGCC = pdfK_GCB->fit(pK,false)
MassPdf* pdfK_CB = new MassPdf("pdfK",massK,pK->sumEntries(),"free","","CB","None",false)
RooFitResult* fCB = pdfK_CB->fit(pK,false)

RooPlot* plotK = massK.frame(Bins(100));
pK->plotOn(plotK)
pdfK->pdf()->plotOn(plotK)
pdfK_GCB->pdf()->plotOn(plotK,LineColor(kMagenta),MarkerColor(kMagenta),LineStyle(kDashed))
pdfK_CB->pdf()->plotOn(plotK,LineColor(kGreen),MarkerColor(kGreen),LineStyle(kDotted))
plotK->SetMinimum(0.5)
plotK->GetXaxis()->SetTitle("m_{J/#psipK} [MeV/c^{2}]")
plotK->Draw()
png("LbK pdfs")

f->Print()
fGCC->Print()
fCB->Print()

MassPdf* pdfpi = new MassPdf("pdfpi",masspi,ppi->sumEntries(),"free","","DoubleCB","None",false)
RooFitResult* f_pi = pdfpi->fit(ppi,false)
MassPdf* pdfpi_GCB = new MassPdf("pdfpi",masspi,ppi->sumEntries(),"free","","GaussCB","None",false)
RooFitResult* fGCC = pdfpi_GCB->fit(ppi,false)
MassPdf* pdfpi_CB = new MassPdf("pdfpi",masspi,ppi->sumEntries(),"free","","CB","None",false)
RooFitResult* fCB = pdfpi_CB->fit(ppi,false)

RooPlot* plotpi = masspi.frame(Bins(100));
ppi->plotOn(plotpi)
pdfpi->pdf()->plotOn(plotpi)
pdfpi_GCB->pdf()->plotOn(plotpi,LineColor(kMagenta),MarkerColor(kMagenta),LineStyle(kDashed))
pdfpi_CB->pdf()->plotOn(plotpi,LineColor(kGreen),MarkerColor(kGreen),LineStyle(kDotted))
plotpi->SetMinimum(0.5)
plotpi->GetXaxis()->SetTitle("m_{J/#psip#pi} [MeV/c^{2}]")
plotpi->Draw()
png("Lbpi pdfs")

fGCC->Print()
fCB->Print()

// this goes to massfit.tex
f->Print()
f_pi->Print()

// no NN cut

RooDataSet* pK_all = new RooDataSet("pK_all","pK_all",TNNK,variablesK,"BKGCAT==1 && Category==-1","DalitzWeight"); 
RooDataSet* ppi_all = new RooDataSet("ppi_all","pK_all",TNNpi,variablespi,"BKGCAT==0 && Category==1"); 

RooFitResult* f_pi_all = pdfpi->fit(ppi_all,false)
RooFitResult* f_K_all = pdfK->fit(pK_all,false)

RooPlot* plotpi = masspi.frame(Bins(100));
ppi_all->plotOn(plotpi)
pdfpi->pdf()->plotOn(plotpi)
plotpi->SetMinimum(0.5)
plotpi->GetXaxis()->SetTitle("m_{J/#psip#pi} [MeV/c^{2}]")
plotpi->Draw()
png("Lbpi_all pdfs")

RooPlot* plotK = massK.frame(Bins(100));
pK_all->plotOn(plotK)
pdfK->pdf()->plotOn(plotK)
plotK->SetMinimum(0.5)
plotK->GetXaxis()->SetTitle("m_{J/#psipK} [MeV/c^{2}]")
plotK->Draw()
png("LbK_all pdfs")
