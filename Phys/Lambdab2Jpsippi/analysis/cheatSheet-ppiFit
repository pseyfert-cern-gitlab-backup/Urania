root.exe
TString optNN = "0.552"
TFile* _fileOptFit = TFile::Open("Lambdab-S20X-1062-tree-"+optNN+"-SW.root")
//################################################################## RooDataSet
RooDataSet* ppiSet = (RooDataSet*)_fileOptFit->Get("ppiSet")
RooRealVar* sweightLb = (RooRealVar*)_fileOptFit->Get("sweightLb")
RooRealVar* pMMass = (RooRealVar*)_fileOptFit->Get("pMMass")

RooPlot* xframe = pMMass.frame(Bins(50),Range(1000,2600))
ppiSet->plotOn(xframe)
xframe->SetMinimum(0.)
xframe->GetXaxis()->SetTitle("m_{p#pi} [MeV/c^{2}]")
xframe->Draw()

RooPlot* xframe = pMMass.frame(Bins(30),Range(1100,2000))
ppiSet->plotOn(xframe)
xframe->SetMinimum(0.)
xframe->GetXaxis()->SetTitle("m_{p#pi} [MeV/c^{2}]")
xframe->Draw()
//#########################################################################################
// The Patrick-Tom Model
//




//#########################################################################################
// the naive model
// Phase space: need to fit MC truth



double mn = 1200
double mx = 2000
RooRealVar* fN1440 = new RooRealVar("N1440 Yield","fN1440",500,0,5000)
RooRealVar* mean1 = new RooRealVar("N1440 mean","mean1",1430,1400,1510)
RooRealVar* width1 = new RooRealVar("N1440 width","width1",365,100,500)
RooBreitWigner* N1440 = new RooBreitWigner("N1440","BW",*pMMass,*mean1,*width1)

RooRealVar* fN1520 = new RooRealVar("N1520 Yield","fN1520",500,0,5000)
RooRealVar* mean2 = new RooRealVar("N1520 mean","mean1",1517,1500,1530)
RooRealVar* width2 = new RooRealVar("N1520 width","width2",114,50,200)
RooBreitWigner* N1520 = new RooBreitWigner("N1520","BW",*pMMass,*mean2,*width2)

RooRealVar* fN1535 = new RooRealVar("N1535 Yield","fN1535",500,0,5000)
RooRealVar* mean3 = new RooRealVar("N1535 mean","mean1",1519,1500,1600)
RooRealVar* width3 = new RooRealVar("N1535 width","width3",128,50,200)
RooBreitWigner* N1535 = new RooBreitWigner("N1535","BW",*pMMass,*mean3,*width3)

RooRealVar* fN1650 = new RooRealVar("N1650 Yield","fN1650",500,0,5000) 
RooRealVar* mean4 = new RooRealVar("N1650 mean","mean1",1650,1600,1700)
RooRealVar* width4 = new RooRealVar("N1650 width","width4",104,50,200)
RooBreitWigner* N1650 = new RooBreitWigner("N1650","BW",*pMMass,*mean4,*width4)

//RooRealVar* bkg1 = new RooRealVar("pol1","Chebychev Par 1", -10, 10);
//RooRealVar* bkg2 = new RooRealVar("pol2","Chebychev Par 2", -100, 100);
//RooRealVar* bkg3 = new RooRealVar("pol3","Chebychev Par 3", -100, 100);
//RooRealVar* fPS = new RooRealVar("G0 Yield","fG0",0,3000) 
//RooRealVar* minPS = new RooRealVar("G0 mean","meanG",1000,2000)
//RooRealVar* sigmaG = new RooRealVar("G0 width","sigmaG",195,100,5000)
//RooGaussian* G0 = new RooGaussian("G0","G0",*pMMass,*meanG,*sigmaG)
//RooBreitWigner* G0 = new RooBreitWigner("G0","G0",*pMMass,*meanG,*sigmaG)
//RooChebychev* comBKG = new RooChebychev("comBKG","combinatorial BKG", *pMMass, RooArgList(*bkg1, *bkg2, *bkg3));
//RooAddPdf* pdf1 = new RooAddPdf("pdf","pdf",RooArgList(*N1440,*comBKG),RooArgList(*fN1440))
RooAddPdf* pdf = new RooAddPdf("pdf","pdf",RooArgList(*N1440,*N1520,*N1535,*N1650),RooArgList(*fN1440,*fN1520,*fN1535,*fN1650))

RooPlot* xframe = pMMass.frame(Bins(50),Range(mn,mx))
ppiSet->plotOn(xframe)
//pdf->plotOn(xframe,Range(mn,mx),LineColor(kGreen),Components(*G0),LineStyle(kDashed))
pdf->plotOn(xframe,Range(mn,mx),LineColor(kRed),Components(*N1440))
pdf->plotOn(xframe,Range(mn,mx),LineColor(kMagenta),Components(*N1520))
pdf->plotOn(xframe,Range(mn,mx),LineColor(kCyan),Components(*N1535))
pdf->plotOn(xframe,Range(mn,mx),LineColor(kOrange),Components(*N1650))
//pdf->plotOn(xframe,Range(mn,mx))
xframe->SetMinimum(0.)
xframe->GetXaxis()->SetTitle("m_{p#pi} [MeV/c^{2}]")
xframe->Draw()
png("BW with ppimass")

RooFitResult* r = pdf->fitTo(*ppiSet,Range(mn,mx),Save())

RooPlot* xframe = pMMass.frame(Bins(50),Range(mn,mx))
ppiSet->plotOn(xframe)
//pdf->plotOn(xframe,Range(mn,mx),LineColor(kGreen),Components(*G0),LineStyle(kDashed))
pdf->plotOn(xframe,Range(mn,mx),LineColor(kRed),Components(*N1440))
pdf->plotOn(xframe,Range(mn,mx),LineColor(kMagenta),Components(*N1520))
pdf->plotOn(xframe,Range(mn,mx),LineColor(kCyan),Components(*N1535))
pdf->plotOn(xframe,Range(mn,mx),LineColor(kOrange),Components(*N1650))
pdf->plotOn(xframe,Range(mn,mx))
xframe->SetMinimum(0.)
xframe->GetXaxis()->SetTitle("m_{p#pi} [MeV/c^{2}]")
xframe->Draw()
png("BW fits to ppimass")
r->Print()



// only 2
RooAddPdf* pdf2 = new RooAddPdf("pdf","pdf",RooArgList(*N1440,*N1535,*G0),RooArgList(*fN1440,*fN1520,*fG0))
RooFitResult* r2 = pdf2->fitTo(*ppiSet,Range(mn,mx),Save())

RooPlot* xframe = pMMass.frame(Bins(50),Range(mn,mx))
ppiSet->plotOn(xframe)
pdf2->plotOn(xframe,Range(mn,mx),LineColor(kGreen),Components(*G0),LineStyle(kDashed))
pdf2->plotOn(xframe,Range(mn,mx),LineColor(kRed),Components(*N1440))
pdf2->plotOn(xframe,Range(mn,mx),LineColor(kCyan),Components(*N1535))
pdf2->plotOn(xframe,Range(mn,mx))
xframe->SetMinimum(0.)
xframe->GetXaxis()->SetTitle("m_{p#pi} [MeV/c^{2}]")
xframe->Draw()
png("BW fits to ppimass - only 2")
r2->Print()

// only 1
RooAddPdf* pdf3 = new RooAddPdf("pdf","pdf",RooArgList(*N1440,*G0),RooArgList(*fN1440,*fG0))
RooFitResult* r3 = pdf3->fitTo(*ppiSet,Range(mn,mx),Save())

RooPlot* xframe = pMMass.frame(Bins(50),Range(mn,mx))
ppiSet->plotOn(xframe)
pdf3->plotOn(xframe,Range(mn,mx),LineColor(kGreen),Components(*G0),LineStyle(kDashed))
pdf3->plotOn(xframe,Range(mn,mx),LineColor(kRed),Components(*N1440))
pdf3->plotOn(xframe,Range(mn,mx))
xframe->SetMinimum(0.)
xframe->GetXaxis()->SetTitle("m_{p#pi} [MeV/c^{2}]")
xframe->Draw()
png("BW fits to ppimass - only 1")
r3->Print()

// only 0
RooFitResult* r4 = G0->fitTo(*ppiSet,Range(mn,mx),Save())
RooPlot* xframe = pMMass.frame(Bins(50),Range(mn,mx))
ppiSet->plotOn(xframe)
G0->plotOn(xframe,Range(mn,mx))
xframe->SetMinimum(0.)
xframe->GetXaxis()->SetTitle("m_{p#pi} [MeV/c^{2}]")
xframe->Draw()
png("BW fits to ppimass - only Gauss")
r4->Print()

cout << "BW0 & " << int(fG0->getVal()+.5) << "\\pm" << int(fG0->getError()+.5) << " & " << int(meanG->getVal()+.5) << "\\pm" << int(meanG->getError()+.5) << " & " << int(sigmaG->getVal()+.5) << "\\pm" << int(sigmaG->getError()+.5) << " & " << r4->minNll() << "\\\\ \n" "N1440 & " << int(fN1440->getVal()+.5) << "\\pm" << int(fN1440->getError()+.5) << " & " << int(mean1->getVal()+.5) << "\\pm" << int(mean1->getError()+.5) << " & " << int(width1->getVal()+.5) << "\\pm" << int(width1->getError()+.5)  << " & " << r3->minNll() << "\\\\ \n" << "N1520 & " << int(fN1520->getVal()+.5) << "\\pm" << int(fN1520->getError()+.5) << " & " << int(mean2->getVal()+.5) << "\\pm" << int(mean2->getError()+.5) << " & " << int(width2->getVal()+.5) << "\\pm" << int(width2->getError()+.5)  << " & " << r2->minNll() << "\\\\ \n" << "N1535 & " << int(fN1535->getVal()+.5) << "\\pm" << int(fN1535->getError()+.5) << " & " << int(mean3->getVal()+.5) << "\\pm" << int(mean3->getError()+.5) << " & " << int(width3->getVal()+.5) << "\\pm" << int(width3->getError()+.5)  << " & " << r->minNll() << "\\\\ \n" << endl ;

