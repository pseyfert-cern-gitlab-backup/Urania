// $Id: $
#ifndef ROOT_WEIGHTS_H 
#define ROOT_WEIGHTS_H 1
#include "TH2D.h"
#include "TRandom2.h"

static const unsigned int c_PiBinsm = 10 ; 
static const unsigned int c_PiBinst = 20 ; 
static const unsigned int c_Binsm = 20 ; 
static const unsigned int c_Binst = 20 ; 
static const unsigned int c_PiBins = (c_Binsm+2)*(c_Binst+2); // (10+2)*(10+2)
static const unsigned int c_KBins  = (c_Binsm+2)*(c_Binst+2); // (20+2)*(20+2)
static const unsigned int c_wOneOverEff = 120. ; // average weight
static const unsigned int c_CPBins = 30 ; 

TH2D c_hK("c_hK","c_hK",   c_Binsm,0,1,c_Binst,0,1);
TH2D c_hPi("c_hPi","c_hPi",c_PiBinsm,0,1,c_PiBinst,0,1);

double c_PiMCWeight[c_PiBins] = {0, 0, 0, 0, 0, 0, 2.01553, 0.765109, 0, 0, 0, 0, 0, 0, 0, 0.194884, 0.00863187, 0, 0, 0.288919, 0, 0, 0, 0, 0, 0, 7.74777, 0.194829, 0.173211, 0, 0.121383, 0.277713, 0.0306059, 0.00543077, 0, 0, 0, 0, 0.433891, 0, 0, 0.295432, 0.0953992, 0.368659, 0.323179, 0.422692, 0, 0, 0, 0, 0, 0.515509, 0.0160537, 0.0269742, 0.034747, 0.364214, 0.0763635, 0.19194, 0, 0, 0, 0, 0, 0.121674, 0.0905417, 0.0216364, 0.0859312, 0.170926, 0.234245, 0.163228, 0, 0, 0, 0, 0.0164529, 0, 0, 0.105573, 0.110777, 0.156021, 0.344119, 0, 0.868378, 0, 0, 0, 0, 0, 0, 0, 0.19531, 0.211127, 0.27838, 0.0856368, 0, 0, 0, 10.2936, 0.727561, 0, 0, 0.207997, 0.105087, 0.126715, 0, 0.269962, 0, 0, 0, 27.7045, 0, 0.130042, 0.0501067, 0.0707733, 0.149339, 0.066171, 0.124535, 0.0410684, 0.00993419, 0, 0, 0, 1.80828, 0.658412, 0.0969625, 0.163966, 0.141019, 0.251383, 0.23376, 0.265838, 0, 0, 0, 0, 0, 1.52834, 0.292637, 0.223211, 0.174564, 0.155388, 0.254636, 0.720137, 0.270442, 0, 0, 0, 0.361129, 1.46934, 0.923237, 0.560825, 0.0605004, 0.484285, 0.272616, 1.19811, 0.886383, 0, 0, 0, 0, 0.682357, 2.46224, 0.761147, 0.470963, 0.55317, 0.68282, 0.26005, 0, 0, 0, 0, 0.133037, 1.56991, 2.51581, 1.80008, 1.01318, 1.04299, 0.692709, 0.729711, 0.394089, 0, 0, 0, 1.98551, 1.19809, 1.97104, 3.01151, 1.7605, 2.4205, 1.45139, 0.299183, 2.32658, 0, 0, 0, 0.0244967, 0.590911, 1.35832, 2.53933, 3.32026, 2.60338, 2.17612, 2.50648, 0, 0, 0, 0, 1.93541, 0.731318, 2.03305, 2.42386, 3.49864, 2.21671, 3.37606, 1.50519, 0, 0, 0, 0, 0, 0.974244, 1.93445, 2.44608, 3.39734, 3.02346, 3.30293, 1.74863, 4.69995, 0, 0, 0, 0, 0.311628, 1.33592, 2.85341, 3.58556, 3.82405, 2.73145, 0, 0, 0, 0, 0, 0, 3.36391, 1.6556, 3.60602, 8.04058, 5.08968, 0, 25.6851, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

double c_PiMCWeightE[c_PiBins] = {0, 0, 0, 0, 0, 0, 7.18044, 2.54821, 0, 0, 0, 0, 0, 0, 0, 0.462149, 0.054734, 0, 0, 0.258444, 0, 0, 0, 0, 0, 0, 10.0884, 0.28107, 0.156633, 0, 0.0929511, 0.148398, 0.0582398, 0.0474733, 0, 0, 0, 0, 1.09207, 0, 0, 0.122416, 0.0627898, 0.142535, 0.16019, 0.286535, 0, 0, 0, 0, 0, 0.351922, 0.034258, 0.0307267, 0.0331495, 0.122407, 0.069179, 0.167092, 0, 0, 0, 0, 0, 0.136766, 0.0680743, 0.0264968, 0.0484666, 0.0720776, 0.10647, 0.147838, 0, 0, 0, 0, 0.164684, 0, 0, 0.054628, 0.0495062, 0.0632717, 0.129956, 0, 0.812951, 0, 0, 0, 0, 0, 0, 0, 0.0671604, 0.0741344, 0.1099, 0.108194, 0, 0, 0, 33.798, 0.868587, 0, 0, 0.0670912, 0.0456074, 0.0547568, 0, 0.174531, 0, 0, 0, 94.1409, 0, 0.119887, 0.043769, 0.0399949, 0.0539392, 0.0392907, 0.0727068, 0.065711, 0.0994828, 0, 0, 0, 1.41644, 0.278308, 0.0615975, 0.0624715, 0.0523922, 0.0798185, 0.0979542, 0.170605, 0, 0, 0, 0, 0, 0.438973, 0.103044, 0.0720873, 0.0595511, 0.0625554, 0.106405, 0.313774, 0.458924, 0, 0, 0, 0.668057, 0.430036, 0.185495, 0.118034, 0.0349407, 0.115355, 0.113006, 0.410412, 1.07979, 0, 0, 0, 0, 0.252768, 0.352219, 0.138798, 0.105069, 0.127522, 0.197323, 0.197516, 0, 0, 0, 0, 0.405023, 0.461246, 0.351177, 0.221552, 0.160429, 0.191925, 0.212531, 0.422056, 0.99785, 0, 0, 0, 1.42057, 0.400803, 0.317419, 0.32458, 0.233684, 0.335364, 0.338314, 0.268843, 1.85042, 0, 0, 0, 0.170061, 0.287949, 0.261961, 0.313677, 0.368322, 0.384155, 0.492089, 1.10634, 0, 0, 0, 0, 1.96765, 0.347208, 0.352499, 0.329025, 0.431517, 0.381994, 0.789824, 0.901859, 0, 0, 0, 0, 0, 0.510169, 0.392956, 0.385564, 0.531495, 0.537845, 0.812979, 1.37885, 5.38397, 0, 0, 0, 0, 0.327569, 0.405019, 0.559219, 0.70061, 0.84045, 0.998964, 0, 0, 0, 0, 0, 0, 2.69791, 1.16065, 1.18986, 2.42906, 2.06039, 0, 47.9141, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

double c_KMCWeight[c_KBins]  = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.698317, 0, 0, 0, 0, 0, 0, 0, 0.0881882, 0, 0.0488009, 0, 0.0630685, 0.0926125, 0.0568297, 0.246459, 0.133372, 0.275939, 0.242725, 0.00477777, 0, 0.376088, 0, 0, 0, 0, 0, 2.20934, 0, 0.211222, 0, 0.0470443, 0.0534592, 0.0925054, 0.0165777, 0.067389, 0.0606701, 0.179713, 0.235411, 0.345579, 0.0700004, 0.088415, 0.133349, 0.107911, 0.0440697, 0, 0, 0, 0, 0.530646, 0, 0.0612218, 0.125026, 0.110378, 0.00640523, 0.097232, 0.127174, 0.113572, 0.0211017, 0.260524, 0.219951, 0.298075, 0.144941, 0.117258, 0.101798, 0, 0.0292177, 0.590917, 0, 0, 0, 0, 0.269351, 0.226385, 0.0238285, 0.0151236, 0.0193539, 0.119853, 0.0846776, 0.131417, 0.0962734, 0.193855, 0.232276, 0.229752, 0.148943, 0.151866, 0.203271, 0.0879581, 0.0613161, 0, 0, 0, 2.62756, 0.664234, 0.686034, 0.27891, 0.0841042, 0.0473314, 0.0638008, 0.136349, 0.112026, 0.0804488, 0.0945814, 0.25359, 0.267561, 0.149379, 0.111417, 0.0330631, 0.188894, 0.0204587, 0.391686, 0.501406, 0, 0, 0, 0.665676, 0.305177, 0.109823, 0.119547, 0.0792569, 0.0813571, 0.0582657, 0.125371, 0.126923, 0.09183, 0.314549, 0.244553, 0.204972, 0.119948, 0.0614606, 0.185227, 0.292702, 0.199772, 0.318707, 0, 0, 0, 0.438129, 1.02294, 0.120501, 0.10329, 0.231725, 0.101248, 0.14523, 0.148432, 0.12591, 0.129681, 0.243892, 0.213808, 0.173351, 0.181651, 0.141675, 0.18966, 0.274489, 0.505937, 1.43758, 0, 0, 0, 3.49718, 0.787683, 0.44991, 0.08597, 0.192974, 0.127287, 0.109913, 0.174612, 0.154216, 0.100766, 0.296943, 0.271675, 0.168105, 0.154364, 0.165364, 0.147683, 0.308389, 0.298112, 1.58297, 0, 0, 0, 0, 0.434025, 0.512731, 0.163891, 0.242105, 0.136978, 0.197164, 0.100735, 0.137361, 0.116869, 0.305565, 0.309579, 0.178462, 0.196183, 0.158294, 0.293605, 0.58499, 0.194301, 2.35472, 0, 0, 0, 0.291758, 0.456724, 0.586572, 0.37926, 0.0649113, 0.095936, 0.182873, 0.118657, 0.120644, 0.125015, 0.321807, 0.305002, 0.264575, 0.240301, 0.206268, 0.390689, 0.167869, 0.828715, 0.795693, 0, 0, 0, 0.437075, 0.351844, 0.364856, 0.29794, 0.235537, 0.279016, 0.243634, 0.214585, 0.0756772, 0.126745, 0.32943, 0.341471, 0.22823, 0.314768, 0.486444, 0.466358, 0.496903, 0.487734, 0.614658, 0, 0, 0, 0.210607, 0.0790634, 0.441553, 0.460138, 0.530464, 0.443372, 0.327224, 0.312222, 0.256393, 0.237073, 0.376181, 0.371699, 0.431598, 0.317978, 0.523726, 0.613282, 1.22522, 0.881351, 0, 0, 0, 0.154933, 0.0519634, 0.227097, 0.34412, 0.340052, 0.577507, 0.684717, 0.732857, 0.761577, 0.789553, 0.616527, 0.827321, 0.570541, 0.530704, 0.526025, 0.684941, 0.938516, 0.537171, 0.646932, 1.10278, 0, 0, 0, 0.212886, 0.413534, 0.374021, 0.704721, 0.714224, 0.797251, 1.10988, 1.19992, 0.833495, 1.45897, 1.50839, 1.18425, 0.951689, 0.814266, 0.734349, 0.68035, 0.835323, 0.689024, 0, 0, 0, 0, 0.461282, 0.646684, 0.547983, 0.956952, 0.868021, 0.960614, 1.1962, 1.41676, 1.13589, 1.36305, 2.01761, 2.20554, 1.5775, 1.45583, 1.17508, 1.07095, 1.10782, 1.36513, 0.724034, 0, 0, 0, 0.22406, 0.521992, 0.763351, 1.85809, 1.98716, 1.83572, 2.08509, 1.83741, 1.86436, 1.33392, 2.2399, 2.30819, 2.13971, 2.09286, 2.06875, 1.71281, 1.76222, 0.325726, 1.04709, 0, 0, 0, 0.901134, 1.28403, 4.8223, 7.24858, 5.86324, 5.45666, 5.99694, 4.41223, 3.10658, 2.84699, 3.08616, 2.47239, 2.78948, 2.22789, 3.16822, 2.38774, 0.542393, 1.99155, 0, 0, 0, 0, 0.231278, 2.81638, 6.06247, 2.53972, 2.38281, 2.45562, 3.16213, 3.99896, 5.72696, 4.54272, 4.17795, 3.75237, 3.04501, 2.26687, 3.73642, 2.77866, 0.916218, 0.190064, 0, 0, 0, 0, 0, 3.67506, 3.3392, 2.01496, 3.15718, 3.98087, 4.86832, 3.76817, 2.73767, 7.58558, 6.08678, 4.44228, 2.47256, 2.82574, 2.16503, 6.43706, 0.0255747, 0, 0, 0, 0, 0, 0, 5.92456, 2.23039, 5.89952, 4.81573, 8.51772, 14.6402, 6.11301, 4.05009, 3.66058, 8.86189, 5.23079, 4.04379, 3.60827, 2.78546, 4.95898, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } ;
double c_KMCWeight2[c_KBins] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.00628, 0, 0, 0, 0, 0, 0, 0, 0.0873828, 0, 0.0463841, 0, 0.0580694, 0.0855798, 0.0538101, 0.237322, 0.122786, 0.267087, 0.214509, 0.00438764, 0, 0.345212, 0, 0, 0, 0, 0, 4.36679, 0, 0.22156, 0, 0.0452507, 0.0541358, 0.089062, 0.0160922, 0.0652231, 0.0581759, 0.171086, 0.224084, 0.333613, 0.0683265, 0.0872202, 0.118997, 0.103134, 0.0486921, 0, 0, 0, 0, 0.513838, 0, 0.0651405, 0.140069, 0.107961, 0.00656597, 0.0930047, 0.12063, 0.105108, 0.0196951, 0.245566, 0.204918, 0.282901, 0.140318, 0.115731, 0.0969324, 0, 0.0270102, 0.578383, 0, 0, 0, 0, 0.317064, 0.245629, 0.0254287, 0.0152922, 0.0191029, 0.117847, 0.0806044, 0.125932, 0.0926956, 0.187037, 0.218922, 0.223157, 0.141427, 0.146644, 0.195981, 0.0839851, 0.0548484, 0, 0, 0, 3.19952, 0.741744, 0.719391, 0.291474, 0.0831644, 0.0474992, 0.0629147, 0.133268, 0.108047, 0.0773032, 0.091706, 0.237485, 0.251061, 0.139996, 0.106348, 0.0321184, 0.185783, 0.020989, 0.368941, 0.498376, 0, 0, 0, 0.740535, 0.350224, 0.11082, 0.124715, 0.0769369, 0.0799413, 0.0570503, 0.121547, 0.121724, 0.0890211, 0.29759, 0.23358, 0.19235, 0.11894, 0.0582414, 0.181245, 0.292462, 0.186122, 0.348759, 0, 0, 0, 0.491375, 1.23682, 0.12966, 0.103083, 0.236127, 0.101188, 0.142189, 0.144423, 0.121029, 0.122418, 0.228977, 0.203094, 0.167337, 0.17431, 0.141702, 0.178786, 0.266902, 0.508426, 1.31228, 0, 0, 0, 4.42281, 0.917225, 0.504333, 0.0872849, 0.194312, 0.126801, 0.110519, 0.171183, 0.146105, 0.0975516, 0.28179, 0.259847, 0.159599, 0.154536, 0.159497, 0.140813, 0.30474, 0.299312, 2.07156, 0, 0, 0, 0, 0.476997, 0.584841, 0.168024, 0.248145, 0.138489, 0.19211, 0.0960412, 0.131986, 0.114716, 0.295036, 0.299231, 0.171649, 0.187937, 0.155417, 0.287675, 0.594532, 0.195384, 2.27245, 0, 0, 0, 0.340225, 0.51292, 0.611792, 0.382051, 0.0655972, 0.0961142, 0.179132, 0.115673, 0.116993, 0.118185, 0.304622, 0.295054, 0.25914, 0.228214, 0.20394, 0.382798, 0.163429, 0.774552, 0.715945, 0, 0, 0, 0.611952, 0.377444, 0.369652, 0.314786, 0.235568, 0.273381, 0.236736, 0.209597, 0.0721901, 0.122188, 0.317381, 0.337133, 0.224782, 0.303853, 0.476473, 0.464321, 0.490844, 0.466988, 0.515621, 0, 0, 0, 0.244881, 0.0898, 0.461348, 0.469664, 0.531184, 0.449784, 0.315187, 0.302586, 0.249988, 0.23119, 0.370936, 0.358022, 0.422271, 0.306905, 0.512288, 0.601715, 1.17953, 0.899475, 0, 0, 0, 0.223796, 0.0586731, 0.248026, 0.36558, 0.353518, 0.569298, 0.664032, 0.716605, 0.744341, 0.784905, 0.618105, 0.796419, 0.550278, 0.527771, 0.521226, 0.69147, 0.961198, 0.531236, 0.641158, 1.32199, 0, 0, 0, 0.264431, 0.435323, 0.392694, 0.720893, 0.714486, 0.783233, 1.08294, 1.18419, 0.808471, 1.38773, 1.4855, 1.15589, 0.928398, 0.817629, 0.744463, 0.678688, 0.80852, 0.724197, 0, 0, 0, 0, 0.612866, 0.675249, 0.573541, 0.960357, 0.856185, 0.932103, 1.15983, 1.38409, 1.0727, 1.34623, 1.95631, 2.12856, 1.58386, 1.46066, 1.18138, 1.0588, 1.10474, 1.50741, 0.732171, 0, 0, 0, 0.273436, 0.520902, 0.777152, 1.85592, 1.95901, 1.75579, 2.01211, 1.76752, 1.77197, 1.29103, 2.16681, 2.25003, 2.10925, 2.10074, 2.08087, 1.72253, 1.80519, 0.357333, 1.29879, 0, 0, 0, 0.987079, 1.33713, 5.06968, 7.2732, 5.68925, 5.29154, 5.72927, 4.22074, 2.97013, 2.65155, 2.95177, 2.43317, 2.8201, 2.1831, 3.16375, 2.39782, 0.54128, 1.929, 0, 0, 0, 0, 0.246335, 3.04562, 6.4462, 2.52572, 2.27489, 2.33949, 3.14423, 3.83315, 5.55788, 4.3989, 4.05942, 3.6376, 3.07643, 2.27679, 3.78021, 2.93838, 0.811821, 0.208029, 0, 0, 0, 0, 0, 3.9463, 3.44937, 1.92035, 3.06294, 3.80225, 4.25812, 3.64027, 2.55216, 7.29018, 5.92283, 4.35749, 2.48052, 2.94117, 2.4299, 6.39884, 0.026832, 0, 0, 0, 0, 0, 0, 5.56647, 2.13721, 6.4151, 4.75569, 8.21498, 13.6082, 5.49387, 3.73178, 3.57454, 7.91873, 5.88933, 3.88151, 3.6662, 3.24523, 5.37282, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0} ;

double c_KMCWeightE[c_KBins] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.22026, 0, 2.22574, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.373383, 0, 0.0207971, 0, 0, 0, 0, 0.0073926, 1.05257, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.62857, 0.0338005, 0.280895, 0.302651, 0.151659, 0, 0, 0.0556985, 0.308399, 0.340645, 0.637739, 0.0334584, 0.101094, 0.011582, 0, 0, 0, 0, 0, 0, 0, 0, 0.133976, 0, 0, 0, 0, 0.0376867, 0.750127, 0.316285, 0, 0.332075, 0.918546, 0.949923, 0, 0.859712, 0.607367, 0, 0, 0, 0, 0, 0, 0, 0, 0.361525, 0.29901, 0, 0.0385367, 0, 0.1086, 0.0896836, 0.0254472, 0.510414, 0.579654, 0.165908, 0.0483487, 0.0015792, 0.906568, 0, 0, 0, 0, 0, 0, 0, 0, 0.21804, 0.00832364, 0, 0.189117, 0.0398992, 0.0170969, 0.0778194, 0.189802, 0, 0.726712, 0.424422, 0.423096, 0.193966, 0.391291, 0, 0, 0, 0, 0, 0, 0, 0.00495754, 0.0628997, 0, 0, 0, 0.107599, 0.164046, 0.0617908, 0.307961, 0.0907941, 0.50985, 0.609413, 0.430788, 0, 0, 1.96545, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.00460046, 0, 0, 0.0563028, 0.14584, 0.428465, 0, 0.825645, 0.836484, 0, 0.00768389, 0.325929, 0, 0, 0, 0, 0, 1.90283, 0, 0.31316, 0, 0, 0.0029494, 0, 0.248245, 0.409124, 0.141754, 0.203349, 0.118043, 0.315466, 0, 0, 0.00286332, 1.35405, 0, 0, 0, 0, 0, 1.33083, 0, 0, 0.00454633, 0.158732, 0.0587987, 0.0620289, 0.226007, 0, 0.400102, 0.0697902, 0.207265, 0, 0.103188, 0.312116, 0.105931, 0, 0.010473, 0, 0, 0, 0, 0, 0, 0.793114, 0.346004, 0.54727, 0.147362, 0.070616, 0.327819, 0.11443, 0.185147, 0.249788, 0.411815, 0.303646, 0.389906, 0.430074, 0.432015, 0.313533, 0, 0, 0, 0, 0, 0, 0, 0.139121, 0.686767, 1.44249, 0.378593, 0.345792, 0.317132, 0.309268, 0.329429, 0.211686, 0.153474, 0.340143, 0.10618, 0.800981, 0.532541, 1.74028, 0.449675, 0, 0, 0, 0, 0, 0.179762, 0.044713, 0, 1.97882, 1.72662, 0.647054, 1.05411, 0.496169, 0.0586983, 0.132826, 0.424532, 1.23507, 0.394809, 0.416227, 2.26438, 1.29608, 1.95831, 0.0875738, 0, 0, 0, 0, 0.183015, 0, 0, 1.28693, 1.67401, 3.53768, 1.34331, 0.961982, 0.817536, 0.540447, 1.24455, 0.447329, 1.24747, 0.6005, 0.922933, 0, 0, 0, 0, 0, 0, 0, 0, 0.0634115, 1.06563, 1.32324, 2.4997, 3.48664, 3.18941, 2.30753, 1.51887, 1.69109, 1.53276, 1.47112, 0.967281, 1.04759, 0.676511, 0.97573, 0.260234, 0, 0, 0, 0, 0, 0, 1.44433, 1.23095, 0.917902, 2.34241, 2.38622, 3.69629, 5.5232, 3.57322, 1.68813, 3.62005, 4.15564, 2.25729, 2.02344, 0.188757, 1.01883, 5.13876, 0, 0, 0, 0, 0, 0, 0.0109159, 0, 0.846767, 1.39296, 1.93973, 3.71506, 3.62757, 5.02608, 5.16652, 3.24054, 5.09802, 3.02774, 2.84087, 3.46522, 2.25681, 0, 0, 0, 0, 0, 0, 0, 0.783959, 0.334016, 0.822839, 1.57632, 4.124, 3.90948, 4.09492, 6.45519, 5.25588, 4.04025, 3.25228, 4.48028, 4.19412, 0, 5.22455, 0, 0, 0, 0, 0, 0, 0, 0, 0.307853, 0.994557, 1.91007, 4.36479, 4.72983, 4.3787, 5.22038, 5.09853, 4.90644, 5.58458, 3.82717, 8.47355, 2.56879, 0.50352, 6.0408, 0, 0, 0, 0, 0, 0, 0, 0.0276588, 0.445237, 2.02043, 3.54165, 8.24624, 5.10093, 5.85838, 6.77863, 5.10249, 5.25415, 2.84409, 4.64466, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6.38337, 2.0105, 0.0219867, 7.32691, 14.7824, 8.59368, 6.91289, 23.6856, 6.14426, 6.96669, 0, 0, 19.1563, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };  

// 1 is without Dalitz weight. 2 with.
const Int_t c_nptBins = 28 ; 
Double_t c_ptBins[c_nptBins] = {1500,2200,3000,3500,4000,4500,5000,5500,6000,6500,7000,7500,8000,8500,9000,9500,10000,10750,11500,12500,14000,16000,18000,20000,22000,25000,30000,1.e12};
Double_t c_ptWeights[c_nptBins] = { 0.666744, 1.07248, 1.23936, 1.40508, 1.41215, 1.43208, 1.33071, 1.32537, 1.1913, 1.09394, 1.0492, 1.07596, 0.993251, 0.985716, 0.885626, 0.863668, 0.848093, 0.817466, 0.871625, 0.688731, 0.747994, 0.703201, 0.625576, 0.599652, 0.569779, 0.605114, 0.600123, 0.451159 } ;
Double_t c_ptWeightsE[c_nptBins] = { 0.0356903, 0.0527075, 0.0486636, 0.0620731, 0.0579408, 0.0549938, 0.050542, 0.0484495, 0.0430433, 0.0396545, 0.0385525, 0.039916, 0.0386105, 0.0396275, 0.037793, 0.0386178, 0.0402354, 0.0335526, 0.0386417, 0.0307565, 0.0309532, 0.0314959, 0.0374448, 0.0455322, 0.056045, 0.0630769, 0.071924, 0.0768611 };
Double_t c_ptWeights2[c_nptBins] = { 1.0359, 1.38474, 1.35587, 1.42303, 1.46219, 1.55935, 1.29056, 1.42254, 1.21646, 1.11485, 1.00732, 1.12811, 0.956636, 0.97172, 0.795429, 0.873507, 0.800789, 0.783433, 0.835225, 0.693676, 0.680891, 0.662034, 0.513638, 0.571128, 0.472903, 0.53296, 0.613887, 0.369888 };
Double_t c_ptWeights2E[c_nptBins] = { 0.0612849, 0.0730003, 0.054606, 0.0631007, 0.0606132, 0.0614279, 0.0485929, 0.0530773, 0.044204, 0.0406139, 0.0366338, 0.0423731, 0.0368441, 0.0389268, 0.0331221, 0.0391607, 0.0375019, 0.0318533, 0.0366662, 0.0310226, 0.0276303, 0.0292915, 0.0296672, 0.0429779, 0.0450579, 0.0542926, 0.0738892, 0.0612255 };

const Int_t c_effBins = 20 ;
static const unsigned int c_effBins2 = (c_effBins+2)*(c_effBins+2); // (20+2)*(20+2)
TH2D c_heff("c_heff","c_heff",c_effBins,0,1,c_effBins,0,1);
Double_t c_pKEffs[c_effBins2] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0031348, 0.00466563, 0.00556031, 0.00543131, 0.0102966, 0.00882594, 0.00936295, 0.011115, 0.00834537, 0.00914944, 0.0103073, 0.00964126, 0.00994601, 0.0125343, 0.00933489, 0.0044843, 0.00673401, 0, 0, 0, 0, 0.00114416, 0.00883783, 0.00662879, 0.00613847, 0.00553236, 0.00678808, 0.00790514, 0.00863258, 0.0100553, 0.0102114, 0.00935281, 0.00910804, 0.00931153, 0.00923958, 0.00652257, 0.00603583, 0.0062523, 0.00384246, 0, 0, 0, 0, 0.00377929, 0.00415282, 0.00636402, 0.00546785, 0.00765145, 0.00813287, 0.00933088, 0.00850279, 0.00911956, 0.00869712, 0.00913386, 0.00980317, 0.00778703, 0.00859116, 0.007109, 0.00810392, 0.00832771, 0.00654762, 0.0120968, 0, 0, 0.00784314, 0.00374933, 0.00491932, 0.00585958, 0.00642523, 0.00693304, 0.00760117, 0.00862458, 0.00814685, 0.00819897, 0.00779214, 0.00872926, 0.00897526, 0.00880944, 0.00869565, 0.00836035, 0.00779335, 0.00751759, 0.00595238, 0.00291545, 0, 0, 0.00668896, 0.00257954, 0.00355542, 0.00534889, 0.00588603, 0.00679348, 0.00753862, 0.00833213, 0.00884224, 0.00834082, 0.00876515, 0.00761364, 0.00836068, 0.00799023, 0.00792393, 0.00723642, 0.00787289, 0.00693173, 0.00276434, 0.00493827, 0, 0, 0.0027248, 0.00416983, 0.00350074, 0.00471731, 0.00672073, 0.00732231, 0.00696924, 0.00739721, 0.00844886, 0.00894415, 0.00840819, 0.00805315, 0.00784018, 0.00777833, 0.0075256, 0.00735266, 0.0061673, 0.00681741, 0.00556206, 0.00879121, 0, 0, 0, 0.00461133, 0.00485955, 0.00501952, 0.00582648, 0.00692828, 0.00739123, 0.00776713, 0.00836213, 0.00842461, 0.00782764, 0.00822811, 0.00805897, 0.00776401, 0.00667792, 0.00676895, 0.00772988, 0.00474777, 0.00550892, 0.00353982, 0, 0, 0, 0.0012184, 0.00335646, 0.00502219, 0.00641331, 0.00583789, 0.00750051, 0.00789991, 0.0077608, 0.00740319, 0.008097, 0.00745988, 0.00777746, 0.00766291, 0.00810308, 0.00642267, 0.00640898, 0.00568924, 0.00742023, 0.00823723, 0, 0, 0.00207039, 0.00317919, 0.00426076, 0.00613497, 0.00658973, 0.00657098, 0.00690883, 0.00668886, 0.00759946, 0.0074749, 0.00751002, 0.00831514, 0.00714242, 0.00719412, 0.00672276, 0.00662191, 0.00704829, 0.00506217, 0.00659091, 0, 0, 0, 0.00191939, 0.00330124, 0.00474031, 0.00542369, 0.00627154, 0.00691437, 0.00698478, 0.00746446, 0.00761575, 0.00747022, 0.00771625, 0.00794009, 0.00784102, 0.00707816, 0.0061862, 0.00548028, 0.00608793, 0.00634268, 0.00489324, 0.00791139, 0, 0, 0, 0.00274801, 0.00385417, 0.00460954, 0.00625731, 0.00697026, 0.00686275, 0.00735903, 0.00732, 0.00749727, 0.00736499, 0.00723384, 0.00689087, 0.00726652, 0.00723772, 0.00605632, 0.00618864, 0.00514475, 0.00533215, 0.00888889, 0, 0, 0.00628931, 0.00250139, 0.00440806, 0.00570247, 0.00652419, 0.0069137, 0.00763314, 0.00839936, 0.00770306, 0.00779178, 0.00784843, 0.00728811, 0.00675394, 0.00600314, 0.00697164, 0.00582255, 0.00512991, 0.00420732, 0.0025719, 0.00641026, 0, 0, 0.00208768, 0.00431655, 0.00495103, 0.0055595, 0.00693978, 0.00662374, 0.00837757, 0.00811405, 0.00788288, 0.00699159, 0.00786603, 0.00759524, 0.00693906, 0.00650088, 0.0064138, 0.00573179, 0.00491551, 0.00462788, 0.00549588, 0.00338983, 0, 0, 0.00239234, 0.00161082, 0.00442425, 0.00559306, 0.00607042, 0.00738372, 0.00839261, 0.00807669, 0.00819962, 0.00889389, 0.0076537, 0.00781098, 0.00714311, 0.00689191, 0.00621248, 0.00539575, 0.00522513, 0.00455742, 0.00517852, 0.00696864, 0, 0, 0.00877193, 0.00256975, 0.00351304, 0.00490699, 0.00564246, 0.00804617, 0.00791942, 0.00879375, 0.00827636, 0.00856336, 0.00837161, 0.00773787, 0.00658901, 0.00642774, 0.00552176, 0.00556328, 0.00412217, 0.00315716, 0.00510817, 0.00666667, 0, 0, 0.00593472, 0.0027637, 0.00569383, 0.00592682, 0.00649843, 0.00863839, 0.00957866, 0.00922316, 0.00939648, 0.00866755, 0.00873517, 0.00710227, 0.00633723, 0.00620651, 0.00572843, 0.00499232, 0.00406054, 0.00343784, 0.00495575, 0.00488998, 0, 0, 0.00409836, 0.00171625, 0.00508582, 0.00650806, 0.00743165, 0.00845983, 0.00915709, 0.00877727, 0.00945051, 0.00799506, 0.0072945, 0.00702371, 0.00665863, 0.00579123, 0.00535067, 0.00392037, 0.00345924, 0.00481845, 0.00221043, 0.00294118, 0, 0, 0, 0.00546875, 0.00429799, 0.00726063, 0.00714084, 0.00884774, 0.00855518, 0.00787892, 0.00789253, 0.00787838, 0.00785696, 0.00713577, 0.00651479, 0.00607858, 0.00595019, 0.00362227, 0.00296506, 0.00185615, 0.0029994, 0.00420168, 0, 0, 0, 0.00127551, 0.0053012, 0.00728094, 0.00927555, 0.00867184, 0.00818125, 0.00605019, 0.00644304, 0.00562957, 0.00583344, 0.00633034, 0.00755596, 0.00742493, 0.00519481, 0.00482559, 0.00155039, 0.00152381, 0, 0, 0, 0, 0, 0, 0.0032, 0.00423729, 0.00364015, 0.0075, 0.00771208, 0.00234797, 0.00424448, 0.00349786, 0.0040864, 0.00400721, 0.00633326, 0.00499081, 0.00448, 0.00313339, 0.00214746, 0.00116959, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  };

Double_t c_ppiEffs[c_effBins2] = {  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.00187266, 0.0008726, 0.00386954, 0.00619534, 0.00707291, 0.012812, 0.00785781, 0.0104542, 0.0114555, 0.00834135, 0.0123372, 0.0103385, 0.0130769, 0.00683527, 0.00823271, 0.00890208, 0.0113314, 0.0188679, 0, 0, 0, 0, 0, 0.00206307, 0.00389174, 0.00504281, 0.00657837, 0.00850004, 0.00984181, 0.0107183, 0.0107715, 0.010955, 0.0116601, 0.0117718, 0.0111765, 0.0111456, 0.00913978, 0.00934891, 0.00173913, 0.0142857, 0, 0, 0, 0.00105597, 0.00143369, 0.00178699, 0.00508273, 0.00456985, 0.00747432, 0.00924925, 0.00909493, 0.0107168, 0.0109726, 0.0103749, 0.010666, 0.00929888, 0.0112441, 0.00958422, 0.00868912, 0.010111, 0.00905701, 0, 0, 0, 0, 0, 0.000792393, 0.00158311, 0.00350413, 0.00526036, 0.00628638, 0.00792383, 0.0097056, 0.0108913, 0.0100436, 0.0104298, 0.00918286, 0.0102777, 0.0102861, 0.00959565, 0.00956563, 0.00863167, 0.011061, 0.00539084, 0, 0, 0.0046729, 0.000618812, 0.00145894, 0.00189135, 0.00333107, 0.00540997, 0.00717545, 0.008057, 0.00829471, 0.00896289, 0.00971814, 0.00982872, 0.0107923, 0.00983432, 0.00925567, 0.00960543, 0.00842266, 0.00744241, 0.00784656, 0.00700935, 0, 0, 0, 0, 0.000871536, 0.00199185, 0.00310576, 0.0044024, 0.00665843, 0.00791048, 0.00812436, 0.00895412, 0.00919932, 0.0103694, 0.00997236, 0.00886299, 0.00903792, 0.00809802, 0.00846033, 0.00765743, 0.0118328, 0.00929368, 0, 0, 0, 0, 0.00140735, 0.00202396, 0.00327742, 0.00482076, 0.00690491, 0.0073883, 0.00821534, 0.008795, 0.0086111, 0.00919489, 0.00938273, 0.00897453, 0.00968557, 0.00818503, 0.00748648, 0.00790765, 0.0056953, 0.00662252, 0, 0, 0, 0.000419639, 0.00102324, 0.00231326, 0.00350457, 0.00582554, 0.00657822, 0.00759702, 0.00892584, 0.00857568, 0.00919447, 0.00891442, 0.0088998, 0.00910331, 0.00913821, 0.0083168, 0.00805073, 0.0073315, 0.00797872, 0.00309598, 0, 0, 0, 0.000396511, 0.000987863, 0.00217102, 0.00360827, 0.00509646, 0.00591666, 0.00702739, 0.00838623, 0.00880993, 0.00904705, 0.00948005, 0.00845806, 0.00928443, 0.00865077, 0.00731031, 0.00813147, 0.00758544, 0.0066335, 0.0056338, 0, 0, 0, 0.000400641, 0.000831831, 0.00238468, 0.00410695, 0.00498718, 0.00600544, 0.00697213, 0.00822845, 0.00867116, 0.00885201, 0.00874538, 0.00869807, 0.00870965, 0.00814529, 0.00821243, 0.00788354, 0.00719926, 0.00761004, 0.00684932, 0, 0, 0, 0, 0.000682408, 0.00159137, 0.00387725, 0.00500433, 0.00671829, 0.00741941, 0.00826945, 0.00862182, 0.00867975, 0.00881593, 0.00824595, 0.00905929, 0.00794163, 0.00767089, 0.0068102, 0.00512537, 0.00714286, 0.0075188, 0, 0, 0, 0.000396983, 0.000573394, 0.00192376, 0.00447774, 0.00512761, 0.00809561, 0.00787687, 0.00810819, 0.00843305, 0.00917755, 0.008899, 0.00842672, 0.00751867, 0.00780682, 0.00647706, 0.00697876, 0.00592629, 0.00461603, 0.00304414, 0, 0, 0, 0, 0.00133077, 0.00268017, 0.00473114, 0.00587389, 0.00699396, 0.0078832, 0.00850324, 0.0088602, 0.00871313, 0.00876322, 0.00876403, 0.00812136, 0.00757909, 0.0065728, 0.00651496, 0.00571429, 0.00521853, 0.00154321, 0, 0, 0, 0.000456204, 0.000670803, 0.00186794, 0.00392918, 0.00540829, 0.00746638, 0.00870229, 0.00968494, 0.00968416, 0.00940425, 0.00930468, 0.00812832, 0.00751749, 0.00698985, 0.00603881, 0.00503615, 0.00559932, 0.00389579, 0.00175131, 0, 0, 0, 0.000550964, 0.00126628, 0.00298452, 0.00438572, 0.00707583, 0.00743274, 0.00867958, 0.00949422, 0.0102096, 0.00950123, 0.00921, 0.00808935, 0.00823486, 0.00741062, 0.00582193, 0.00616333, 0.00443038, 0.00642055, 0.00407332, 0, 0, 0, 0, 0.00132832, 0.0022747, 0.00462138, 0.00678395, 0.00957835, 0.00934211, 0.010198, 0.0100841, 0.00985569, 0.0100083, 0.00908763, 0.00852796, 0.00690259, 0.00662714, 0.0040201, 0.00373459, 0.00290135, 0.0091954, 0, 0, 0, 0, 0.000815661, 0.00279486, 0.00440455, 0.00774712, 0.0108857, 0.00986312, 0.011097, 0.0100722, 0.00961149, 0.0094201, 0.0094113, 0.00717341, 0.00663038, 0.00480795, 0.00420276, 0.00394135, 0.00539195, 0.00273224, 0, 0, 0, 0, 0.000388954, 0.00247808, 0.00267007, 0.00673321, 0.00967323, 0.011338, 0.011635, 0.0106414, 0.0092057, 0.00894733, 0.00761582, 0.00821993, 0.00818218, 0.00527377, 0.00405922, 0.00220119, 0.00112676, 0.015444, 0, 0, 0, 0, 0.00132714, 0.000332226, 0.00710309, 0.00535547, 0.00859654, 0.0125686, 0.010834, 0.00966093, 0.00854907, 0.00824982, 0.00829187, 0.00869906, 0.00746626, 0.00651163, 0.00272056, 0.00286123, 0.00458716, 0, 0, 0, 0, 0, 0, 0.00102987, 0.00306185, 0.00542797, 0.00448574, 0.00763171, 0.0111492, 0.0082224, 0.00835965, 0.00858369, 0.00708481, 0.00792317, 0.00879588, 0.00587988, 0.00125865, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

double c_fluctuateBins[c_KBins] ;
double c_CPWeightsPi[c_CPBins] = { 3.65004, 1.12394, 0.81868, 0.77473, 0.841625, 0.781373, 1.07851, 1.04944, 1.2595, 1.10522, 1.2006, 1.51898, 1.21988, 1.92033, 1.29889, 1.21661, 1.93867, 6.49302, 2.89682, 1.93389, 1.37277, 0.563284, 8.21893, 1.6977, 1.29652, -0, 0, 0, 0, -0 };
double c_CPWeightsK[c_CPBins] = { 0, 0.410801, 0.561519, 0.62277, 0.72081, 0.778347, 0.937498, 1.05921, 1.209, 1.28534, 1.47512, 1.66908, 1.67591, 1.93857, 2.0351, 2.52329, 2.85772, 3.44839, 3.38074, 4.49444, 5.53904, 5.97761, 4.61429, 11.4713, 11.4364, 26.6205, 6.42495, 13.1242, 20.6218, 18.5588};

// ####################################################################################################
// 
double cpWeight(bool isPion, double MP){
  int bin = int(c_CPBins*(MP/100000.));
  if (bin>c_CPBins-1) bin = c_CPBins-1;
  return (isPion?c_CPWeightsPi[bin]:c_CPWeightsK[bin]);
}
// ####################################################################################################
// 
void fillFluctuateBins(TRandom2* rndm){
  std::cout << "Gaussian smearing is" ;
  for ( unsigned int i =  0 ; i<c_KBins ; i++){
    c_fluctuateBins[i] = rndm->Gaus();
    std::cout << " " << c_fluctuateBins[i] ;
  }
  std::cout << std::endl ;
}

// ####################################################################################################
// *** MC weight ***
double mcWeight(double mp, double thetap, bool pion, unsigned int version=1, TRandom2* rndm=0){
  double w = 0 ;
  int bin = 0 ;
  double fe = 0 ;
  if (pion){
    bin = c_hPi.FindBin(mp,thetap);
    w = c_PiMCWeight[bin];
    if (rndm) fe = c_PiMCWeightE[bin]*c_fluctuateBins[bin];
  } else {
    bin = c_hK.FindBin(mp,thetap);
    w = (1==version?c_KMCWeight[bin]:c_KMCWeight2[bin]);
    if (rndm) fe = c_KMCWeightE[bin]*c_fluctuateBins[bin];
  }
  w = w+fe ;

  //  if (w==0) std::cout << pion << " " << mp << " " << thetap << " bin " << bin << " has weight " << w << std::endl ;
  return w>0?w:0. ;
}
// ####################################################################################################
inline double  nnEffWeight(double mprime){
  //p0                        =     0.992358   +/-   0.0187521   
  //p1                        =    -0.178629   +/-   0.039336    
  return 0.970823-0.141184*mprime ;
}
// ####################################################################################################
inline double  dataNnEffWeight(double mprime){
    //p0                        =      1.27219   +/-   0.0141117   
    //p1                        =     -0.54569   +/-   0.0275166   
  return 1.27219-0.54569*mprime ;
}
// ####################################################################################################
inline double ptWeight(double PT,unsigned version=1, TRandom2* rndm=0){
  double w = (1==version?c_ptWeights[0]:c_ptWeights2[0]) ;
  double e = (rndm?c_ptWeightsE[0]:0.);
  for (int i = 0 ; i < c_nptBins-1 ; i++){
    // std::cout << "PT " << PT << " bin " << i << " at " <<   ptBins[i] << " with " << ptWeights[i] << std::endl ;
    if (PT > c_ptBins[i]) w = (1==version?c_ptWeights[i+1]:c_ptWeights2[i+1]); // store this value
    e = (rndm?(1==version?c_ptWeightsE[i+1]:c_ptWeights2E[i+1])*c_fluctuateBins[i+100]:0.); // offset bins a bit
  } 
  if (rndm) w = w + e ;
  // std::cout << PT << " PT gets weight " << w << std::endl ;  
  return w; // for cases above 50000 take last bin
}
// ####################################################################################################
inline double totalEffWeight(double mprime, double thetaprime, bool pion){
  double w = 0 ;
  int bin = 0 ;
  bin = c_heff.FindBin(mprime,thetaprime);
  if (pion){
    w = c_ppiEffs[bin];
  } else {
    w = c_pKEffs[bin];
  }
  return w>0?1./w:0. ;  // return 1 over w
  
}
// ####################################################################################################
inline bool down(int run){
  if (run<=87988) return true ;
  if (run<=90207) return false ;
  if (run<=93282) return true ;  // down
  if (run<=97028) return false ; // up
  if (run<=98882) return true ;  // down
  if (run<=101862) return false ; // up
  if (run<=102452) return true ;  // down
  if (run<=102907) return false ; // up
  if (run<=103686) return true ;  // down
  if (run<=104414) return false ; // up
  // 2012
  if (run<=113146) return true ;  // down (except 11346-111351, off)
  if (run<=114287) return false ; // up
  if (run<=115464) return true ;  // down
  if (run<=117103) return false ; // up
  if (run<=118286) return true ;  // down
  if (run<=123803) return false ; // up
  if (run<=125115) return true ;  // down
  if (run<=126680) return false ; // up
  if (run<=128110) return true ;  // down
  if (run<=129978) return false ; // up
  if (run<=130861) return true ;  // down
  if (run<=131940) return false ; // up
  if (run<=133587) return true ;  // down
  if (run<=133785) return false ; // up
  if (run<=134455) return true ;  // down
  else std::cout << "wrong run " << run << std::endl ;
  return false ;
}
// ####################################################################################################
inline bool up(int run){ return !down(run);}
#endif // ROOT_WEIGHTS_H
