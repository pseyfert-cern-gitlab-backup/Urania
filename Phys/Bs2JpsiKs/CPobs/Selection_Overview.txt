
== Overview ==
==============

(1) Trim down Tuples: 
- Run './slimtuple.exe <tuple>' for all desired tuples
- We need at least: LHCb (NN), LHCbPrescaled (MINIP cut), SigBd (mass + NN), SigKstarWM (mass + NN)
(2) Fit Mass shape for SigBd and SigKstarWM MC (cut on PassLoose):
- Freeze CB tails and Bd->JpsiK* parameters
(3) Fit Mass shape for LHCb (cut on PassLoose):
- Freeze signal model for associated LHCbPrescaled fit
(4) Optimise Cut on J_psi_1S_MINIPCHI2_OtherPVs using LHCbPrescaled
(5) Specify mass parameters in JpsiKsPdf.cpp and cut values in IB2JpsiX.h
(6) Get first round of sWeights:
- Run './weighting.exe <tuple> Kstar' for all desired tuples
(7) Train (and optimise) Kstar eliminating neural net:
- Run './teacher.exe SigBd Kstar 3'
- Run './expert.exe <tuple> Kstar'
(8) Get second round of sWeights:
- Optionally: Fit Mass shape of SigBd again to update CB tails
- Run './weighting.exe <tuple> Unbiased 0 <[int] cut> -100'
(9) Train (and optimise) main neural net:
- Run './teacher.exe LHCbAll Unbiased <tracktype> <preprocessing flag>'
- Run './expert.exe LHCbAll Unbiased'
- Run './weighting.exe LHCbAll Second 1' [Optional: gives best S/Sqrt(S+B)]
(10) Get neural net output:
- Run './expert.exe <tuple> Unbiased'