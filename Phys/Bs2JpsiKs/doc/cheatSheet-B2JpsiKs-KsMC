//##############################################################################
// Look at Ks
//##############################################################################
// MC
TFile* fileS = new TFile("~/work/Kristof/B2JpsiKs/B2JpsiKs-338-SigMC11.root")
TFile* file0 = new TFile("~/work/Kristof/NeuroBayesTuples/B2JpsiKs-Weights-1-random-SigMC.root")
TTree* MC = (TTree*)fileS->Get("BetaSBd2JpsiKsDetachedLine_TupleMC/DecayTree")
TTree* Sig = (TTree*)file0->Get("WeightTree")
MC->AddFriend(Sig)
MC->Draw("B_FullFit_M[0]:mass","abs(mass-5300)<300") /// must be diagonal

// Data
TFile* fileW = new TFile("~/work/Kristof/NeuroBayesTuples/B2JpsiKs-Weights-1-random.root")
TTree* SigW = (TTree*)fileW->Get("WeightTree")
SigW->Show(0)
TChain * C = new TChain("BetaSBd2JpsiKsDetachedLine_Tuple/DecayTree","");
TString dir("~/work/Kristof/B2JpsiKs/")
C->Add(dir+TString("B2JpsiKs-S17-283.root/BetaSBd2JpsiKsDetachedLine_Tuple/DecayTree"));
C->AddFriend(SigW)
C->Draw("B_FullFit_M[0]:mass","abs(mass-5300)<300") /// must be diagonal

//gStyle->SetCanvasDefW(660);
RooPlot* rp = (RooPlot*)file0->Get("ExtendedMassPlotNoParam")
rp->GetYaxis()->SetTitleOffset(1.55)
rp->Draw()
png("MC11-massfit")
RooPlot* rpd = (RooPlot*)fileW->Get("ExtendedMassPlotNoParam")
rpd->GetYaxis()->SetTitleOffset(1.55)
rpd->Draw()
png("S17-massfit")

char* bdW = "sweightB*(sweight>-5)*(abs(mass-5280)<30)"
char* bdWLL = "sweightB*(sweight>-5)*(abs(mass-5280)<30)*(piplus_TRACK_Type==3)"
char* bdWDD = "sweightB*(sweight>-5)*(abs(mass-5280)<30)*(piplus_TRACK_Type==5)"

TH2D* pipMCp = Make2DPlot("pipMCp","pi p_{x}",50,-2000.,2000.,"pi p_{y}",50,-2000.,2000.)
TH2D* pipDp  = Make2DPlot("pipDp", "pi p_{x}",50,-2000.,2000.,"pi p_{y}",50,-2000.,2000.)

//-----------------------------------------------------------------------------------------
// low px

// low z
char* bdWDDlz = "sweightB*(sweight>-5)*(abs(mass-5280)<30)*(piplus_TRACK_Type==5)*(KS0_ENDVERTEX_Z<600)"
char* bdWLLlz = "sweightB*(sweight>-5)*(abs(mass-5280)<30)*(piplus_TRACK_Type==3)*(KS0_ENDVERTEX_Z<600)"
SandB(C,MC,"KS0_PX","","",bdWLLlz,"NMR","",-4000,4000) // LL is the same
SandB(C,MC,"KS0_PX","","",bdWDDlz,"NMR","",-4000,4000) // DD misses all KS at 0 px
SandB(C,MC,"KS0_PY","","",bdWDDlz,"NMR","",-4000,4000) // DD misses all KS at 0 py
SandB(C,MC,"KS0_PZ","","",bdWDDlz,"NMR","",0,40000) // 

SandB(C,MC,"atan(KS0_PX/KS0_PZ)","","",bdWDDlz,"NMR","",-0.3,0.3) 
SandB(C,MC,"atan(KS0_PY/KS0_PZ)","","",bdWDDlz,"NMR","",-0.3,0.3) 
SandB(C,MC,"atan(KS0_PT/KS0_PZ)","","",bdWDDlz,"NMR","",-0,0.3) // there's nothing below 0.06
SandB(C,MC,"sqrt(KS0_ENDVERTEX_X**2+KS0_ENDVERTEX_Y**2)","","",bdWDDlz,"NMR","",0,100) // there's not much below 20

SandB(C,MC,"atan(KS0_PT/KS0_PZ)","","",bdWDDlz,"NMR","Data and MC DD Ks0 theta 1",-0,0.3) // there's nothing below 0.06
SandB(C,MC,"atan(KS0_PT/KS0_PZ)","","",bdWLLlz,"NMR","Data and MC LL Ks0 theta 1",-0,0.3) // there's nothing below 0.06

// low theta
char* bdWDDlth = "sweightB*(sweight>-5)*(abs(mass-5280)<30)*(piplus_TRACK_Type==5)*(KS0_PT/KS0_PZ<0.06)"
char* bdWLLlth = "sweightB*(sweight>-5)*(abs(mass-5280)<30)*(piplus_TRACK_Type==3)*(KS0_PT/KS0_PZ<0.06)"
char* bdWlth = "sweightB*(sweight>-5)*(abs(mass-5280)<30)*(piplus_TRACK_Type==3)*(KS0_PT/KS0_PZ<0.06)"
char* bdWDDlthp = "sweightB*(sweight>-5)*(abs(mass-5280)<30)*(piplus_TRACK_Type==5)*(KS0_PT/KS0_PZ<0.06)*(KS0_P<20000)"
char* bdWLLlthp = "sweightB*(sweight>-5)*(abs(mass-5280)<30)*(piplus_TRACK_Type==3)*(KS0_PT/KS0_PZ<0.06)*(KS0_P<20000)"
char* bdWlthp = "sweightB*(sweight>-5)*(abs(mass-5280)<30)*(KS0_PT/KS0_PZ<0.06)*(KS0_P<20000)"


SandB(C,MC,"KS0_ENDVERTEX_Z","","",bdWDDlth,"NMR","",0,1000) // nothing beetween 200-600
// low theta and z
char* bdWlthz = "sweightB*(sweight>-5)*(abs(mass-5280)<30)*(KS0_ENDVERTEX_Z<600)*(KS0_PT/KS0_PZ<0.06)"
char* bdWDDlthz = "sweightB*(sweight>-5)*(abs(mass-5280)<30)*(KS0_ENDVERTEX_Z<600)*(KS0_PT/KS0_PZ<0.06)*(piplus_TRACK_Type==5)"
char* bdWLLlthz = "sweightB*(sweight>-5)*(abs(mass-5280)<30)*(KS0_ENDVERTEX_Z<600)*(KS0_PT/KS0_PZ<0.06)*(piplus_TRACK_Type==3)"
// low theta and z and p
char* bdWlthzp = "sweightB*(sweight>-5)*(abs(mass-5280)<30)*(KS0_ENDVERTEX_Z<600)*(KS0_PT/KS0_PZ<0.06)*(KS0_P<20000)"
char* bdWDDlthzp = "sweightB*(sweight>-5)*(abs(mass-5280)<30)*(KS0_ENDVERTEX_Z<600)*(KS0_PT/KS0_PZ<0.06)*(piplus_TRACK_Type==5)*(KS0_P<20000)"
char* bdWLLlthzp = "sweightB*(sweight>-5)*(abs(mass-5280)<30)*(KS0_ENDVERTEX_Z<600)*(KS0_PT/KS0_PZ<0.06)*(piplus_TRACK_Type==3)*(KS0_P<20000)"

SandB(C,0,"GpsMonth",bdW,bdWDDlthz,"","NMI","")
TwoProfile(C,MC,"GpsMonth+1","(KS0_ENDVERTEX_Z<600) && (KS0_PT/KS0_PZ<0.06) && (KS0_P<20000)",bdWDD,bdWDD,"1","Rp0","KS0 Month",0.5,11.5,11)

// not same version of Tuple
gPad->SetLogy(0)
TH1D DLLVelo("DLLVelo","Number of velo Tracks",100,0,300)
TH1D DDDVelo("DDDVelo","Number of velo Tracks",100,0,300)
TH1D MCLLVelo("MCLLVelo","Number of velo Tracks",100,0,300)
TH1D MCDDVelo("MCDDVelo","Number of velo Tracks",100,0,300)

C->Draw("veloTracks >> DLLVelo", bdWLL)
C->Draw("veloTracks >> DDDVelo", bdWDD)
MC->Draw("nVeloTracks >> MCLLVelo", bdWLL)
MC->Draw("nVeloTracks >> MCDDVelo", bdWDD)

NiceRooPlot(DLLVelo,MCLLVelo,"N")
png("Data and MC LL VeloTracks")
NiceRooPlot(DDDVelo,MCDDVelo,"N")
png("Data and MC DD VeloTracks")

// in the ominous region
C->Draw("veloTracks >> DLLVelo", bdWLLlthzp)
C->Draw("veloTracks >> DDDVelo", bdWDDlthzp)
MC->Draw("nVeloTracks >> MCLLVelo", bdWLLlthzp)
MC->Draw("nVeloTracks >> MCDDVelo", bdWDDlthzp)

NiceRooPlot(DLLVelo,MCLLVelo,"N")
png("Data and MC LL VeloTracks strange region")
NiceRooPlot(DDDVelo,MCDDVelo,"N")
png("Data and MC DD VeloTracks strange region")

// Profile
//TwoProfile(C,0,"Velo Tracks","(KS0_ENDVERTEX_Z<600) && (KS0_PT/KS0_PZ<0.06) && (KS0_P<20000)",bdWDD,bdWDD,"1","Rp0","",0,300,30)
TProfile DPhSpEff("DPhSpEff","veloTracks",30,0,300,0,1)
TProfile MCPhSpEff("MCPhSpEff","veloTracks",30,0,300,0,1)
C->Draw("(piplus_TRACK_Type==5):veloTracks >> DPhSpEff", bdWlthzp)
MC->Draw("(piplus_TRACK_Type==5):nVeloTracks >> MCPhSpEff", bdWlthzp)

TString func("pol1")
DPhSpEff.GetYaxis()->SetTitle("Fraction");
DPhSpEff.GetXaxis()->SetTitle("Velo Tracks");
DPhSpEff.Fit(func)
MCPhSpEff.Fit(func)
DPhSpEff.Draw()
DrawOnTop(&DPhSpEff,20,4,func);
DrawOnTop(&MCPhSpEff,21,2,func);
png("Fraction of DD Ks vs Velo Tracks")

//#########################################################################
//follow Px
SandB(C,MC,"KS0_PX","","",bdWDD,"NMR","Data and MC DD Ks0 PX",-4000,4000,80)
char* bdWLLpx = "sweightB*(sweight>-5)*(abs(mass-5280)<30)*abs(KS0_PX<1000)*(piplus_TRACK_Type==3)"
char* bdWDDpx = "sweightB*(sweight>-5)*(abs(mass-5280)<30)*abs(KS0_PX<1000)*(piplus_TRACK_Type==5)"
SandB(C,MC,"atan(KS0_PX/KS0_PY)","","",bdWDDpx,"NMR","Data and MC DD Ks0 Low Px",-1.6,1.6)
SandB(C,MC,"KS0_ENDVERTEX_Z","","",bdWDDpx,"NMR","Data and MC DD Ks0",-0,2500)
-> get to the same place

//#########################################################################
SandB(C,MC,"piplus_TRACK_Type==3","","",bdWlthz,"NMI","") // all DD are gone
SandB(C,MC,"KS0_ENDVERTEX_Z","","",bdWLLlthz,"NM","") // looks the same
SandB(C,MC,"abs(piplus_PX/piplus_PZ)","","",bdWLLlthz,"NMR","",0,0.1,50) // looks the same
SandB(C,MC,"abs(piplus_PY/piplus_PZ)","","",bdWLLlthz,"NMR","",0,0.1,50) // looks the same
SandB(C,MC,"sqrt(KS0_ENDVERTEX_X**2+KS0_ENDVERTEX_Y**2)","","",bdWLLlthz,"NMR","",0,30,60) // aha!
// in LL data goes down to r=0, MC does not. Why?

char* bdWLLzoom = "sweightB*(sweight>-5)*(abs(mass-5280)<30)*(abs(KS0_ENDVERTEX_Z-400)<200)*(KS0_PT/KS0_PZ<0.06)*(piplus_TRACK_Type==3)"
char* bdWDDzoom = "sweightB*(sweight>-5)*(abs(mass-5280)<30)*(abs(KS0_ENDVERTEX_Z-400)<200)*(KS0_PT/KS0_PZ<0.06)*(piplus_TRACK_Type==5)"
SandB(C,MC,"piplus_PY","","",bdWLLzoom,"NM","") // 
SandB(C,MC,"atan(piplus_PT/piplus_PZ)","","",bdWLLzoom,"NRM","",0,0.1,40) // theta lower in data
SandB(C,MC,"KS0_PT","","",bdWDDzoom,"NMR","Data and MC DD Ks0 PT 2",0,4000,40) // Data have much lower PT
SandB(C,MC,"KS0_PT","","",bdWLLzoom,"NMR","Data and MC LL Ks0 PT 2",0,4000,40) // Data have much lower PT
SandB(C,MC,"KS0_P","","",bdWDDzoom,"NMR","Data and MC DD Ks0 P 2",0,80000,40) // Data have much lower PT
SandB(C,MC,"KS0_P","","",bdWLLzoom,"NMR","Data and MC LL Ks0 P 2",0,80000,40) // Data have much lower PT

char* bdWLLlowp = "sweightB*(sweight>-5)*(abs(mass-5280)<30)*(abs(KS0_ENDVERTEX_Z-400)<200)*(KS0_PT/KS0_PZ<0.06)*(piplus_TRACK_Type==3)*(KS0_P<20000)"
char* bdWDDlowp = "sweightB*(sweight>-5)*(abs(mass-5280)<30)*(abs(KS0_ENDVERTEX_Z-400)<200)*(KS0_PT/KS0_PZ<0.06)*(piplus_TRACK_Type==5)*(KS0_P<20000)"

// look in the data for features of these DD Ks with 200<vertex<600
SandB(C,C,"piplus_PT",bdWLLlowpt,bdWDDlowp,"","NMR","Data LL and DD pip PT 3",0,800,40) // 
SandB(C,C,"piplus_MINIPCHI2",bdWLLlowpt,bdWDDlowpt,"","NML","Data LL and DD pip IPchi2 3",0,4,40) // 

// what would happen if I required PT>250 for DD pions? There's also a cut at IPchi2>9 for LL and IPchi2>4 for DD


//-----------------------------------------------------------------------------------------
MC->Draw("piplus_PY:piplus_PX >> pipMCp",bdWDD)
C->Draw("piplus_PY:piplus_PX >> pipDp",bdWDD)
MC->Draw("piminus_PY:piminus_PX >> +pipMCp",bdWDD)
C->Draw("piminus_PY:piminus_PX >> +pipDp",bdWDD)
gPad->SetLogz()
pipDp->Draw("COLZ")
pipMCp->Draw("COLZ")

TH1* pipRp = Divide(pipDp,pipMCp,"U")
gPad->SetLogz(0)
pipRp->Draw("COLZ")


//-----------------------------------------------------------------------------------------
gPad->SetLogy(0)
SandB(C,MC,"mass","","",bdW,"NM","Data and MC Mass")
SandB(C,MC,"mass","","",bdWLL,"NM","Data and MC LL Mass")
SandB(C,MC,"mass","","",bdWDD,"NM","Data and MC DD Mass")
gPad->SetLogy(0)
SandB(C,MC,"piplus_TRACK_Type==3","","",bdW,"NI","Data and MC Ks isLong")


SandB(C,MC,"B_P","","",bdWLL,"NMRL","Data and MC LL B P",20000,1000000)
SandB(C,MC,"B_P","","",bdWDD,"NMLR","Data and MC DD B P",20000,1000000)
SandB(C,MC,"B_PT","","",bdWLL,"NMLR","Data and MC LL B PT",100,50000)
SandB(C,MC,"B_PT","","",bdWDD,"NMRL","Data and MC DD B PT",100,50000)

SandB(C,MC,"atan(B_PT/B_PZ)","","",bdWLL,"NMR","Data and MC LL B theta",0,0.3,60)
SandB(C,MC,"-log(B_PT/B_PZ/2)","","",bdWLL,"NMR","Data and MC LL B eta",2,8,60)
SandB(C,MC,"atan(B_PX/B_PY)","","",bdWLL,"NMR","Data and MC LL B phi",-1.58,1.58,50)
SandB(C,MC,"atan(B_PT/B_PZ)","","",bdWDD,"NMR","Data and MC DD B theta",0,0.3,60)
SandB(C,MC,"-log(B_PT/B_PZ/2)","","",bdWDD,"NMR","Data and MC DD B eta",2,8,60)
SandB(C,MC,"atan(B_PX/B_PY)","","",bdWDD,"NMR","Data and MC DD B phi",-1.58,1.58,50)

SandB(C,MC,"KS0_MM","","",bdWDD,"NMR","Data and MC DD Ks0 Mass",470,530)
SandB(C,MC,"KS0_MM","","",bdWLL,"NMR","Data and MC LL Ks0 Mass",470,530)
SandB(C,MC,"abs(atan(KS0_PX/KS0_PY))","","",bdWDD,"NMR","Data and MC DD Ks0 phi2",0,1.58,30)
SandB(C,MC,"abs(atan(KS0_PX/KS0_PY))","","",bdWLL,"NMR","Data and MC LL Ks0 phi2",0,1.58,30)
SandB(C,MC,"asin(KS0_PT/KS0_P)","","",bdWDD,"NMR","Data and MC DD Ks0 theta",0,0.3,60)
SandB(C,MC,"asin(KS0_PT/KS0_P)","","",bdWLL,"NMR","Data and MC LL Ks0 theta",0,0.3,60)
SandB(C,MC,"atan(KS0_PX/KS0_PY)","","",bdWDD,"NMR","Data and MC DD Ks0 phi",-1.58,1.58,50)
SandB(C,MC,"atan(KS0_PX/KS0_PY)","","",bdWLL,"NMR","Data and MC LL Ks0 phi",-1.58,1.58,50)
SandB(C,MC,"B_FullFit_KS0_ctau","","",bdWDD,"NMR","Data and MC DD Ks0 ctau",0,100,50)
SandB(C,MC,"B_FullFit_KS0_ctau","","",bdWLL,"NMR","Data and MC LL Ks0 ctau",0,15,50)
gPad->SetLogy()
SandB(C,MC,"KS0_ENDVERTEX_CHI2","","",bdWDD,"NM","Data and MC DD Ks0 chi2",0,20,50)
SandB(C,MC,"KS0_ENDVERTEX_CHI2","","",bdWLL,"NMR","Data and MC LL Ks0 chi2",0,20,50)
gPad->SetLogy(0)
SandB(C,MC,"KS0_ENDVERTEX_X","","",bdWDD,"NMR","Data and MC DD Ks0 Vx X",-500,500,50)
SandB(C,MC,"KS0_ENDVERTEX_X","","",bdWLL,"NMR","Data and MC LL Ks0 Vx X",-25,25)
SandB(C,MC,"KS0_ENDVERTEX_Y","","",bdWDD,"NMR","Data and MC DD Ks0 Vx Y",-500,500,50)
SandB(C,MC,"KS0_ENDVERTEX_Y","","",bdWLL,"NMR","Data and MC LL Ks0 Vx Y",-25,25)
SandB(C,MC,"KS0_ENDVERTEX_Z","","",bdWDD,"NMR","Data and MC DD Ks0 Vx Z",0,2500,50)
SandB(C,MC,"KS0_ENDVERTEX_Z","","",bdWLL,"NMR","Data and MC LL Ks0 Vx Z",-200,700)
SandB(C,MC,"KS0_P","","",bdWDD,"NMR","Data and MC DD Ks0 P",0,100000,50)
SandB(C,MC,"KS0_P","","",bdWLL,"NMR","Data and MC LL Ks0 P",0,100000,50)
SandB(C,MC,"KS0_PT","","",bdWDD,"NMR","Data and MC DD Ks0 PT",0,5000,50)
SandB(C,MC,"KS0_PT","","",bdWLL,"NMR","Data and MC LL Ks0 PT",0,5000,50)
SandB(C,MC,"KS0_PX","","",bdWDD,"NMR","Data and MC DD Ks0 PX",-4000,4000,80)
SandB(C,MC,"KS0_PX","","",bdWLL,"NMR","Data and MC LL Ks0 PX",-4000,4000,80)
SandB(C,MC,"KS0_PY","","",bdWDD,"NMR","Data and MC DD Ks0 PY",-4000,4000,80)
SandB(C,MC,"KS0_PY","","",bdWLL,"NMR","Data and MC LL Ks0 PY",-4000,4000,80)
SandB(C,MC,"sqrt(KS0_ENDVERTEX_X*KS0_ENDVERTEX_X+KS0_ENDVERTEX_Y*KS0_ENDVERTEX_Y)","","",bdWDD,"NMR","Data and MC DD Ks0 Vx R",0,300,60)
SandB(C,MC,"sqrt(KS0_ENDVERTEX_X*KS0_ENDVERTEX_X+KS0_ENDVERTEX_Y*KS0_ENDVERTEX_Y)","","",bdWLL,"NMR","Data and MC LL Ks0 Vx R",0,30,60)

SandB(C,MC,"abs(atan(piminus_PX/piminus_PY))","","",bdWLL,"NMR","Data and MC LL pim phi2",0,1.58,30)
SandB(C,MC,"abs(atan(piplus_PX/piplus_PY))","","",bdWDD,"NMR","Data and MC DD pip phi2",0,1.58,30)
SandB(C,MC,"abs(atan(piminus_PX/piminus_PY))","","",bdWDD,"NMR","Data and MC DD pim phi2",0,1.58,30)
SandB(C,MC,"abs(atan(piplus_PX/piplus_PY))","","",bdWLL,"NMR","Data and MC LL pip phi2",0,1.58,30)
SandB(C,MC,"asin(piminus_PT/piminus_P)","","",bdWDD,"NMR","Data and MC DD pim theta",0,0.3,60)
SandB(C,MC,"asin(piminus_PT/piminus_P)","","",bdWLL,"NMR","Data and MC LL pim theta",0,0.3,60)
SandB(C,MC,"asin(piplus_PT/piplus_P)","","",bdWDD,"NMR","Data and MC DD pip theta",0,0.3,60)
SandB(C,MC,"asin(piplus_PT/piplus_P)","","",bdWLL,"NMR","Data and MC LL pip theta",0,0.3,60)
SandB(C,MC,"atan(piminus_PX/piminus_PY)","","",bdWDD,"NMR","Data and MC DD pim phi",-1.58,1.58,50)
SandB(C,MC,"atan(piminus_PX/piminus_PY)","","",bdWLL,"NMR","Data and MC LL pim phi",-1.58,1.58,50)
SandB(C,MC,"atan(piminus_PX/piminus_PZ)","","",bdWDD,"NMR","Data and MC DD pim Tx",-0.3,0.3,60)
SandB(C,MC,"atan(piminus_PX/piminus_PZ)","","",bdWLL,"NMR","Data and MC LL pim Tx",-0.3,0.3,60)
SandB(C,MC,"atan(piminus_PY/piminus_PZ)","","",bdWDD,"NMR","Data and MC DD pim Ty",-0.3,0.3,60)
SandB(C,MC,"atan(piminus_PY/piminus_PZ)","","",bdWLL,"NMR","Data and MC LL pim Ty",-0.3,0.3,60)
SandB(C,MC,"atan(piplus_PX/piplus_PY)","","",bdWDD,"NMR","Data and MC DD pip phi",-1.58,1.58,50)
SandB(C,MC,"atan(piplus_PX/piplus_PY)","","",bdWLL,"NMR","Data and MC LL pip phi",-1.58,1.58,50)
SandB(C,MC,"atan(piplus_PX/piplus_PZ)","","",bdWDD,"NMR","Data and MC DD pip Tx",-0.3,0.3,60)
SandB(C,MC,"atan(piplus_PX/piplus_PZ)","","",bdWLL,"NMR","Data and MC LL pip Tx",-0.3,0.3,60)
SandB(C,MC,"atan(piplus_PY/piplus_PZ)","","",bdWDD,"NMR","Data and MC DD pip Ty",-0.3,0.3,60)
SandB(C,MC,"atan(piplus_PY/piplus_PZ)","","",bdWLL,"NMR","Data and MC LL pip Ty",-0.3,0.3,60)
SandB(C,MC,"piminus_MINIPCHI2","","",bdWDD,"NML","Data and MC DD pim IPchi2")
SandB(C,MC,"piminus_MINIPCHI2","","",bdWLL,"NML","Data and MC LL pim IPchi2")
SandB(C,MC,"piminus_P","","",bdWDD,"NMR","Data and MC DD pim P",0,40000,80)
SandB(C,MC,"piminus_P","","",bdWLL,"NMR","Data and MC LL pim P",0,40000,80)
SandB(C,MC,"piminus_PT","","",bdWDD,"NMR","Data and MC DD pim PT",0,4000,80)
SandB(C,MC,"piminus_PT","","",bdWLL,"NMR","Data and MC LL pim PT",0,4000,80)
SandB(C,MC,"piminus_PX","","",bdWDD,"NMR","Data and MC DD pim PX",-4000,4000,80)
SandB(C,MC,"piminus_PX","","",bdWLL,"NMR","Data and MC LL pim PX",-4000,4000,80)
SandB(C,MC,"piminus_PY","","",bdWDD,"NMR","Data and MC DD pim PY",-4000,4000,80)
SandB(C,MC,"piminus_PY","","",bdWLL,"NMR","Data and MC LL pim PY",-4000,4000,80)
SandB(C,MC,"piminus_TRACK_CHI2NDOF","","",bdWDD,"NMR","Data and MC DD pim Tk Chi2",0,5)
SandB(C,MC,"piminus_TRACK_CHI2NDOF","","",bdWLL,"NMR","Data and MC LL pim Tk Chi2",0,5)
SandB(C,MC,"piplus_MINIPCHI2","","",bdWDD,"NML","Data and MC DD pip IPchi2")
SandB(C,MC,"piplus_MINIPCHI2","","",bdWLL,"NML","Data and MC LL pip IPchi2"
SandB(C,MC,"piplus_P","","",bdWDD,"NMR","Data and MC DD pip P",0,40000,80)
SandB(C,MC,"piplus_P","","",bdWLL,"NMR","Data and MC LL pip P",0,40000,80)
SandB(C,MC,"piplus_PT","","",bdWDD,"NMR","Data and MC DD pip PT",0,4000,80)
SandB(C,MC,"piplus_PT","","",bdWLL,"NMR","Data and MC LL pip PT",0,4000,80)
SandB(C,MC,"piplus_PX","","",bdWDD,"NMR","Data and MC DD pip PX",-4000,4000,80)
SandB(C,MC,"piplus_PX","","",bdWLL,"NMR","Data and MC LL pip PX",-4000,4000,80)
SandB(C,MC,"piplus_PY","","",bdWDD,"NMR","Data and MC DD pip PY",-4000,4000,80)
SandB(C,MC,"piplus_PY","","",bdWLL,"NMR","Data and MC LL pip PY",-4000,4000,80)
SandB(C,MC,"piplus_TRACK_CHI2NDOF","","",bdWDD,"NMR","Data and MC DD pip Tk Chi2",0,5)
SandB(C,MC,"piplus_TRACK_CHI2NDOF","","",bdWLL,"NMR","Data and MC LL pip Tk Chi2",0,5)
SandB(C,MC,"piplus_TRACK_Type==3","","",bdW,"NI","Data and MC Ks isLong")

// data MC LL vs DD
SandB(MC,MC,"B_PT",bdWLL,bdWDD,"","NMLR","MC LL and DD B PT",100,50000)
SandB(C,C,"B_PT",bdWLL,bdWDD,"","NMRL","Data LL and DD B PT",100,50000)
SandB(MC,MC,"B_P",bdWLL,bdWDD,"","NMLR","MC LL and DD B P",20000,1000000)
SandB(C,C,"B_P",bdWLL,bdWDD,"","NMRL","Data LL and DD B P",20000,1000000)
SandB(MC,MC,"KS0_PT",bdWLL,bdWDD,"","NMLR","MC LL and DD Ks0 PT",200,20000,50)
SandB(C,C,"KS0_PT",bdWLL,bdWDD,"","NMLR","Data LL and DD Ks0 PT",200,20000,50)
SandB(C,C,"piplus_P",bdWLL,bdWDD,"","NMLR","Data LL and DD pip P",2000,100000,50)
SandB(MC,MC,"piplus_P",bdWLL,bdWDD,"","NMLR","MC LL and DD pip P",2000,100000,50)
SandB(C,C,"piplus_PT",bdWLL,bdWDD,"","NMLR","Data LL and DD pip PT",100,10000,50)
SandB(MC,MC,"piplus_PT",bdWLL,bdWDD,"","NMLR","MC LL and DD pip PT",100,10000,50)
SandB(C,C,"KS0_PT",bdWLL,bdWDD,"","NMLR","Data LL and DD Ks0 PT",200,20000,50)
SandB(MC,MC,"KS0_PT",bdWLL,bdWDD,"","NMLR","MC LL and DD Ks0 PT",200,20000,50)

// fix it
char* bdWDDfid = "sweightB*(sweight>-5)*(abs(mass-5280)<30)*(piplus_TRACK_Type==5)*(KS0_ENDVERTEX_Z>600)"
SandB(C,MC,"KS0_MM","","",bdWDDfid,"NMR","Data and MC DD Ks0 Mass",470,530)
SandB(C,MC,"KS0_MM","","",bdWLL,"NMR","Data and MC LL fid Ks0 Mass",470,530)
SandB(C,MC,"abs(atan(KS0_PX/KS0_PY))","","",bdWDDfid,"NMR","Data and MC DD fid Ks0 phi2",0,1.58,30)
SandB(C,MC,"abs(atan(KS0_PX/KS0_PY))","","",bdWLL,"NMR","Data and MC LL fid Ks0 phi2",0,1.58,30)
SandB(C,MC,"asin(KS0_PT/KS0_P)","","",bdWDDfid,"NMR","Data and MC DD fid Ks0 theta",0,0.3,60)
SandB(C,MC,"asin(KS0_PT/KS0_P)","","",bdWLL,"NMR","Data and MC LL fid Ks0 theta",0,0.3,60)
SandB(C,MC,"atan(KS0_PX/KS0_PY)","","",bdWDDfid,"NMR","Data and MC DD fid Ks0 phi",-1.58,1.58,50)
SandB(C,MC,"atan(KS0_PX/KS0_PY)","","",bdWLL,"NMR","Data and MC LL fid Ks0 phi",-1.58,1.58,50)
SandB(C,MC,"B_FullFit_KS0_ctau","","",bdWDDfid,"NMR","Data and MC DD fid Ks0 ctau",0,100,50)
SandB(C,MC,"B_FullFit_KS0_ctau","","",bdWLL,"NMR","Data and MC LL fid Ks0 ctau",0,15,50)
gPad->SetLogy()
SandB(C,MC,"KS0_ENDVERTEX_CHI2","","",bdWDDfid,"NM","Data and MC DD fid Ks0 chi2",0,20,50)
SandB(C,MC,"KS0_ENDVERTEX_CHI2","","",bdWLL,"NMR","Data and MC LL fid Ks0 chi2",0,20,50)
gPad->SetLogy(0)
SandB(C,MC,"KS0_ENDVERTEX_X","","",bdWDDfid,"NMR","Data and MC DD fid Ks0 Vx X",-500,500,50)
SandB(C,MC,"KS0_ENDVERTEX_X","","",bdWLL,"NMR","Data and MC LL fid Ks0 Vx X",-25,25)
SandB(C,MC,"KS0_ENDVERTEX_Y","","",bdWDDfid,"NMR","Data and MC DD fid Ks0 Vx Y",-500,500,50)
SandB(C,MC,"KS0_ENDVERTEX_Y","","",bdWLL,"NMR","Data and MC LL fid Ks0 Vx Y",-25,25)
SandB(C,MC,"KS0_ENDVERTEX_Z","","",bdWDDfid,"NMR","Data and MC DD fid Ks0 Vx Z",0,2500,50)
SandB(C,MC,"KS0_ENDVERTEX_Z","","",bdWLL,"NMR","Data and MC LL fid Ks0 Vx Z",-200,700)
SandB(C,MC,"KS0_P","","",bdWDDfid,"NMR","Data and MC DD fid Ks0 P",0,100000,50)
SandB(C,MC,"KS0_P","","",bdWLL,"NMR","Data and MC LL fid Ks0 P",0,100000,50)
SandB(C,MC,"KS0_PT","","",bdWDDfid,"NMR","Data and MC DD fid Ks0 PT",0,5000,50)
SandB(C,MC,"KS0_PT","","",bdWLL,"NMR","Data and MC LL fid Ks0 PT",0,5000,50)
SandB(C,MC,"KS0_PX","","",bdWDDfid,"NMR","Data and MC DD fid Ks0 PX",-4000,4000,80)
SandB(C,MC,"KS0_PX","","",bdWLL,"NMR","Data and MC LL fid Ks0 PX",-4000,4000,80)
SandB(C,MC,"KS0_PY","","",bdWDDfid,"NMR","Data and MC DD fid Ks0 PY",-4000,4000,80)
SandB(C,MC,"KS0_PY","","",bdWLL,"NMR","Data and MC LL fid Ks0 PY",-4000,4000,80)
SandB(C,MC,"sqrt(KS0_ENDVERTEX_X*KS0_ENDVERTEX_X+KS0_ENDVERTEX_Y*KS0_ENDVERTEX_Y)","","",bdWDDfid,"NMR","Data and MC DD fid Ks0 Vx R",0,300,60)
SandB(C,MC,"sqrt(KS0_ENDVERTEX_X*KS0_ENDVERTEX_X+KS0_ENDVERTEX_Y*KS0_ENDVERTEX_Y)","","",bdWLL,"NMR","Data and MC LL fid Ks0 Vx R",0,30,60)
SandB(C,MC,"piplus_TRACK_CHI2NDOF","","",bdWDDfid,"NMR","Data and MC DD fid pip Tk Chi2",0,5)
SandB(C,MC,"piplus_TRACK_CHI2NDOF","","",bdWLL,"NMR","Data and MC LL fid pip Tk Chi2",0,5)
