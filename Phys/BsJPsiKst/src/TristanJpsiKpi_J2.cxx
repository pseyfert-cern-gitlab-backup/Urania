/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by Urania using RooClassFactory               *
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "TristanJpsiKpi_J2.h" 
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 

ClassImp(TristanJpsiKpi_J2) 

 TristanJpsiKpi_J2::TristanJpsiKpi_J2(const char *name, const char *title, 
                        RooAbsReal& _helcosthetaK,
                        RooAbsReal& _helcosthetaL,
                        RooAbsReal& _helphi,
                        RooAbsReal& _As2,
                        RooAbsReal& _fD,
                        RooAbsReal& _fL,
                        RooAbsReal& _fpa,
                        RooAbsReal& _f2L,
                        RooAbsReal& _f2pa,
                        RooAbsReal& _delta_2pe,
                        RooAbsReal& _delta_2pa,
                        RooAbsReal& _delta_20,
                        RooAbsReal& _delta_pa,
                        RooAbsReal& _delta_pe,
                        RooAbsReal& _delta_S,
                        RooAbsReal& _Cfact_21,
                        RooAbsReal& _Cfact_20,
                        RooAbsReal& _Cfact_10,
                        RooAbsReal& _w_A_SA_2pa,
                        RooAbsReal& _w_A_SA_20,
                        RooAbsReal& _w_2A_20,
                        RooAbsReal& _w_A_0A_2pe,
                        RooAbsReal& _w_A_SA_pa,
                        RooAbsReal& _w_A_SA_0,
                        RooAbsReal& _w_A_SA_pe,
                        RooAbsReal& _w_A_paA_pe,
                        RooAbsReal& _w_2A_2pe,
                        RooAbsReal& _w_A_0A_pe,
                        RooAbsReal& _w_A_S2,
                        RooAbsReal& _w_A_2paA_pe,
                        RooAbsReal& _w_A_SA_2pe,
                        RooAbsReal& _w_A_0A_pa,
                        RooAbsReal& _w_A_paA_2pa,
                        RooAbsReal& _w_A_2peA_20,
                        RooAbsReal& _w_A_02,
                        RooAbsReal& _w_A_2peA_2pa,
                        RooAbsReal& _w_2A_pa,
                        RooAbsReal& _w_A_0A_2pa,
                        RooAbsReal& _w_A_20A_pe,
                        RooAbsReal& _w_A_20A_2pa,
                        RooAbsReal& _w_A_0A_20,
                        RooAbsReal& _w_A_2peA_pa,
                        RooAbsReal& _w_A_20A_pa,
                        RooAbsReal& _w_A_2peA_pe,
                        RooAbsReal& _w_2A_2pa,
                        RooAbsReal& _w_2A_pe) :
   RooAbsPdf(name,title), 
   helcosthetaK("helcosthetaK","helcosthetaK",this,_helcosthetaK),
   helcosthetaL("helcosthetaL","helcosthetaL",this,_helcosthetaL),
   helphi("helphi","helphi",this,_helphi),
   As2("As2","As2",this,_As2),
   fD("fD","fD",this,_fD),
   fL("fL","fL",this,_fL),
   fpa("fpa","fpa",this,_fpa),
   f2L("f2L","f2L",this,_f2L),
   f2pa("f2pa","f2pa",this,_f2pa),
   delta_2pe("delta_2pe","delta_2pe",this,_delta_2pe),
   delta_2pa("delta_2pa","delta_2pa",this,_delta_2pa),
   delta_20("delta_20","delta_20",this,_delta_20),
   delta_pa("delta_pa","delta_pa",this,_delta_pa),
   delta_pe("delta_pe","delta_pe",this,_delta_pe),
   delta_S("delta_S","delta_S",this,_delta_S),
   Cfact_21("Cfact_21","Cfact_21",this,_Cfact_21),
   Cfact_20("Cfact_20","Cfact_20",this,_Cfact_20),
   Cfact_10("Cfact_10","Cfact_10",this,_Cfact_10),
   w_A_SA_2pa("w_A_SA_2pa","w_A_SA_2pa",this,_w_A_SA_2pa),
   w_A_SA_20("w_A_SA_20","w_A_SA_20",this,_w_A_SA_20),
   w_2A_20("w_2A_20","w_2A_20",this,_w_2A_20),
   w_A_0A_2pe("w_A_0A_2pe","w_A_0A_2pe",this,_w_A_0A_2pe),
   w_A_SA_pa("w_A_SA_pa","w_A_SA_pa",this,_w_A_SA_pa),
   w_A_SA_0("w_A_SA_0","w_A_SA_0",this,_w_A_SA_0),
   w_A_SA_pe("w_A_SA_pe","w_A_SA_pe",this,_w_A_SA_pe),
   w_A_paA_pe("w_A_paA_pe","w_A_paA_pe",this,_w_A_paA_pe),
   w_2A_2pe("w_2A_2pe","w_2A_2pe",this,_w_2A_2pe),
   w_A_0A_pe("w_A_0A_pe","w_A_0A_pe",this,_w_A_0A_pe),
   w_A_S2("w_A_S2","w_A_S2",this,_w_A_S2),
   w_A_2paA_pe("w_A_2paA_pe","w_A_2paA_pe",this,_w_A_2paA_pe),
   w_A_SA_2pe("w_A_SA_2pe","w_A_SA_2pe",this,_w_A_SA_2pe),
   w_A_0A_pa("w_A_0A_pa","w_A_0A_pa",this,_w_A_0A_pa),
   w_A_paA_2pa("w_A_paA_2pa","w_A_paA_2pa",this,_w_A_paA_2pa),
   w_A_2peA_20("w_A_2peA_20","w_A_2peA_20",this,_w_A_2peA_20),
   w_A_02("w_A_02","w_A_02",this,_w_A_02),
   w_A_2peA_2pa("w_A_2peA_2pa","w_A_2peA_2pa",this,_w_A_2peA_2pa),
   w_2A_pa("w_2A_pa","w_2A_pa",this,_w_2A_pa),
   w_A_0A_2pa("w_A_0A_2pa","w_A_0A_2pa",this,_w_A_0A_2pa),
   w_A_20A_pe("w_A_20A_pe","w_A_20A_pe",this,_w_A_20A_pe),
   w_A_20A_2pa("w_A_20A_2pa","w_A_20A_2pa",this,_w_A_20A_2pa),
   w_A_0A_20("w_A_0A_20","w_A_0A_20",this,_w_A_0A_20),
   w_A_2peA_pa("w_A_2peA_pa","w_A_2peA_pa",this,_w_A_2peA_pa),
   w_A_20A_pa("w_A_20A_pa","w_A_20A_pa",this,_w_A_20A_pa),
   w_A_2peA_pe("w_A_2peA_pe","w_A_2peA_pe",this,_w_A_2peA_pe),
   w_2A_2pa("w_2A_2pa","w_2A_2pa",this,_w_2A_2pa),
   w_2A_pe("w_2A_pe","w_2A_pe",this,_w_2A_pe)
 { 
 } 


 TristanJpsiKpi_J2::TristanJpsiKpi_J2(const TristanJpsiKpi_J2& other, const char* name) :  
   RooAbsPdf(other,name), 
   helcosthetaK("helcosthetaK",this,other.helcosthetaK),
   helcosthetaL("helcosthetaL",this,other.helcosthetaL),
   helphi("helphi",this,other.helphi),
   As2("As2",this,other.As2),
   fD("fD",this,other.fD),
   fL("fL",this,other.fL),
   fpa("fpa",this,other.fpa),
   f2L("f2L",this,other.f2L),
   f2pa("f2pa",this,other.f2pa),
   delta_2pe("delta_2pe",this,other.delta_2pe),
   delta_2pa("delta_2pa",this,other.delta_2pa),
   delta_20("delta_20",this,other.delta_20),
   delta_pa("delta_pa",this,other.delta_pa),
   delta_pe("delta_pe",this,other.delta_pe),
   delta_S("delta_S",this,other.delta_S),
   Cfact_21("Cfact_21",this,other.Cfact_21),
   Cfact_20("Cfact_20",this,other.Cfact_20),
   Cfact_10("Cfact_10",this,other.Cfact_10),
   w_A_SA_2pa("w_A_SA_2pa",this,other.w_A_SA_2pa),
   w_A_SA_20("w_A_SA_20",this,other.w_A_SA_20),
   w_2A_20("w_2A_20",this,other.w_2A_20),
   w_A_0A_2pe("w_A_0A_2pe",this,other.w_A_0A_2pe),
   w_A_SA_pa("w_A_SA_pa",this,other.w_A_SA_pa),
   w_A_SA_0("w_A_SA_0",this,other.w_A_SA_0),
   w_A_SA_pe("w_A_SA_pe",this,other.w_A_SA_pe),
   w_A_paA_pe("w_A_paA_pe",this,other.w_A_paA_pe),
   w_2A_2pe("w_2A_2pe",this,other.w_2A_2pe),
   w_A_0A_pe("w_A_0A_pe",this,other.w_A_0A_pe),
   w_A_S2("w_A_S2",this,other.w_A_S2),
   w_A_2paA_pe("w_A_2paA_pe",this,other.w_A_2paA_pe),
   w_A_SA_2pe("w_A_SA_2pe",this,other.w_A_SA_2pe),
   w_A_0A_pa("w_A_0A_pa",this,other.w_A_0A_pa),
   w_A_paA_2pa("w_A_paA_2pa",this,other.w_A_paA_2pa),
   w_A_2peA_20("w_A_2peA_20",this,other.w_A_2peA_20),
   w_A_02("w_A_02",this,other.w_A_02),
   w_A_2peA_2pa("w_A_2peA_2pa",this,other.w_A_2peA_2pa),
   w_2A_pa("w_2A_pa",this,other.w_2A_pa),
   w_A_0A_2pa("w_A_0A_2pa",this,other.w_A_0A_2pa),
   w_A_20A_pe("w_A_20A_pe",this,other.w_A_20A_pe),
   w_A_20A_2pa("w_A_20A_2pa",this,other.w_A_20A_2pa),
   w_A_0A_20("w_A_0A_20",this,other.w_A_0A_20),
   w_A_2peA_pa("w_A_2peA_pa",this,other.w_A_2peA_pa),
   w_A_20A_pa("w_A_20A_pa",this,other.w_A_20A_pa),
   w_A_2peA_pe("w_A_2peA_pe",this,other.w_A_2peA_pe),
   w_2A_2pa("w_2A_2pa",this,other.w_2A_2pa),
   w_2A_pe("w_2A_pe",this,other.w_2A_pe)
 { 
 } 



 Double_t TristanJpsiKpi_J2::evaluate() const 
 { 
Double_t sthk = sqrt(-pow(helcosthetaK, 2) + 1);
Double_t sthl = sqrt(-pow(helcosthetaL, 2) + 1);
Double_t sthk2 = -pow(helcosthetaK, 2) + 1;
Double_t sthl2 = -pow(helcosthetaL, 2) + 1;
Double_t cthk2 = pow(helcosthetaK, 2);
Double_t cthl2 = pow(helcosthetaL, 2);
Double_t cosphi2 = pow(cos(helphi), 2);
Double_t sinphi2 = pow(sin(helphi), 2);
Double_t cosphi = cos(helphi);
Double_t sinphi = sin(helphi);
Double_t As = sqrt(As2);
Double_t sqfD = sqrt(fD);
Double_t sqfL = sqrt(fL);
Double_t sqfpa = sqrt(fpa);
Double_t sqf2L = sqrt(f2L);
Double_t sqf2pa = sqrt(f2pa);
Double_t cdelta20 = cos(delta_20);
Double_t cdelta2pa = cos(delta_2pa);
Double_t cdelta2pe = cos(delta_2pe);
Double_t sdelta20 = sin(delta_20);
Double_t sdelta2pa = sin(delta_2pa);
Double_t sdelta2pe = sin(delta_2pe);
Double_t cdelta_pa = cos(delta_pa);
Double_t cdelta_pe = cos(delta_pe);
Double_t sdelta_pa = sin(delta_pa);
Double_t sdelta_pe = sin(delta_pe);
Double_t sdelta_s = sin(delta_S);
Double_t cdelta_s = cos(delta_S);
Double_t sq2 = sqrt(2);
Double_t sq3 = sqrt(3);
Double_t sq5 = sqrt(5);
   // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE 
   return As*cdelta_s*sq3*sqfL*sthl2*Cfact_10*helcosthetaK*sqrt(-fD*(-As2 + 1) - As2 + 1)/(2*M_PI) + sqrt(30)*As*cosphi*sqf2pa*sqfD*sthk*sthl*Cfact_20*helcosthetaK*helcosthetaL*sqrt(-As2 + 1)*(cdelta2pa*cdelta_s + sdelta2pa*sdelta_s)/(4*M_PI) + sqrt(6)*As*cosphi*sqfpa*sthk*sthl*Cfact_10*helcosthetaL*(cdelta_pa*cdelta_s + sdelta_pa*sdelta_s)*sqrt(-fD*(-As2 + 1) - As2 + 1)/(4*M_PI) - sqrt(30)*As*sinphi*sqfD*sthk*sthl*Cfact_20*helcosthetaK*helcosthetaL*sqrt((-As2 + 1)*(-f2L - f2pa + 1))*(-cdelta2pe*sdelta_s + cdelta_s*sdelta2pe)/(4*M_PI) - sqrt(6)*As*sinphi*sthk*sthl*Cfact_10*helcosthetaL*sqrt((-fL - fpa + 1)*(-fD*(-As2 + 1) - As2 + 1))*(-cdelta_pe*sdelta_s + cdelta_s*sdelta_pe)/(4*M_PI) + As*sq5*sqf2L*sqfD*sthl2*Cfact_20*(6*cthk2 - 2)*sqrt(-As2 + 1)*(cdelta20*cdelta_s + sdelta20*sdelta_s)/(8*M_PI) + sqrt(15)*cdelta20*sqf2L*sqfD*sqfL*sthl2*Cfact_21*helcosthetaK*(6*cthk2 - 2)*sqrt(-As2 + 1)*sqrt(-fD*(-As2 + 1) - As2 + 1)/(8*M_PI) + 3*sqrt(10)*cdelta2pa*cosphi*cthk2*sqf2pa*sqfD*sqfL*sthk*sthl*Cfact_21*helcosthetaL*sqrt(-As2 + 1)*sqrt(-fD*(-As2 + 1) - As2 + 1)/(4*M_PI) + 3*cdelta_pa*cosphi*sq2*sqfL*sqfpa*sthk*sthl*helcosthetaK*helcosthetaL*(-fD*(-As2 + 1) - As2 + 1)/(4*M_PI) + 15*cosphi*cthk2*fD*sinphi*sqf2pa*sthk2*sthl2*sqrt((-As2 + 1)*(-f2L - f2pa + 1))*sqrt(-As2 + 1)*(cdelta2pa*sdelta2pe - cdelta2pe*sdelta2pa)/(4*M_PI) + 5*sqrt(6)*cosphi*fD*sqf2L*sqf2pa*sthk*sthl*helcosthetaK*helcosthetaL*(6*cthk2 - 2)*(-As2 + 1)*(cdelta20*cdelta2pa + sdelta20*sdelta2pa)/(16*M_PI) - 3*cosphi*sinphi*sq5*sqf2pa*sqfD*sthk2*sthl2*Cfact_21*helcosthetaK*sqrt((-fL - fpa + 1)*(-fD*(-As2 + 1) - As2 + 1))*sqrt(-As2 + 1)*(-cdelta2pa*sdelta_pe + cdelta_pe*sdelta2pa)/(4*M_PI) + 3*cosphi*sinphi*sq5*sqfD*sqfpa*sthk2*sthl2*Cfact_21*helcosthetaK*sqrt((-As2 + 1)*(-f2L - f2pa + 1))*(-cdelta2pe*sdelta_pa + cdelta_pa*sdelta2pe)*sqrt(-fD*(-As2 + 1) - As2 + 1)/(4*M_PI) - 3*cosphi*sinphi*sqfpa*sthk2*sthl2*sqrt((-fL - fpa + 1)*(-fD*(-As2 + 1) - As2 + 1))*(-cdelta_pa*sdelta_pe + cdelta_pe*sdelta_pa)*sqrt(-fD*(-As2 + 1) - As2 + 1)/(4*M_PI) + sqrt(30)*cosphi*sqf2L*sqfD*sqfpa*sthk*sthl*Cfact_21*helcosthetaL*(6*cthk2 - 2)*sqrt(-As2 + 1)*(cdelta20*cdelta_pa + sdelta20*sdelta_pa)*sqrt(-fD*(-As2 + 1) - As2 + 1)/(16*M_PI) + 15*cthk2*f2pa*fD*sthk2*(-As2 + 1)*(2*cosphi2*cthl2 + 2*sinphi2)/(16*M_PI) + 15*cthk2*fD*sthk2*(-As2 + 1)*(-f2L - f2pa + 1)*(-2*cosphi2*cthl2 + 2*cosphi2 + 2*cthl2)/(16*M_PI) - 3*sqrt(10)*cthk2*sdelta2pe*sinphi*sqfD*sqfL*sthk*sthl*Cfact_21*helcosthetaL*sqrt((-As2 + 1)*(-f2L - f2pa + 1))*sqrt(-fD*(-As2 + 1) - As2 + 1)/(4*M_PI) + 3*cthk2*sthl2*fL*(-fD*(-As2 + 1) - As2 + 1)/(4*M_PI) + 5*f2L*fD*sthl2*(-As2 + 1)*(-36*cthk2*sthk2 + 12*cthk2 + 4)/(64*M_PI) - 5*sqrt(6)*fD*sinphi*sqf2L*sthk*sthl*helcosthetaK*helcosthetaL*sqrt((-As2 + 1)*(-f2L - f2pa + 1))*(6*cthk2 - 2)*sqrt(-As2 + 1)*(cdelta20*sdelta2pe - cdelta2pe*sdelta20)/(16*M_PI) - 3*sdelta_pe*sinphi*sq2*sqfL*sthk*sthl*helcosthetaK*helcosthetaL*sqrt((-fL - fpa + 1)*(-fD*(-As2 + 1) - As2 + 1))*sqrt(-fD*(-As2 + 1) - As2 + 1)/(4*M_PI) - sqrt(30)*sinphi*sqf2L*sqfD*sthk*sthl*Cfact_21*helcosthetaL*sqrt((-fL - fpa + 1)*(-fD*(-As2 + 1) - As2 + 1))*(-6*cthk2 + 2)*sqrt(-As2 + 1)*(-cdelta20*sdelta_pe + cdelta_pe*sdelta20)/(16*M_PI) + 3*sq5*sqf2pa*sqfD*sqfpa*sthk2*Cfact_21*helcosthetaK*sqrt(-As2 + 1)*(cdelta2pa*cdelta_pa + sdelta2pa*sdelta_pa)*(2*cosphi2*cthl2 + 2*sinphi2)*sqrt(-fD*(-As2 + 1) - As2 + 1)/(8*M_PI) + 3*sq5*sqfD*sthk2*Cfact_21*helcosthetaK*sqrt((-As2 + 1)*(-f2L - f2pa + 1))*sqrt((-fL - fpa + 1)*(-fD*(-As2 + 1) - As2 + 1))*(cdelta2pe*cdelta_pe + sdelta2pe*sdelta_pe)*(-2*cosphi2*cthl2 + 2*cosphi2 + 2*cthl2)/(8*M_PI) + 3*sthk2*fpa*(2*cosphi2*cthl2 + 2*sinphi2)*(-fD*(-As2 + 1) - As2 + 1)/(16*M_PI) + 3*sthk2*(-fL - fpa + 1)*(-2*cosphi2*cthl2 + 2*cosphi2 + 2*cthl2)*(-fD*(-As2 + 1) - As2 + 1)/(16*M_PI) + sthl2*As2/(4*M_PI) ; 
 } 



 Int_t TristanJpsiKpi_J2::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* /*rangeName*/) const  
 { 
 if ( matchArgs(allVars, analVars, helcosthetaK,helcosthetaL,helphi ) )  return 1;
   // LIST HERE OVER WHICH VARIABLES ANALYTICAL INTEGRATION IS SUPPORTED, 
   // ASSIGN A NUMERIC CODE FOR EACH SUPPORTED (SET OF) PARAMETERS 
   // THE EXAMPLE BELOW ASSIGNS CODE 1 TO INTEGRATION OVER VARIABLE X
   // YOU CAN ALSO IMPLEMENT MORE THAN ONE ANALYTICAL INTEGRAL BY REPEATING THE matchArgs 
   // EXPRESSION MULTIPLE TIMES

   // if (matchArgs(allVars,analVars,x)) return 1 ; 
   return 0 ; 
 } 



 Double_t TristanJpsiKpi_J2::analyticalIntegral(Int_t code, const char* rangeName) const  
 { 
Double_t sthk = sqrt(-pow(helcosthetaK, 2) + 1);
Double_t sthl = sqrt(-pow(helcosthetaL, 2) + 1);
Double_t sthk2 = -pow(helcosthetaK, 2) + 1;
Double_t sthl2 = -pow(helcosthetaL, 2) + 1;
Double_t cthk2 = pow(helcosthetaK, 2);
Double_t cthl2 = pow(helcosthetaL, 2);
Double_t cosphi2 = pow(cos(helphi), 2);
Double_t sinphi2 = pow(sin(helphi), 2);
Double_t cosphi = cos(helphi);
Double_t sinphi = sin(helphi);
Double_t As = sqrt(As2);
Double_t sqfD = sqrt(fD);
Double_t sqfL = sqrt(fL);
Double_t sqfpa = sqrt(fpa);
Double_t sqf2L = sqrt(f2L);
Double_t sqf2pa = sqrt(f2pa);
Double_t cdelta20 = cos(delta_20);
Double_t cdelta2pa = cos(delta_2pa);
Double_t cdelta2pe = cos(delta_2pe);
Double_t sdelta20 = sin(delta_20);
Double_t sdelta2pa = sin(delta_2pa);
Double_t sdelta2pe = sin(delta_2pe);
Double_t cdelta_pa = cos(delta_pa);
Double_t cdelta_pe = cos(delta_pe);
Double_t sdelta_pa = sin(delta_pa);
Double_t sdelta_pe = sin(delta_pe);
Double_t sdelta_s = sin(delta_S);
Double_t cdelta_s = cos(delta_S);
Double_t sq2 = sqrt(2);
Double_t sq3 = sqrt(3);
Double_t sq5 = sqrt(5);
if ( code == 1)
{
Double_t Integral = As*cdelta_s*sqfL*w_A_SA_0*Cfact_10*sqrt(-fD*(-As2 + 1) - As2 + 1) + As*sqf2L*sqfD*w_A_SA_20*Cfact_20*sqrt(-As2 + 1)*(cdelta20*cdelta_s + sdelta20*sdelta_s) + As*sqf2pa*sqfD*w_A_SA_2pa*Cfact_20*sqrt(-As2 + 1)*(cdelta2pa*cdelta_s + sdelta2pa*sdelta_s) + As*sqfD*w_A_SA_2pe*Cfact_20*sqrt((-As2 + 1)*(-f2L - f2pa + 1))*(-cdelta2pe*sdelta_s + cdelta_s*sdelta2pe) + As*sqfpa*w_A_SA_pa*Cfact_10*(cdelta_pa*cdelta_s + sdelta_pa*sdelta_s)*sqrt(-fD*(-As2 + 1) - As2 + 1) + As*w_A_SA_pe*Cfact_10*sqrt((-fL - fpa + 1)*(-fD*(-As2 + 1) - As2 + 1))*(-cdelta_pe*sdelta_s + cdelta_s*sdelta_pe) + cdelta20*sqf2L*sqfD*sqfL*w_A_0A_20*Cfact_21*sqrt(-As2 + 1)*sqrt(-fD*(-As2 + 1) - As2 + 1) + cdelta2pa*sqf2pa*sqfD*sqfL*w_A_0A_2pa*Cfact_21*sqrt(-As2 + 1)*sqrt(-fD*(-As2 + 1) - As2 + 1) + cdelta_pa*sqfL*sqfpa*w_A_0A_pa*(-fD*(-As2 + 1) - As2 + 1) + f2L*fD*w_2A_20*(-As2 + 1) + f2pa*fD*w_2A_2pa*(-As2 + 1) + fD*sqf2L*sqf2pa*w_A_20A_2pa*(-As2 + 1)*(cdelta20*cdelta2pa + sdelta20*sdelta2pa) + fD*sqf2L*w_A_2peA_20*sqrt((-As2 + 1)*(-f2L - f2pa + 1))*sqrt(-As2 + 1)*(cdelta20*sdelta2pe - cdelta2pe*sdelta20) + fD*sqf2pa*w_A_2peA_2pa*sqrt((-As2 + 1)*(-f2L - f2pa + 1))*sqrt(-As2 + 1)*(cdelta2pa*sdelta2pe - cdelta2pe*sdelta2pa) + fD*w_2A_2pe*(-As2 + 1)*(-f2L - f2pa + 1) + sdelta2pe*sqfD*sqfL*w_A_0A_2pe*Cfact_21*sqrt((-As2 + 1)*(-f2L - f2pa + 1))*sqrt(-fD*(-As2 + 1) - As2 + 1) - sdelta_pe*sqfL*w_A_0A_pe*sqrt((-fL - fpa + 1)*(-fD*(-As2 + 1) - As2 + 1))*sqrt(-fD*(-As2 + 1) - As2 + 1) + sqf2L*sqfD*sqfpa*w_A_20A_pa*Cfact_21*sqrt(-As2 + 1)*(cdelta20*cdelta_pa + sdelta20*sdelta_pa)*sqrt(-fD*(-As2 + 1) - As2 + 1) + sqf2L*sqfD*w_A_20A_pe*Cfact_21*sqrt((-fL - fpa + 1)*(-fD*(-As2 + 1) - As2 + 1))*sqrt(-As2 + 1)*(-cdelta20*sdelta_pe + cdelta_pe*sdelta20) + sqf2pa*sqfD*sqfpa*w_A_paA_2pa*Cfact_21*sqrt(-As2 + 1)*(cdelta2pa*cdelta_pa + sdelta2pa*sdelta_pa)*sqrt(-fD*(-As2 + 1) - As2 + 1) + sqf2pa*sqfD*w_A_2paA_pe*Cfact_21*sqrt((-fL - fpa + 1)*(-fD*(-As2 + 1) - As2 + 1))*sqrt(-As2 + 1)*(-cdelta2pa*sdelta_pe + cdelta_pe*sdelta2pa) + sqfD*sqfpa*w_A_2peA_pa*Cfact_21*sqrt((-As2 + 1)*(-f2L - f2pa + 1))*(-cdelta2pe*sdelta_pa + cdelta_pa*sdelta2pe)*sqrt(-fD*(-As2 + 1) - As2 + 1) + sqfD*w_A_2peA_pe*Cfact_21*sqrt((-As2 + 1)*(-f2L - f2pa + 1))*sqrt((-fL - fpa + 1)*(-fD*(-As2 + 1) - As2 + 1))*(cdelta2pe*cdelta_pe + sdelta2pe*sdelta_pe) + sqfpa*w_A_paA_pe*sqrt((-fL - fpa + 1)*(-fD*(-As2 + 1) - As2 + 1))*(-cdelta_pa*sdelta_pe + cdelta_pe*sdelta_pa)*sqrt(-fD*(-As2 + 1) - As2 + 1) + w_2A_pa*fpa*(-fD*(-As2 + 1) - As2 + 1) + w_2A_pe*(-fL - fpa + 1)*(-fD*(-As2 + 1) - As2 + 1) + w_A_02*fL*(-fD*(-As2 + 1) - As2 + 1) + w_A_S2*As2;
return Integral;
}
}