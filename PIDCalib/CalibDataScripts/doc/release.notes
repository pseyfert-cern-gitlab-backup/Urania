!-----------------------------------------------------------------------------
! Package     : PIDCalib/CalibDataScripts
! Responsible : Sneha Malde
! Purpose     : Scripts to generate PID Calibration samples
!-----------------------------------------------------------------------------

! 2014-4-28 Sneha Malde
  Link everything to the new library

! 2014-4-24 Sneha Malde
  Change the requirements file to make shared library

! 2014-4-17 Diego Martinez Santos
  	    Add explicit dependence on GSL
!============================================== v4r5 2014-4-11 ==============================
! 2014-4-11 Diego Martinez Santos
	 Make version v4r5
! 2014-03-03 - Thomas Bird 
 - Fixed crash in GetRunRanges.C if nentries < stepfrac*maxEntries
 - chop trees asssumed all subjobs contained all tree, removed this requirement
 - added full path to macro in getRunRanges.py
 - added Jpsiee tuple name to MergeCharges
 - new GetRunRanges and ChopTrees scripts for Jpsi -> ee samples
 - added Jpsi -> ee mass fit and scripts to run these
 - added function in SetSpectatorVars to include number of bremsstrahlung 
   photons as one of the spectator vars


! 2014-03-20 - Marco Clemencic
 - Added CMake configuration file.

!============================== v4r4 13-12-2013 ==============================

! 2013-12-13 - Sneha Malde (LHCB)
 - Make version v4r4 (erroneously tagged as v3r1)

! 2013-12-13 Sneha Malde
  - Add comments to uploadata.py to remember how it works.

! 2013-12-12 Sneha Malde
 - Changed the ganga scripts for running fit jobs so that they can read data selection jobs from someone elses area.

! 2013-12-03 - Philip Hunt (LHCB)
 - Changed SetSpectatorVars, DStFit, LamFit and so on to use RooRealVars 
   instead of RooCategories for the new variables (which should result
   in smaller dataset sizes)
 - Fixed a bug in the chopTrees script that resulting in some subsamples
   having zero entries
 - Added a new set of scripts (scripts/root/GetRunRanges.C and associated
   python, shell and ganga scripts) to split the data by run-range by directly
   accessing the input TTrees (rather than querying the LHCb bookkeeping)
 - Added a new set of scripts (scripts/root/ValidateChoppedTrees.C and
   associated python, shell and ganga scripts) to validate that the correct
   number of entries and the correct run ranges have been applied by the
   chopTrees script (according to the pickle files)
 - Changed the maxium number of entries / subsample to <1M, from <2M, 
   to avoid memory-related errors in RooFit (due to RooDataSets being 
	 memory-resident)
 - Added an extra flag in DStFit, Lam0Fit and so on, and the associated
   scripts, that indicates whether the program should exit if the fit
   quality is poor

! 2013-11-20 - Philip Hunt (LHCB)
 - Modified CheckFitResults to take RooPhysFitter as argument instead of 
   RooDMassFitter
 - Added src/TestCheckFitResults.cpp to check that the various helper
   functions in CheckFitResults are working correctly
   * Made several fixes to CheckFitResults as a results of tests performed
     using TestCheckFitResults
 - Added status code checks to scripts in scripts/sh
 - Updated DStFit.cpp, LamFit.cpp and so on to include muon and RICH
   categories, and to print a usage message when the wrong number of 
   arguments are supplied
 - Moved {DStJob,Lam0Job,JpsiJob}_runRange.sh from the jobs directory
   to scripts/sh and modified the scripts to process a single index
   (so the different subsamples can be processed in separate subjobs)
 - Modified mass-fit ganga scripts to process subsamples in separate subjobs
 
! 2013-11-18 - Philip Hunt (LHCB)
 - Added scripts/sh directory for scripts that are used to configure the
   enviroment and run the python scripts and executables
   * GetRunLumi.sh: runs the scripts/python/getRunLumi.py script
   * ChopTrees.sh: runs the scripts/python/chopTrees.py script
 - Removed 'MCTuneV2' job directories (MCTuneV2 is now the default for
   Stripping20 and Stripping20r1 reprocessing)
 - Added ganga jobs in jobs/Stripping20{,r1}/GetRunLumi to configure the
 	 LHCbDirac environment and generate the run-range pickle files
 - Modified the "ChopTrees" ganga scripts to run the ChopTrees.sh as an
   executable (previously ran the scripts/python/chopTrees.py directly using
   GaudiPython, but this no longer works with recent versions of Urania).
 - Moved the implementation of the functions in GetData.h and 
   SetSpectatorVars.h to cpp files in the src directory.
 - Moved the implemetation of the mass fit functions (DStFit, Lam0Fit etc.)
   to the cpp files in the src directory.
 - Removed redundant files: src/MC_DStFit.cpp, src/ChopUpMuonTrees.cpp,
   scripts/root/TrackCategories.cpp, scripts/root/ReducePIDCalibNtuple.C,
	 scripts/root/MuonProbTagTrigger.C, 
	 scripts/python/MuonProbTagTriggerProcess.py,
	 scripts/python/chopTrees_MUON.py, CalibDataScripts/MC_DStFit.h,
	 CalibDataScripts/K0SFit.h, src/MC_DStFit.cpp and src/K0SFit.cpp.
 - Added scripts/python/getUraniaVersion.py to get the Urania version from
   the path
 - Added CalibDataScripts/CheckFitResults.h and src/CheckFitResults.cpp to
   do some basic checks of the status of the invariant mass fits.
 - In SetSpectatorVars.h:
    * Modified functions to take a reference to a RooDMassFitter as an 
		  argument instead of a RooDMassFitter pointer
    * Changed erroneously named SetSpecVars_NeuroBayesVars to 
		  SetSpecVars_ANNVars
 - In GetData.h:
    * Removed redundant functions
    * Modified GetData function to return a pointer to a TChain rather than
      taking a Tree pointer reference and unneccesarily downcasting the 
      TChain pointer to a TTree pointer
 - In mass fit functions (DStFit, Lam0Fit etc.)
    * Made modifications due to changes to SetSpectatorVars and GetData
    * Added checks that the fits converge successfully (exit with failure
      return code if the fit does not converge).
    * Added pulls to the mass-fit plots (using new PlotFitPulls method 
		  implemented in RooPhysFitter).
		* Added ProbNN variable plots
  - Old Stripping20 and Stripping20r1 ChopTrees ganga scripts and pickle files
    have been removed and replaced with new ones
    * pickle file prefixes now include the mother type (D*, Lam0 etc.) to allow
      different pickle files for difference sources of calibration tracks (e.g.
			protons from Lambdac or from Lambda0)
		* Muons and MuonUnBiased protons now have separate pickle files
    * Protons now have a separate pickle file to kaons and pions from D*
 	
!============================== v4r3 02-09-2013 ==============================

! 2013-09-02 - Philip Hunt (LHCB)
 - Make version v4r3 (erroneously tagged as v3r1)

! 2013-07-09 - Philip Hunt (LHCB)
 - Fixed bugs in Lam0Fit.cpp and Lam0Fit_MuonUnBiased.cpp introduced in v4r1
    * "high momentum" Lam0 events were being extracted from the LowP stripping line samples,
      leading to a significant reduction in the number of high momentum protons in the calibration
      samples

!============================== v4r2 05-07-2013 ==============================
! 2013-07-05 - Philip Hunt (LHCB)
  - Make version v4r2

! 2013-07-05 - Philip Hunt (LHCB)
  - Addendum (to last comment): CalibDataScripts/DStFit.h and CalibDataScripts/DStFit_MuonUnBiased.h updated to remove unphysical 'fake D0' component
    from D* mass fits (where the delta mass PDF is signal-like, but the D0 mass PDF is combinatoric-like).
  
! 2013-07-05 - Philip Hunt (LHCB)
  - Added scripts to split the Stripping20{,r1} RICH and muon PID samples utilising the improved MCTuneV2 ANN retuning 
    in jobs/Stripping20{,r1}_MCTuneV2/ChopTrees
  - Added scripts to fit and merge the Stripping20{,r1} MCTuneV2 RICH and muon PID samples in 
    jobs/Stripping20{,r1}/{DSt,Lam0,Jpsi,DSt_MuonUnBiased,Lam0_MuonUnBiased}
  - Simplified the fitting jobs scripts:
      * Shell scripts *Job_runRange.sh no longer have any hard-coding of variables such as the ganga job IDs and ganga jobs directory.
        Instead, this information is supplied in a new file in each stripping subdirectory called 'configureGangaJobs.sh', which is sourced
        by the fitting script
      * scripts/python/gangaJobFuncs.py has been added to get the number of chopped trees for a given ganga directory, job ID and file suffix
        and to read in the configureGangaJobs.sh shell script in the ganga job script. This has been done to reduce the possibility of making
        mistakes, such as specifying the wrong ganga directory or the wrong number of chopped trees, when creating or modifying the ganga job 
        scripts
  - Removed jobs directories for stripping versions earlier than Stripping17
  - Removed ganga job scripts for Stripping17, Stripping20 and Stripping20r1 RICH and muon calibration samples. 
      * The 'ChopTrees' pickle files have been kept, since they are needed by PIDPerfScripts
  - The jobs/MUON directory has been removed
      * The muon calibration job scripts and pickle files are now located in the same place as the RICH scripts


!============================== v4r1 14-06-2013 ==============================
! 2013-06-14 - Philip Hunt (LHCB)
  - Make version v4r0

! 2013-06-14 - Philip Hunt (LHCB)
  - Added scripts to reduce the muon PID samples and select the tagged muons
    in jobs/MUON/Stripping20r1/MuonTagProb
	- Added scripts to split the Stripping20r1 muon PID samples in jobs/MUON/Stripping20r1/ChopTrees
  - Added scripts to fit and merge the Stripping20r1 muon PID samples in 
    jobs/MUON/Stripping20r1/{DSt,Lam0,Jpsi}
	- Added scripts/python/uploadData_refSamples_muon.py to upload muon reference samples to 
    CERN grid storage
	    * Also modified scripts/python/uploadData_muonSamples.py to minimise the number of attempts 
        to upload a file
  - Added pickle files for muon PID calibration Stripping20r1 samples:
      * jobs/MUON/Stripping20r1/ChopTrees/{up,down}runLimits_h_muonUnBiased.pkl (620 pb-1)
      * jobs/MUON/Stripping20r1/ChopTrees/{up,down}runLimits_mu_and_p_muonUnBiased.pkl 
        (100 pb-1 magnet up, 75 pb-1 magnet down)
  - Modified scripts/python/MuonProbTagTriggerProcess.py to allow writing the
    reduced muon and MuonCalibration nTuples to the same ganga directory as the
    input data (with a different filename)
  - Added scripts/python/chopTrees_MUON.py, used to chop muon and MuonUnBiased
    samples when MuonProbTagTriggerProcess.py is used to write the reduced 
    nTuples to the same ganga directory
  - All calibration data fitting scripts in the src directory now require a "DataType"
    argument (similar to the DataType option of the LHCb configurables) that
    indicates which sets of spectator variables should be used
      * At present, the possible values of the DATATYPE argument are "2011" or "2012"
	- Updated scripts/python/diracFuncs.py to work with recent Dirac versions (accounts for
    modification to the output of the getFileMetaData function)
  - Modified scripts/python/getRunLumi.py to allow different luminosity blocks for magnet
    up and magnet down data
	
!============================== v4r0 02-05-2013 ==============================
! 2013-05-02 Philip Hunt
  - Make version v4r0

!2013-05-02 - Philip Hunt
	- Added scripts to split the Stripping20r1 RICH PID samples in jobs/Stripping20r1/ChopTrees
  - Added scripts to fit and merge the Stripping20r1 RICH PID samples in jobs/Stripping20r1/{DSt,Lam0}
  - Added scripts to make RICH PID reference TTrees for Stripping17, 20 and 20r1 in jobs/Stripping{17,20,20r1}/MakeRefTrees
	- Modified Lam0Fit.h and DStFit.h to allow printing of variables and spectators in calibration TTrees (this feature has been added to RooPhysFitter)
  - Modified ReducePIDCalibNTuple.C to ignore missing branches

! 2013-04-22 - Philip Hunt
  - Added pickle files for RICH PID calibration Stripping20r1 samples:
    * jobs/Stripping20r1/ChopTrees/{up,down}runLimits_h.pkl (35 pb-1)
  - Added shell scripts to configure the environment to run the scripts in
    scripts/python (LHCbDirac with ROOT and pyanalysis external dependencies)

! 2013-03-29 - Philip Hunt
  - Removed redundant CalibDataScripts_v2, src_v2 and config directories,
    and all files within these directories

! 2013-03-24 - Juan Martin Otalora Goicochea
  - added jobs and scripts for MagDown 2012 and 2011 data 
  - modified getRunLumi.py to initialize the fileSuffix variable
  - added ReducePIDCalibNtuple.C to copy an ntuple with reduced number of colums.
    This is necessary to  obtain reference samples for systematics study.

! 2013-03-12 - Juan Martin Otalora Goicochea
  - added/modified all the scripts and job files for the muon side in CalibDataScripts/jobs/MUON
    to be compatible with the changes from Philip
  - modified MuonProbTagTrigger.C to include the itegrated luminosity ntuple 

! 2013-03-12 - Philip Hunt
  - pickle files have been renamed to reflect the fact that the muon calibration requires different luminosity divisions to the standard D* and Lam0 calibration
    - scripts/python/chopTrees.py and scripts/python/getRunLumi.py
  - minor change to scripts/python/uploadData.py to minimise the number of attempts to upload a file
  - added scripts/python/uploadData_refSamples.py to upload reference samples used by the systematic studies to Grid storage

!============================== v2r0 19-02-2012 ==============================

! 2013-03-02 - Juan Martin Otalora Goicochea
    - changes in src/JpsiFit.cpp, Lam0Fit_MuonUnBiased.cpp, DStFit_MuonUnBiased.cpp,
      to be compatibles with the other objects
    - scripts/python/chopTrees.py: added arguments tree_lists and gangadir.
    - jobs/Stripping20/ganga_gp_chopTrees_Mag{Up,Down}: modified to be compatible with
      new chopTrees.py
    - Added directory jobs/MUON to put muon jobs
    - Added new jobs for muons: jobs/MUON/Stripping{19a,20}
    - Added scripts scripts/root/MuonProbTagTrigger.C and
      scripts/python/MuonProbTagTriggerProcess.py
      wich run over a given ganga job from CalibDataSel. Select prob and tag Muons.
      Apply TIS cut and reduce number of columns. Put the results in a gangadir fake job
    - Added ganga job jobs/MUON/Stripping20/MuonTabProb/ganga_muon_tab_prob_Mag{Up, Down}.py

! 2013-02-19 - Andrew Powell (LHCb)04
 - Make version v2r0

! 2013-02-19 - Andrew Powell (LHCb)04
  - Added python script scripts/python/uploadData.py
    - Uploads calibration RooDataSets onto CERN-USER SE using the Dirac command
      'dirac-dms-add-files'
  - Added pickle files containing run number limits for S17 data

! 2013-02-06 - Juan Martin Otalora Goicochea
  - Modified ChopUpMuonTrees.cpp to consider the tag and prob flags as boolean
  - Modified JpsiFit.h, Lam0Fit_MuonUnBiased.h and DStFit_MuonUnBiased.h to remove 
    the hasRich cut as suggested by andrew and to add the "_" character in the trigger variables.
  - Removed getRunNumberLimits.C. We will use getRunLumi.py

! 2013-01-28 - Andrew Powell
  - Fixed bug in scripts/python/getRunLumi.py
    - for loops were running over lists upRuns and downRuns, respectively. These
      should have been the sorted varients upRunNumbers and downRunNumbers. 
      Fortunately, this does not effect the run numbers obtained for S20 last 
      week. 

! 2013-01-23 - Andrew Powell
  - Modifications and Clean up
    - src/{DStFit,K0SFit,LambdaFit}.cpp all updated to consider data distributed 
      across multiple ganga jobs (or from any source for that matter). 
    - Removed redundant shell job scripts 

! 2013-01-21 - Andrew Powell
  - Modifications to scripts/python/getRunLumi.py
    - Now ensure that the run blocks are guaranteed to have a luminosity LESS
      than the request value. Not done previously.

! 2012-11-23 - Andrew Powell
  - Major updates
    - scripts/python/getRunLumi.py: now saves a pickle file of 2 x N numpy array 
      containing the min and max run numbers for each run block corresponding to 
      the luminosity set by the user
    - scripts/python/chopTrees.py: script that takes the above mentioned pickle 
      files and splits the nTuples for each subjob of a given ganga job into 
      sub-files accorsding to the run limits
    - jobs/Stripping20/ChopTrees/ganga_gp_chopTrees_Mag{Up,Down}.py: ganga 
      scripts that run chopTrees.py through the GaudiPython application

! 2012-11-17 - Andrew Powell
  - Updated scripts/getRunLumi.py
    - Now prints a user friendly array to screen 

! 2012-10-31 - Andrew Powell
  - Changes implemented for S20 processing
    - src/{DStFit,K0SFit,LambdaFit}.cpp all updated for using 2012 event variables
  - Updates to Dirac scripts
    - All common functions now located in scripts/diracFuncs.py
    - Weeded dead code from scripts/getRunLumi.py
    - Added new script scripts/getTCKLumi.py
      - Determines the luminosity within defined run ranges associated with a specific
        TCK. Used to study the concerns possed by Vava Gligorov during Oct '12 Analysis
        week that the rate of D* accumulated per pb^-1 may vary with trigger TCK

! 2012-10-01 - Andrew Powell
  - Updated scripts/getRunLumi.py
    - Updated to work for both S19 and S20
    - Changed from LHCbDIRAC.NewBookkeepingSystem -> from LHCbDIRAC.BookkeepingSystem

! 2012-09-28 - Juan Martin Otalora Goicochea
  - Added getRunNumberLimits.C script to calculate runNumber ranges of 2M events each. 
  - Added ChopUpMuonTrees.cpp to chop Muon and Muon Unbiased Lines
  - Added JpsiFit.cpp to fit and create DataSets for Muon Lines
  - Added Lam0Fit_MuonUnBiased.cpp and DStFit_MuonUnBiased.cpp to fit and create 
    DataSets for Muon Unbiased Lines
  - Added MergeProtonLines_MuonUnBiased.cpp to merge proton DataSets
  - Modified MergeCharges.cpp to include the Muon DataSets 
  - Modified SetSpectatorVars.h to include method SetSpecVars_EvtVars2012 wich contais 
    runNumber ranges corresponding to 2012 data

! 2012-07-05 - Andrew Powell
  - Corrected extendedMod argument in all PerformDMassBinnedFit() and 
	  PerformDMassIterativeBinnedFit() functions to be kTRUE (previously set to kFALSE 
    incorrectly)
  - Many thanks to Juan Martin Otálora Goicochea for indentifying this issue

! 2012-05-05 - Philip Hunt
  - Fixed multiple errors caused by bug fix to Savannah bug #94227.

! 2012-01-02 - Andrew Powell
  - Updates to package for Stripping17 processing:
    - Modified spectator variables to include MUON performance variables in datasets:
	    - isMuon, isMuonLoose, nShared, InMuonAc
    - Minor mods to ChopTrees
      - Job script split into _MagUp and _MagDown scripts 

! 2011-12-08 - Andrew Powell
  - Added scripts/getRunLumi.py
    - python script kindly provided by Marco Adinolfi to determine the run numbers and
      their associated offline luminosities for both magentic field polarities
    - Usage:
      - Ensure you have a valid grid proxy
      > SetupLHCbDirac
      > python -u getRunLumi.py Collision11 Stripping17
  - Added src/ChopUpTrees.cpp on behalf of Sneha Malde. 
	  - Exectuable to split the ganga subjob nTuples into sub-nTuples according to a 
      given list of run ranges defined within an input file: RUNNUMBERS_{DOWN,UP}.txt.
  - Modified Lambda0 fit to use RooPhysFitter::RooDMassFitter::MakeDMassSigTriGauss().
    - Now fit a triple-Guassian instead of just a double-Gaussian.
  - Updated job scripts for Stripping17 data.

! 2011-11-14 - Philip Hunt
  - Added support for making data set from input files in a directory other
    than the ganga directory.
  - Fix to bug in fitting scripts in which the output directory was not set to the
    input directory if an empty string was specified.
 
! 2011-11-11 - Andrew Powell
  - Major changes made to package structure.
  - PROBLEM: The generation of the packge library, needed by most of the src_v2 applications, was 
    causing errors in the nightly builds which use the following make command:
     > make CMTEXTRATAGS=use-distcc,no-pyzip -j 30
    Standard 'cmt make' does not use the parallel build like above, and so makes the package 
    sequently. Consequently, the library existed when compiliing the src_v2 executables. 
  - SOLUTION: The library needed by the src_v2 applications is now made in the CalibDataProduction 
    package, which this package now depends upon.  

! 2011-11-07 - Philip Hunt
  - Added scripts in src_v2 to split the phi data sets into regions of track momentum
    and eta, and to merge the results after fitting. Updated src_v2/MakeDataSets.cpp to
    include methods to do the merging and splitting.

! 2011-11-06 - Andrew Powell
  - Removed tight mass cut applied in MergedCharges.cpp: 
    - This was a bug since this clearly effects the sum of weights and means Sum_i w_i != N_sig.
    - Consequently the datasets were not being weighted correctly.

! 2011-11-02 - Philip Hunt
  - Added scripts in src_v2 to split data sets into regions of track momentum,
    and to merge the results after fitting. Updated src_v2/MakeDataSets.cpp to
    include methods to do the merging and splitting.

! 2011-11-01 - Andrew Powell
  - Updated package to use new RooPhysFitter methods:
    - RooDMassFitter::PerformDMassIterativeBinnedFit
    - RooDstarD0MassFitter::PerformDelmIterativeBinnedFit
  - Fits are now configured to use the following sequence of MINUIT fit strategies:
    - non-D*: 0,2
    - D*    : 0,1

! 2011-10-27 - Philip Hunt
  - Updated src_v2/MergePhiDataSets.cpp to remove the cut on the mass prior to
    merging, as this was messing up the DLL distribution
  -
! 2011-10-19 - Andrew Powell
  - Minor modifications to perform fits over nTuples from uDST (Stripping17)
    + nTracks variable no longer exists (use nLong only from now on)
    + nPV variable now called nPVs
    + SetSpecVars_mDSTEvtVars() in SetSpectatorVars.h accounts for these changes
      and is now used instead of SetSpecVars_EvtVars() in DStFit.cpp, Lam0Fit.cpp 
      and K0SFit.cpp

! 2011-10-10 - Sneha Malde
  - Modified making the data set so that it conforms to the latest changes in
    RooPhysFitter.
  - The D* fit now uses the new double fit formulation with also some fixed
    bkg variables

! 2011-09-29 - Philip Hunt
  - Implementations of methods in CalibDataScripts_v2/MakeDataSets.h have now been moved to
  - src_v2/MakeDataSets.cpp 
  - Fixed bug in new fitting code which meant that extended fits were not performed
  - Fixed bug in new fitting code which meant that merging workspaces with PDFs did not update
    the range of the yield variables
  - New phi fitting now uses the same background PDF as used in the phi cross-section
    analysis 
  - Modified new merging code so that tracks with different charges can be stored in 
    separate data sets (previously, all tracks of a given type were stored in the same data set,
    with a RooCategory specifying the track charge).

! 2011-09-29 - Andrew Powell
  - $GANGAREPOS variable now set within package requirements file.

! 2011-09-15 - Sneha Malde
  - Modified file path string to use env. variable $GANGAREPOS. The user needs to 
    set this environment to point to the correct location.

! 2011-09-13 - Andrew Powell
  - Updates to package for generating calibration samples from stripping15 data
  - Added a new file for filtering the charm 14nb^-1 inc. phi ntuples:
    + src_v2/CharmXsec_PhiStrip.cpp
      and associated batch/ganga scripts:
    + jobs/Charm14nb_PhiStrip.csh, jobs/CharmXsec
  - Updated batch submission scripts so one single job process all the data for 
    a given track type from a given parent particle. The master scripts are now:
    + jobs/DStJob.sh
    + jobs/Lam0Job.sh
    + jobs/K0SJobs.sh
  - Added ganga scripts for stripping15 in jobs/Stripping15

! 2011-09-08 - Philip Hunt
  - Major changes to the package including:
    o New ConfParser class added to parse configuration files, as well as 
      modification of the relavent files to check configuration settings from
      an input configuration file. This allows to the user to configure 
      settings such as the tuple names and ganga jobs repository directory
      which were previously hard-coded, allowing the user to change these
      settings without having to edit the source files;
    o New JobSplitter.cpp source file added to produce configuration files 
      in which Ganga subjobs can be processed in batches (useful for very
      large input datasets);
    o Enums.h file added, containing various enumerations, such as charge,
      polarity and track type, which are used by the various calibration
      scripts;
    o The majority of functions have now been moved to MakeDataSets.h.
      The calibration scripts such as the data set production and fitting
      scripts now use common functions in this file, minimising the amount
      of code repetition.
  - For the moment, only Phi, Lamda0 and KS0 source files have been produced,
    but the functions in MakeDataSets.h are also able to process D*+ decays.
  - config directory has been added, which contains a default configuration 
    file, and configuration files for processing the 14nb-1 charm calibration
    data.
  - The new code is kept separate from the old code for the moment in order not
    to intefere with the code being used for other analyses.
     o Header files can be found in CalibDataScript_v2;
     o Source files can be found in src_v2. 

! 2011-09-07 - Andrew Powell
  - Updates to package for generating calibration samples from stripping13b data
  - Jobs scripts {DStJob, Lam0Job, K0SJob}.csh now:
    o Fit sample for given calibration track and generate associated fit plots;
    o Output a separate dataset, with sWeights, for each track charge;
    o Merge the +ve and -ve datasets into a combined dataset with charge as a RooCategory.

!============================== v1r2 28-07-2011 ==============================

! 2011-07-28 - Diego Martinez Santos
 - Make version v1r2.

! 2011-07-05 - Andrew Powell
 - Package now has dependance on PhysFit/RooPhysFitter instead of PIDCalib/CalibDataProduction
   + All fitting and dataset production performed using instances of:
     - RooDMassFitter (1D fit)
     - RooDstarD0MassFitter (2D Fit)
 
!============================== v1r1 18-04-2011 ==============================

! 2011-04-18 - Diego Martinez Santos
 - Make version v1r1.

! 2011-01-11 - Andrew Powell
 - First import of package
