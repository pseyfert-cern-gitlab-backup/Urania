/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
 * This code was autogenerated by RooClassFactory                            *
 *****************************************************************************/

#ifndef COMBBKGPTPDF
#define COMBBKGPTPDF

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"


class CombBkgPTPdf : public RooAbsPdf {
public:
  CombBkgPTPdf() {};
  CombBkgPTPdf(const char *name, const char *title,
	      RooAbsReal& _t,
	      RooAbsReal& _a,
	      RooAbsReal& _f,
	      RooAbsReal& _alpha,
	      RooAbsReal& _beta);
  CombBkgPTPdf(const CombBkgPTPdf& other, const char* name=0);
  TObject* clone(const char* newname) const override { return new CombBkgPTPdf(*this,newname); }
  inline virtual ~CombBkgPTPdf() { }

  Int_t getAnalyticalIntegral(
	  RooArgSet& allVars, RooArgSet& integVars, const char* range) const override;
  Double_t analyticalIntegral(Int_t code, const char* range) const override;

protected:

  RooRealProxy t;
  RooRealProxy a;
  RooRealProxy f;
  RooRealProxy alpha;
  RooRealProxy beta;

  Double_t evaluate() const override;

private:
  static double monoInt(double t, double a, double alpha);

  ClassDefOverride(CombBkgPTPdf,1) // Your description goes here...
};

#endif
