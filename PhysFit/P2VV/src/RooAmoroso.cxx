/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 
#include <string>

#include "Riostream.h" 

#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 

#include "P2VV/RooAmoroso.h" 

RooAmoroso::RooAmoroso(const char *name, const char *title, 
                       RooAbsReal& _x,
                       RooAbsReal& _a,
                       RooAbsReal& _theta,
                       RooAbsReal& _alpha,
                       RooAbsReal& _beta):
RooAbsPdf(name,title), 
   x("x","x",this,_x),
   a("a","a",this,_a),
   theta("theta","theta",this,_theta),
   alpha("alpha","alpha",this,_alpha),
   beta("beta","beta",this,_beta)
   
{ 
} 


RooAmoroso::RooAmoroso(const RooAmoroso& other, const char* name) :  
   RooAbsPdf(other,name), 
   x("x",this,other.x),
   a("a",this,other.a),
   theta("theta",this,other.theta),
   alpha("alpha",this,other.alpha),
   beta("beta",this,other.beta)
{ 
} 



Double_t RooAmoroso::evaluate() const 
{ 
   if (alpha <= 0.) {
      throw std::string("Alpha must always be >= 0");
   }
   double thetai = 1./theta;
   double ji = (x-a)*thetai;
   return pow( ji,alpha*beta-1)*exp(-pow(ji,beta));
} 
