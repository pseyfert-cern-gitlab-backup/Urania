diff --git a/roofit/roofit/src/RooLegendre.cxx b/roofit/roofit/src/RooLegendre.cxx
index 9b7199f..6d85f3d 100644
--- a/roofit/roofit/src/RooLegendre.cxx
+++ b/roofit/roofit/src/RooLegendre.cxx
@@ -100,11 +100,15 @@ Double_t RooLegendre::evaluate() const
 
 //_____________________________________________________________________________
 namespace {
-    bool fullRange(const RooRealProxy& x ,const char* range) 
-    { return range==0 || strlen(range)==0 
-          || ( x.min(range) == x.min() && x.max(range) == x.max() ) ; 
-    }
+  Bool_t fullRange(const RooRealProxy& x ,const char* range)
+  {
+    return range == 0 || strlen(range) == 0
+        ? std::fabs(x.min() + 1.) < 1.e-8 && std::fabs(x.max() - 1.) < 1.e-8
+        : std::fabs(x.min(range) + 1.) < 1.e-8 && std::fabs(x.max(range) - 1.) < 1.e-8;
+  }
 }
+
+//_____________________________________________________________________________
 Int_t RooLegendre::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName) const 
 {
   // don't support indefinite integrals...
diff --git a/roofit/roofit/src/RooSpHarmonic.cxx b/roofit/roofit/src/RooSpHarmonic.cxx
index 440fad3..75087ba 100644
--- a/roofit/roofit/src/RooSpHarmonic.cxx
+++ b/roofit/roofit/src/RooSpHarmonic.cxx
@@ -112,23 +112,31 @@ Double_t RooSpHarmonic::evaluate() const
     return n;
 }
 
+//_____________________________________________________________________________
 namespace {
-    bool fullRange(const RooRealProxy& x ,const char* range)  {
-      return ( x.min(range) == x.min() && x.max(range) == x.max() ) ; 
+  Bool_t fullRange(const RooRealProxy& x, const char* range, Bool_t phi)
+  {
+    if (phi) {
+      return range == 0 || strlen(range) == 0
+          ? std::fabs(x.max() - x.min() - TMath::TwoPi()) < 1.e-8
+          : std::fabs(x.max(range) - x.min(range) - TMath::TwoPi()) < 1.e-8;
     }
+
+    return range == 0 || strlen(range) == 0
+        ? std::fabs(x.min() + 1.) < 1.e-8 && std::fabs(x.max() - 1.) < 1.e-8
+        : std::fabs(x.min(range) + 1.) < 1.e-8 && std::fabs(x.max(range) - 1.) < 1.e-8;
+  }
 }
 
 //_____________________________________________________________________________
 Int_t RooSpHarmonic::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName) const 
 {
-  // TODO: check that phi.max - phi.min = 2 pi... ctheta.max = +1, and ctheta.min = -1
   // we don't support indefinite integrals... maybe one day, when there is a use for it.....
-  bool noRange  = ( rangeName == 0 || strlen(rangeName)==0 );
-  bool phiOK    = ( noRange || fullRange(_phi,rangeName) );
-  bool cthetaOK = ( noRange || fullRange(_ctheta,rangeName) );
-  if (cthetaOK && phiOK && matchArgs(allVars, analVars, _ctheta,_phi)) return 3;
-  if (            phiOK && matchArgs(allVars, analVars,         _phi)) return 2;
-  return RooLegendre::getAnalyticalIntegral(allVars,analVars,rangeName);
+  Bool_t cthetaOK = fullRange(_ctheta, rangeName, kFALSE);
+  Bool_t phiOK    = fullRange(_phi,    rangeName, kTRUE );
+  if (cthetaOK && phiOK && matchArgs(allVars, analVars, _ctheta, _phi)) return 3;
+  if (            phiOK && matchArgs(allVars, analVars,          _phi)) return 2;
+  return RooLegendre::getAnalyticalIntegral(allVars, analVars, rangeName);
 }
 
 //_____________________________________________________________________________
