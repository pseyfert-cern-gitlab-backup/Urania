/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef ROOPOWERLAW
#define ROOPOWERLAW

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
 
class RooPowerLaw : public RooAbsPdf {
public:
  RooPowerLaw() {} ; 
  RooPowerLaw(const char *name, const char *title,
	      RooAbsReal& _mass,
	      RooAbsReal& _mean,
	      RooAbsReal& _indx);
  RooPowerLaw(const RooPowerLaw& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new RooPowerLaw(*this,newname); }
  inline virtual ~RooPowerLaw() { }
  Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName=0) const ;
  Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const ;


protected:

  RooRealProxy mass ;
  RooRealProxy mean ;
  RooRealProxy indx ;
  
  Double_t evaluate() const ;

private:

  ClassDef(RooPowerLaw,1) // Your description goes here...
};
 
#endif
