/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef KSTAR_EVTGEN_2D
#define KSTAR_EVTGEN_2D

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
 
class Kstar_evtgen_2D : public RooAbsPdf {
public:
  Kstar_evtgen_2D() {} ; 
  Kstar_evtgen_2D(const char *name, const char *title,
	      RooAbsReal& _m1,
	      RooAbsReal& _m2,
	      RooAbsReal& _m0,
	      RooAbsReal& _g0,
	      RooAbsReal& _mDa,
	      RooAbsReal& _mDb,
	      RooAbsReal& _J,
	      RooAbsReal& _MB,
	      RooAbsReal& _MV,
	      RooAbsReal& _l);
  Kstar_evtgen_2D(const Kstar_evtgen_2D& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new Kstar_evtgen_2D(*this,newname); }
  inline virtual ~Kstar_evtgen_2D() { }

  Double_t calculatePDF_1D (Int_t indx) const;//(Double_t m_kst, Double_t m_kstb) const;
  Double_t getPDF_1D (Double_t m_kst, Double_t m_kstb) const;//(Double_t m_kst, Double_t m_kstb) const;
  Double_t getPDF_2D (Double_t mkst, Double_t mkstb) const;//(Double_t m_kst, Double_t m_kstb) const;

  Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName=0) const ;
  Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const ;

protected:

  RooRealProxy m1 ;
  RooRealProxy m2 ;
  RooRealProxy m0 ;
  RooRealProxy g0 ;
  RooRealProxy mDa ;
  RooRealProxy mDb ;
  RooRealProxy J ;
  RooRealProxy MB ;
  RooRealProxy MV ;
  RooRealProxy l ;
  
  Double_t evaluate() const ;

private:

  ClassDef(Kstar_evtgen_2D,1) // Your description goes here...
};
 
#endif
