/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

//#ifndef KSTAR1D_GAMMA
//#define KSTAR1D_GAMMA

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
 
class TwoBW : public RooAbsPdf {
public:
  TwoBW() {} ; 
  TwoBW(const char *name, const char *title,
	RooAbsReal& _m,
	RooAbsReal& _beta,
	RooAbsReal& _phase,
	RooAbsReal& _mlo,
	RooAbsReal& _mhi,
	RooAbsReal& _gammalo,
	RooAbsReal& _gammahi,
	RooAbsReal& _L,
	RooAbsReal& _MB,
	RooAbsReal& _MV);
  TwoBW(const TwoBW& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new TwoBW(*this,newname); }
  inline virtual ~TwoBW() { };



protected:

  RooRealProxy m ;
  RooRealProxy beta ;
  RooRealProxy phase ;
  RooRealProxy mlo ;
  RooRealProxy mhi ;
  RooRealProxy gammalo ;
  RooRealProxy gammahi ;
  RooRealProxy L ;
  RooRealProxy MB ;
  RooRealProxy MV ;
  
  Double_t evaluate() const ;

private:

  ClassDef(TwoBW,1) // Your description goes here...
};


class SingleBW : public RooAbsPdf {
public:
  SingleBW() {} ; 
  SingleBW(const char *name, const char *title,
	RooAbsReal& _m,
	RooAbsReal& _mlo,
	RooAbsReal& _gammalo,
	RooAbsReal& _L,
	RooAbsReal& _MB,
	RooAbsReal& _MV);
  SingleBW(const SingleBW& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new SingleBW(*this,newname); }
  inline virtual ~SingleBW() { };



protected:

  RooRealProxy m ;
  RooRealProxy mlo ;
  RooRealProxy gammalo ;
  RooRealProxy L ;
  RooRealProxy MB ;
  RooRealProxy MV ;
  
  Double_t evaluate() const ;

private:

  ClassDef(SingleBW,1) // Your description goes here...
};
 
//#endif
